/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/services/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fnasher%2FDocuments%2FWork%2FRABWA%2F%D8%B9%D9%82%D9%88%D8%AF%2F%D9%82%D8%A7%D8%B9%D8%A9%20%D9%85%D8%A7%D9%81%D9%8A%D9%80%D9%80%D9%80%D9%80%D8%B1%D8%A7%2Fwebsite%2Ftest%201%2Fapp%2Fservices%2Fpage.tsx&server=false!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fnasher%2FDocuments%2FWork%2FRABWA%2F%D8%B9%D9%82%D9%88%D8%AF%2F%D9%82%D8%A7%D8%B9%D8%A9%20%D9%85%D8%A7%D9%81%D9%8A%D9%80%D9%80%D9%80%D9%80%D8%B1%D8%A7%2Fwebsite%2Ftest%201%2Fapp%2Fservices%2Fpage.tsx&server=false! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/services/page.tsx */ \"(app-pages-browser)/./app/services/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRm5hc2hlciUyRkRvY3VtZW50cyUyRldvcmslMkZSQUJXQSUyRiVEOCVCOSVEOSU4MiVEOSU4OCVEOCVBRiUyRiVEOSU4MiVEOCVBNyVEOCVCOSVEOCVBOSUyMCVEOSU4NSVEOCVBNyVEOSU4MSVEOSU4QSVEOSU4MCVEOSU4MCVEOSU4MCVEOSU4MCVEOCVCMSVEOCVBNyUyRndlYnNpdGUlMkZ0ZXN0JTIwMSUyRmFwcCUyRnNlcnZpY2VzJTJGcGFnZS50c3gmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvP2RmNDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbmFzaGVyL0RvY3VtZW50cy9Xb3JrL1JBQldBL9i52YLZiNivL9mC2KfYudipINmF2KfZgdmK2YDZgNmA2YDYsdinL3dlYnNpdGUvdGVzdCAxL2FwcC9zZXJ2aWNlcy9wYWdlLnRzeFwiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fnasher%2FDocuments%2FWork%2FRABWA%2F%D8%B9%D9%82%D9%88%D8%AF%2F%D9%82%D8%A7%D8%B9%D8%A9%20%D9%85%D8%A7%D9%81%D9%8A%D9%80%D9%80%D9%80%D9%80%D8%B1%D8%A7%2Fwebsite%2Ftest%201%2Fapp%2Fservices%2Fpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/services/page.tsx":
/*!*******************************!*\
  !*** ./app/services/page.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ServicesPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_use_NavigationAnalytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/hooks/useΨNavigationAnalytics */ \"(app-pages-browser)/./hooks/useΨNavigationAnalytics.ts\");\n/* harmony import */ var _utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/utils/styling/tw */ \"(app-pages-browser)/./utils/styling/tw.ts\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/constants */ \"(app-pages-browser)/./lib/constants.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n/**\n * Services page component for Mavera Hall\n * Displays comprehensive service offerings with detailed descriptions\n * Uses custom hooks for analytics and follows Rabwa's clean code standards\n */ function ServicesPage() {\n    _s();\n    /**\n   * Navigation analytics hook for tracking page views and user interactions\n   * Provides comprehensive analytics for page performance analysis\n   */ const { trackPageView } = (0,_hooks_use_NavigationAnalytics__WEBPACK_IMPORTED_MODULE_2__[\"useΨNavigationAnalytics\"])();\n    /**\n   * Logs page load and component mounting for analytics\n   * Tracks page view events for content performance analysis\n   */ (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const logPageLoad = async ()=>{\n            await trackPageView(\"/services\", \"خدماتنا - Mavera Hall Services\", {\n                page: \"Services\",\n                url: window.location.href,\n                userAgent: navigator.userAgent,\n                timestamp: new Date().toISOString(),\n                viewport: {\n                    width: window.innerWidth,\n                    height: window.innerHeight\n                }\n            });\n        };\n        logPageLoad();\n    }, [\n        trackPageView\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        role: \"main\",\n        className: \"min-h-screen pt-20\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)((0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.sectionClasses)(), \"bg-gradient-to-br from-primary-50 to-primary-100\"),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"container-custom\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-center mb-16\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)((0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.headingClasses)(), \"text-primary-900 mb-6\"),\n                                children: [\n                                    \"خدماتنا\",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)(\"block text-primary-600 text-2xl md:text-3xl lg:text-4xl mt-2\"),\n                                        children: \"Our Services\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                        lineNumber: 55,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                lineNumber: 50,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)((0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.textClasses)(), \"text-primary-700 max-w-3xl mx-auto\"),\n                                children: \"نقدم مجموعة شاملة من الخدمات الاحترافية لجعل مناسبتك استثنائية. من التخطيط إلى التنفيذ، نحن هنا لضمان نجاح حدثك.\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                lineNumber: 62,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                        lineNumber: 49,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                    lineNumber: 48,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)((0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.sectionClasses)()),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"container-custom\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.gridClasses)(),\n                        children: _lib_constants__WEBPACK_IMPORTED_MODULE_4__.HALL_SERVICES.map((service, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)((0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.cardClasses)(), \"group hover:shadow-lg transition-all duration-300\", \"transform hover:-translate-y-1\"),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-6 text-primary-600 group-hover:text-primary-700 transition-colors\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"w-16 h-16 mx-auto\",\n                                            dangerouslySetInnerHTML: {\n                                                __html: service.icon\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                            lineNumber: 87,\n                                            columnNumber: 19\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                        lineNumber: 86,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)(\"text-xl font-bold text-primary-900 mb-4\", \"group-hover:text-primary-700 transition-colors\"),\n                                        children: service.title\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                        lineNumber: 94,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)((0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.textClasses)(), \"text-primary-600 mb-6\"),\n                                        children: service.description\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                        lineNumber: 102,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                        className: \"space-y-2\",\n                                        children: service.features.map((feature, featureIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)(\"flex items-center text-sm text-primary-700\", 'before:content-[\"✓\"] before:text-primary-600', \"before:font-bold before:mr-2\"),\n                                                children: feature\n                                            }, featureIndex, false, {\n                                                fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                                lineNumber: 112,\n                                                columnNumber: 21\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                        lineNumber: 110,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, service.title, true, {\n                                fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                lineNumber: 77,\n                                columnNumber: 15\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                        lineNumber: 75,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                    lineNumber: 74,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                lineNumber: 73,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)((0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.sectionClasses)(), \"bg-primary-900 text-white\"),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"container-custom text-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)((0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.headingClasses)(), \"text-white mb-6\"),\n                            children: [\n                                \"احجز مناسبتك الآن\",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)(\"block text-primary-200 text-2xl md:text-3xl lg:text-4xl mt-2\"),\n                                    children: \"Book Your Event Now\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                    lineNumber: 141,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                            lineNumber: 136,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)((0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.textClasses)(), \"text-primary-100 mb-8 max-w-2xl mx-auto\"),\n                            children: \"تواصل معنا اليوم لمناقشة تفاصيل مناسبتك والحصول على عرض سعر مخصص\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                            lineNumber: 148,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex flex-col sm:flex-row gap-4 justify-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                    href: \"/booking\",\n                                    className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)(\"inline-flex items-center justify-center px-8 py-4\", \"bg-white text-primary-900 font-semibold rounded-lg\", \"hover:bg-primary-50 transition-colors\", \"focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2\", \"focus:ring-offset-primary-900\"),\n                                    children: \"احجز الآن\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                    lineNumber: 156,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                    href: \"/contact\",\n                                    className: (0,_utils_styling_tw__WEBPACK_IMPORTED_MODULE_3__.tw)(\"inline-flex items-center justify-center px-8 py-4\", \"border-2 border-white text-white font-semibold rounded-lg\", \"hover:bg-white hover:text-primary-900 transition-colors\", \"focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2\", \"focus:ring-offset-primary-900\"),\n                                    children: \"اتصل بنا\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                                    lineNumber: 169,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                            lineNumber: 155,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                    lineNumber: 135,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n                lineNumber: 131,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nasher/Documents/Work/RABWA/عقود/قاعة مافيــــرا/website/test 1/app/services/page.tsx\",\n        lineNumber: 42,\n        columnNumber: 5\n    }, this);\n}\n_s(ServicesPage, \"DJC4mING8ct0IqrOld3MvsHF+DA=\", false, function() {\n    return [\n        _hooks_use_NavigationAnalytics__WEBPACK_IMPORTED_MODULE_2__[\"useΨNavigationAnalytics\"]\n    ];\n});\n_c = ServicesPage;\nvar _c;\n$RefreshReg$(_c, \"ServicesPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/services/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./hooks/useΨNavigationAnalytics.ts":
/*!******************************************!*\
  !*** ./hooks/useΨNavigationAnalytics.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useΨNavigationAnalytics\": function() { return /* binding */ useΨNavigationAnalytics; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/logger */ \"(app-pages-browser)/./lib/logger.ts\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/errors */ \"(app-pages-browser)/./lib/errors.ts\");\n/**\n * Custom hook for navigation analytics and user interaction tracking\n * Provides comprehensive navigation event logging and analytics\n * Following Rabwa's signature style with Greek prefix and detailed logging\n */ \n\n\n/**\n * Custom hook for comprehensive navigation analytics\n * Provides navigation event tracking with detailed context and performance monitoring\n */ function useΨNavigationAnalytics() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const logger = (0,_lib_logger__WEBPACK_IMPORTED_MODULE_1__.getLogger)();\n    const defaultConfig = {\n        enableDetailedLogging: true,\n        enablePerformanceTracking: true,\n        enableUserBehaviorTracking: true,\n        logLevel: \"info\"\n    };\n    const finalConfig = {\n        ...defaultConfig,\n        ...config\n    };\n    /**\n   * Tracks navigation events with comprehensive context\n   * Logs navigation interactions for analytics and user behavior analysis\n   * \n   * @param eventType - Type of navigation event\n   * @param context - Navigation context and metadata\n   * @param additionalData - Additional data for the event\n   */ const trackNavigationEvent = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.withErrorHandling)(async function(eventType, context) {\n        let additionalData = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        const startTime = performance.now();\n        const navigationContext = {\n            fromPage: context.fromPage || window.location.pathname,\n            toPage: context.toPage || window.location.pathname,\n            fromMobile: context.fromMobile || window.innerWidth < 768,\n            userAgent: context.userAgent || navigator.userAgent,\n            viewport: context.viewport || {\n                width: window.innerWidth,\n                height: window.innerHeight\n            },\n            sessionId: context.sessionId,\n            userId: context.userId\n        };\n        console.log(\"navigation-event-\".concat(Date.now()), {\n            component: \"useΨNavigationAnalytics\",\n            eventType,\n            context: navigationContext,\n            additionalData,\n            timestamp: new Date().toISOString()\n        });\n        // Log navigation event\n        if (finalConfig.enableDetailedLogging) {\n            logger.info(\"Navigation event: \".concat(eventType), {\n                component: \"useΨNavigationAnalytics\",\n                eventType,\n                context: navigationContext,\n                additionalData,\n                timestamp: new Date().toISOString()\n            }, \"user_action\");\n        }\n        // Track user action for analytics\n        if (finalConfig.enableUserBehaviorTracking) {\n            logger.userAction(eventType, navigationContext.userId || \"anonymous\", \"navigation\", \"\".concat(eventType, \"-\").concat(navigationContext.toPage), {\n                ...navigationContext,\n                ...additionalData,\n                timestamp: new Date().toISOString()\n            });\n        }\n        // Performance tracking\n        if (finalConfig.enablePerformanceTracking) {\n            const duration = performance.now() - startTime;\n            logger.info(\"Navigation event tracking completed\", {\n                component: \"useΨNavigationAnalytics\",\n                eventType,\n                duration,\n                timestamp: new Date().toISOString()\n            }, \"performance\");\n        }\n    }), [\n        logger,\n        finalConfig\n    ]);\n    /**\n   * Tracks page view events with comprehensive metadata\n   * Logs page views for analytics and content performance analysis\n   * \n   * @param pagePath - Path of the viewed page\n   * @param pageTitle - Title of the viewed page\n   * @param additionalData - Additional page view data\n   */ const trackPageView = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.withErrorHandling)(async function(pagePath, pageTitle) {\n        let additionalData = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        const navigationContext = {\n            fromPage: document.referrer ? new URL(document.referrer).pathname : \"direct\",\n            toPage: pagePath,\n            fromMobile: window.innerWidth < 768,\n            userAgent: navigator.userAgent,\n            viewport: {\n                width: window.innerWidth,\n                height: window.innerHeight\n            }\n        };\n        await trackNavigationEvent(\"page_view\", navigationContext, {\n            pageTitle,\n            referrer: document.referrer,\n            ...additionalData\n        });\n    }), [\n        trackNavigationEvent\n    ]);\n    /**\n   * Tracks navigation link clicks with detailed context\n   * Logs user navigation patterns for UX optimization\n   * \n   * @param href - Destination URL\n   * @param label - Link label or text\n   * @param fromMobile - Whether click originated from mobile\n   * @param additionalData - Additional click data\n   */ const trackNavigationClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.withErrorHandling)(async function(href, label) {\n        let fromMobile = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, additionalData = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n        const navigationContext = {\n            fromPage: window.location.pathname,\n            toPage: href,\n            fromMobile,\n            userAgent: navigator.userAgent,\n            viewport: {\n                width: window.innerWidth,\n                height: window.innerHeight\n            }\n        };\n        await trackNavigationEvent(\"navigation_click\", navigationContext, {\n            linkLabel: label,\n            linkHref: href,\n            ...additionalData\n        });\n    }), [\n        trackNavigationEvent\n    ]);\n    /**\n   * Tracks mobile menu interactions\n   * Logs mobile navigation patterns for mobile UX optimization\n   * \n   * @param isOpen - Whether menu is being opened or closed\n   * @param additionalData - Additional menu interaction data\n   */ const trackMobileMenuToggle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.withErrorHandling)(async function(isOpen) {\n        let additionalData = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const navigationContext = {\n            fromPage: window.location.pathname,\n            toPage: window.location.pathname,\n            fromMobile: true,\n            userAgent: navigator.userAgent,\n            viewport: {\n                width: window.innerWidth,\n                height: window.innerHeight\n            }\n        };\n        await trackNavigationEvent(\"mobile_menu_toggle\", navigationContext, {\n            menuState: isOpen ? \"opened\" : \"closed\",\n            ...additionalData\n        });\n    }), [\n        trackNavigationEvent\n    ]);\n    /**\n   * Tracks booking call-to-action clicks\n   * Logs booking funnel interactions for conversion optimization\n   * \n   * @param source - Source of the booking CTA\n   * @param fromMobile - Whether click originated from mobile\n   * @param additionalData - Additional booking data\n   */ const trackBookingCTAClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.withErrorHandling)(async function(source) {\n        let fromMobile = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false, additionalData = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        const navigationContext = {\n            fromPage: window.location.pathname,\n            toPage: \"/booking\",\n            fromMobile,\n            userAgent: navigator.userAgent,\n            viewport: {\n                width: window.innerWidth,\n                height: window.innerHeight\n            }\n        };\n        await trackNavigationEvent(\"booking_cta_click\", navigationContext, {\n            ctaSource: source,\n            ...additionalData\n        });\n    }), [\n        trackNavigationEvent\n    ]);\n    /**\n   * Tracks external link clicks\n   * Logs external navigation for security and analytics purposes\n   * \n   * @param externalUrl - External URL being visited\n   * @param linkText - Text of the external link\n   * @param additionalData - Additional external link data\n   */ const trackExternalLinkClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.withErrorHandling)(async function(externalUrl, linkText) {\n        let additionalData = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        const navigationContext = {\n            fromPage: window.location.pathname,\n            toPage: externalUrl,\n            fromMobile: window.innerWidth < 768,\n            userAgent: navigator.userAgent,\n            viewport: {\n                width: window.innerWidth,\n                height: window.innerHeight\n            }\n        };\n        await trackNavigationEvent(\"external_link_click\", navigationContext, {\n            externalUrl,\n            linkText,\n            ...additionalData\n        });\n    }), [\n        trackNavigationEvent\n    ]);\n    return {\n        trackNavigationEvent,\n        trackPageView,\n        trackNavigationClick,\n        trackMobileMenuToggle,\n        trackBookingCTAClick,\n        trackExternalLinkClick,\n        config: finalConfig\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZc6oTmF2aWdhdGlvbkFuYWx5dGljcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0NBSUMsR0FFa0M7QUFDSztBQUNRO0FBMkNoRDs7O0NBR0MsR0FDTSxTQUFTRztRQUNkQyxTQUFBQSxpRUFBNkMsQ0FBQztJQUU5QyxNQUFNQyxTQUFTSixzREFBU0E7SUFFeEIsTUFBTUssZ0JBQTJDO1FBQy9DQyx1QkFBdUI7UUFDdkJDLDJCQUEyQjtRQUMzQkMsNEJBQTRCO1FBQzVCQyxVQUFVO0lBQ1o7SUFFQSxNQUFNQyxjQUFjO1FBQUUsR0FBR0wsYUFBYTtRQUFFLEdBQUdGLE1BQU07SUFBQztJQUVsRDs7Ozs7OztHQU9DLEdBQ0QsTUFBTVEsdUJBQXVCWixrREFBV0EsQ0FDdENFLDhEQUFpQkEsQ0FBQyxlQUNoQlcsV0FDQUM7WUFDQUMsa0ZBQXNDLENBQUM7UUFFdkMsTUFBTUMsWUFBWUMsWUFBWUMsR0FBRztRQUVqQyxNQUFNQyxvQkFBdUM7WUFDM0NDLFVBQVVOLFFBQVFNLFFBQVEsSUFBSUMsT0FBT0MsUUFBUSxDQUFDQyxRQUFRO1lBQ3REQyxRQUFRVixRQUFRVSxNQUFNLElBQUlILE9BQU9DLFFBQVEsQ0FBQ0MsUUFBUTtZQUNsREUsWUFBWVgsUUFBUVcsVUFBVSxJQUFJSixPQUFPSyxVQUFVLEdBQUc7WUFDdERDLFdBQVdiLFFBQVFhLFNBQVMsSUFBSUMsVUFBVUQsU0FBUztZQUNuREUsVUFBVWYsUUFBUWUsUUFBUSxJQUFJO2dCQUM1QkMsT0FBT1QsT0FBT0ssVUFBVTtnQkFDeEJLLFFBQVFWLE9BQU9XLFdBQVc7WUFDNUI7WUFDQUMsV0FBV25CLFFBQVFtQixTQUFTO1lBQzVCQyxRQUFRcEIsUUFBUW9CLE1BQU07UUFDeEI7UUFFQUMsUUFBUUMsR0FBRyxDQUFDLG9CQUErQixPQUFYQyxLQUFLbkIsR0FBRyxLQUFNO1lBQzVDb0IsV0FBVztZQUNYekI7WUFDQUMsU0FBU0s7WUFDVEo7WUFD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d2VicGFjazovL19OX0UvLi9ob29rcy91c2XOqE5hdmlnYXRpb25BbmFseXRpY3MudHM/MWJiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEN1c3RvbSBob29rIGZvciBuYXZpZ2F0aW9uIGFuYWx5dGljcyBhbmQgdXNlciBpbnRlcmFjdGlvbiB0cmFja2luZ1xuICogUHJvdmlkZXMgY29tcHJlaGVuc2l2ZSBuYXZpZ2F0aW9uIGV2ZW50IGxvZ2dpbmcgYW5kIGFuYWx5dGljc1xuICogRm9sbG93aW5nIFJhYndhJ3Mgc2lnbmF0dXJlIHN0eWxlIHdpdGggR3JlZWsgcHJlZml4IGFuZCBkZXRhaWxlZCBsb2dnaW5nXG4gKi9cblxuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IGdldExvZ2dlciB9IGZyb20gJ0AvbGliL2xvZ2dlcidcbmltcG9ydCB7IHdpdGhFcnJvckhhbmRsaW5nIH0gZnJvbSAnQC9saWIvZXJyb3JzJ1xuXG4vKipcbiAqIE5hdmlnYXRpb24gZXZlbnQgdHlwZXMgZm9yIGFuYWx5dGljcyBjYXRlZ29yaXphdGlvblxuICogSGVscHMgaW4gb3JnYW5pemluZyBhbmQgYW5hbHl6aW5nIG5hdmlnYXRpb24gcGF0dGVybnNcbiAqL1xudHlwZSBOYXZpZ2F0aW9uRXZlbnRUeXBlID0gXG4gIHwgJ3BhZ2VfdmlldydcbiAgfCAnbmF2aWdhdGlvbl9jbGljaydcbiAgfCAnbW9iaWxlX21lbnVfdG9nZ2xlJ1xuICB8ICdib29raW5nX2N0YV9jbGljaydcbiAgfCAnZ2FsbGVyeV9uYXZpZ2F0aW9uJ1xuICB8ICdjb250YWN0X25hdmlnYXRpb24nXG4gIHwgJ2V4dGVybmFsX2xpbmtfY2xpY2snXG5cbi8qKlxuICogTmF2aWdhdGlvbiBjb250ZXh0IGZvciBkZXRhaWxlZCBhbmFseXRpY3NcbiAqIFByb3ZpZGVzIHJpY2ggY29udGV4dCBmb3IgbmF2aWdhdGlvbiBldmVudCBhbmFseXNpc1xuICovXG5pbnRlcmZhY2UgTmF2aWdhdGlvbkNvbnRleHQge1xuICBmcm9tUGFnZTogc3RyaW5nXG4gIHRvUGFnZTogc3RyaW5nXG4gIGZyb21Nb2JpbGU6IGJvb2xlYW5cbiAgdXNlckFnZW50OiBzdHJpbmdcbiAgdmlld3BvcnQ6IHtcbiAgICB3aWR0aDogbnVtYmVyXG4gICAgaGVpZ2h0OiBudW1iZXJcbiAgfVxuICBzZXNzaW9uSWQ/OiBzdHJpbmdcbiAgdXNlcklkPzogc3RyaW5nXG59XG5cbi8qKlxuICogTmF2aWdhdGlvbiBhbmFseXRpY3MgY29uZmlndXJhdGlvblxuICogQWxsb3dzIGN1c3RvbWl6YXRpb24gb2YgYW5hbHl0aWNzIGJlaGF2aW9yXG4gKi9cbmludGVyZmFjZSBOYXZpZ2F0aW9uQW5hbHl0aWNzQ29uZmlnIHtcbiAgZW5hYmxlRGV0YWlsZWRMb2dnaW5nOiBib29sZWFuXG4gIGVuYWJsZVBlcmZvcm1hbmNlVHJhY2tpbmc6IGJvb2xlYW5cbiAgZW5hYmxlVXNlckJlaGF2aW9yVHJhY2tpbmc6IGJvb2xlYW5cbiAgbG9nTGV2ZWw6ICdkZWJ1ZycgfCAnaW5mbycgfCAnd2FybicgfCAnZXJyb3InXG59XG5cbi8qKlxuICogQ3VzdG9tIGhvb2sgZm9yIGNvbXByZWhlbnNpdmUgbmF2aWdhdGlvbiBhbmFseXRpY3NcbiAqIFByb3ZpZGVzIG5hdmlnYXRpb24gZXZlbnQgdHJhY2tpbmcgd2l0aCBkZXRhaWxlZCBjb250ZXh0IGFuZCBwZXJmb3JtYW5jZSBtb25pdG9yaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2XOqE5hdmlnYXRpb25BbmFseXRpY3MoXG4gIGNvbmZpZzogUGFydGlhbDxOYXZpZ2F0aW9uQW5hbHl0aWNzQ29uZmlnPiA9IHt9XG4pIHtcbiAgY29uc3QgbG9nZ2VyID0gZ2V0TG9nZ2VyKClcbiAgXG4gIGNvbnN0IGRlZmF1bHRDb25maWc6IE5hdmlnYXRpb25BbmFseXRpY3NDb25maWcgPSB7XG4gICAgZW5hYmxlRGV0YWlsZWRMb2dnaW5nOiB0cnVlLFxuICAgIGVuYWJsZVBlcmZvcm1hbmNlVHJhY2tpbmc6IHRydWUsXG4gICAgZW5hYmxlVXNlckJlaGF2aW9yVHJhY2tpbmc6IHRydWUsXG4gICAgbG9nTGV2ZWw6ICdpbmZvJ1xuICB9XG4gIFxuICBjb25zdCBmaW5hbENvbmZpZyA9IHsgLi4uZGVmYXVsdENvbmZpZywgLi4uY29uZmlnIH1cblxuICAvKipcbiAgICogVHJhY2tzIG5hdmlnYXRpb24gZXZlbnRzIHdpdGggY29tcHJlaGVuc2l2ZSBjb250ZXh0XG4gICAqIExvZ3MgbmF2aWdhdGlvbiBpbnRlcmFjdGlvbnMgZm9yIGFuYWx5dGljcyBhbmQgdXNlciBiZWhhdmlvciBhbmFseXNpc1xuICAgKiBcbiAgICogQHBhcmFtIGV2ZW50VHlwZSAtIFR5cGUgb2YgbmF2aWdhdGlvbiBldmVudFxuICAgKiBAcGFyYW0gY29udGV4dCAtIE5hdmlnYXRpb24gY29udGV4dCBhbmQgbWV0YWRhdGFcbiAgICogQHBhcmFtIGFkZGl0aW9uYWxEYXRhIC0gQWRkaXRpb25hbCBkYXRhIGZvciB0aGUgZXZlbnRcbiAgICovXG4gIGNvbnN0IHRyYWNrTmF2aWdhdGlvbkV2ZW50ID0gdXNlQ2FsbGJhY2soXG4gICAgd2l0aEVycm9ySGFuZGxpbmcoYXN5bmMgKFxuICAgICAgZXZlbnRUeXBlOiBOYXZpZ2F0aW9uRXZlbnRUeXBlLFxuICAgICAgY29udGV4dDogUGFydGlhbDxOYXZpZ2F0aW9uQ29udGV4dD4sXG4gICAgICBhZGRpdGlvbmFsRGF0YTogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9XG4gICAgKSA9PiB7XG4gICAgICBjb25zdCBzdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKVxuICAgICAgXG4gICAgICBjb25zdCBuYXZpZ2F0aW9uQ29udGV4dDogTmF2aWdhdGlvbkNvbnRleHQgPSB7XG4gICAgICAgIGZyb21QYWdlOiBjb250ZXh0LmZyb21QYWdlIHx8IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgdG9QYWdlOiBjb250ZXh0LnRvUGFnZSB8fCB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIGZyb21Nb2JpbGU6IGNvbnRleHQuZnJvbU1vYmlsZSB8fCB3aW5kb3cuaW5uZXJXaWR0aCA8IDc2OCxcbiAgICAgICAgdXNlckFnZW50OiBjb250ZXh0LnVzZXJBZ2VudCB8fCBuYXZpZ2F0b3IudXNlckFnZW50LFxuICAgICAgICB2aWV3cG9ydDogY29udGV4dC52aWV3cG9ydCB8fCB7XG4gICAgICAgICAgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLFxuICAgICAgICAgIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0XG4gICAgICAgIH0sXG4gICAgICAgIHNlc3Npb25JZDogY29udGV4dC5zZXNzaW9uSWQsXG4gICAgICAgIHVzZXJJZDogY29udGV4dC51c2VySWRcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coYG5hdmlnYXRpb24tZXZlbnQtJHtEYXRlLm5vdygpfWAsIHtcbiAgICAgICAgY29tcG9uZW50OiAndXNlzqhOYXZpZ2F0aW9uQW5hbHl0aWNzJyxcbiAgICAgICAgZXZlbnRUeXBlLFxuICAgICAgICBjb250ZXh0OiBuYXZpZ2F0aW9uQ29udGV4dCxcbiAgICAgICAgYWRkaXRpb25hbERhdGEsXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICB9KVxuXG4gICAgICAvLyBMb2cgbmF2aWdhdGlvbiBldmVudFxuICAgICAgaWYgKGZpbmFsQ29uZmlnLmVuYWJsZURldGFpbGVkTG9nZ2luZykge1xuICAgICAgICBsb2dnZXIuaW5mbyhgTmF2aWdhdGlvbiBldmVudDogJHtldmVudFR5cGV9YCwge1xuICAgICAgICAgIGNvbXBvbmVudDogJ3VzZc6oTmF2aWdhdGlvbkFuYWx5dGljcycsXG4gICAgICAgICAgZXZlbnRUeXBlLFxuICAgICAgICAgIGNvbnRleHQ6IG5hdmlnYXRpb25Db250ZXh0LFxuICAgICAgICAgIGFkZGl0aW9uYWxEYXRhLFxuICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICAgIH0sICd1c2VyX2FjdGlvbicpXG4gICAgICB9XG5cbiAgICAgIC8vIFRyYWNrIHVzZXIgYWN0aW9uIGZvciBhbmFseXRpY3NcbiAgICAgIGlmIChmaW5hbENvbmZpZy5lbmFibGVVc2VyQmVoYXZpb3JUcmFja2luZykge1xuICAgICAgICBsb2dnZXIudXNlckFjdGlvbihcbiAgICAgICAgICBldmVudFR5cGUsXG4gICAgICAgICAgbmF2aWdhdGlvbkNvbnRleHQudXNlcklkIHx8ICdhbm9ueW1vdXMnLFxuICAgICAgICAgICduYXZpZ2F0aW9uJyxcbiAgICAgICAgICBgJHtldmVudFR5cGV9LSR7bmF2aWdhdGlvbkNvbnRleHQudG9QYWdlfWAsXG4gICAgICAgICAge1xuICAgICAgICAgICAgLi4ubmF2aWdhdGlvbkNvbnRleHQsXG4gICAgICAgICAgICAuLi5hZGRpdGlvbmFsRGF0YSxcbiAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICAgICAgfVxuICAgICAgICApXG4gICAgICB9XG5cbiAgICAgIC8vIFBlcmZvcm1hbmNlIHRyYWNraW5nXG4gICAgICBpZiAoZmluYWxDb25maWcuZW5hYmxlUGVyZm9ybWFuY2VUcmFja2luZykge1xuICAgICAgICBjb25zdCBkdXJhdGlvbiA9IHBlcmZvcm1hbmNlLm5vdygpIC0gc3RhcnRUaW1lXG4gICAgICAgIGxvZ2dlci5pbmZvKCdOYXZpZ2F0aW9uIGV2ZW50IHRyYWNraW5nIGNvbXBsZXRlZCcsIHtcbiAgICAgICAgICBjb21wb25lbnQ6ICd1c2XOqE5hdmlnYXRpb25BbmFseXRpY3MnLFxuICAgICAgICAgIGV2ZW50VHlwZSxcbiAgICAgICAgICBkdXJhdGlvbixcbiAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgICB9LCAncGVyZm9ybWFuY2UnKVxuICAgICAgfVxuICAgIH0pLFxuICAgIFtsb2dnZXIsIGZpbmFsQ29uZmlnXVxuICApXG5cbiAgLyoqXG4gICAqIFRyYWNrcyBwYWdlIHZpZXcgZXZlbnRzIHdpdGggY29tcHJlaGVuc2l2ZSBtZXRhZGF0YVxuICAgKiBMb2dzIHBhZ2Ugdmlld3MgZm9yIGFuYWx5dGljcyBhbmQgY29udGVudCBwZXJmb3JtYW5jZSBhbmFseXNpc1xuICAgKiBcbiAgICogQHBhcmFtIHBhZ2VQYXRoIC0gUGF0aCBvZiB0aGUgdmlld2VkIHBhZ2VcbiAgICogQHBhcmFtIHBhZ2VUaXRsZSAtIFRpdGxlIG9mIHRoZSB2aWV3ZWQgcGFnZVxuICAgKiBAcGFyYW0gYWRkaXRpb25hbERhdGEgLSBBZGRpdGlvbmFsIHBhZ2UgdmlldyBkYXRhXG4gICAqL1xuICBjb25zdCB0cmFja1BhZ2VWaWV3ID0gdXNlQ2FsbGJhY2soXG4gICAgd2l0aEVycm9ySGFuZGxpbmcoYXN5bmMgKFxuICAgICAgcGFnZVBhdGg6IHN0cmluZyxcbiAgICAgIHBhZ2VUaXRsZTogc3RyaW5nLFxuICAgICAgYWRkaXRpb25hbERhdGE6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fVxuICAgICkgPT4ge1xuICAgICAgY29uc3QgbmF2aWdhdGlvbkNvbnRleHQ6IE5hdmlnYXRpb25Db250ZXh0ID0ge1xuICAgICAgICBmcm9tUGFnZTogZG9jdW1lbnQucmVmZXJyZXIgPyBuZXcgVVJMKGRvY3VtZW50LnJlZmVycmVyKS5wYXRobmFtZSA6ICdkaXJlY3QnLFxuICAgICAgICB0b1BhZ2U6IHBhZ2VQYXRoLFxuICAgICAgICBmcm9tTW9iaWxlOiB3aW5kb3cuaW5uZXJXaWR0aCA8IDc2OCxcbiAgICAgICAgdXNlckFnZW50OiBuYXZpZ2F0b3IudXNlckFnZW50LFxuICAgICAgICB2aWV3cG9ydDoge1xuICAgICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCxcbiAgICAgICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodFxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGF3YWl0IHRyYWNrTmF2aWdhdGlvbkV2ZW50KCdwYWdlX3ZpZXcnLCBuYXZpZ2F0aW9uQ29udGV4dCwge1xuICAgICAgICBwYWdlVGl0bGUsXG4gICAgICAgIHJlZmVycmVyOiBkb2N1bWVudC5yZWZlcnJlcixcbiAgICAgICAgLi4uYWRkaXRpb25hbERhdGFcbiAgICAgIH0pXG4gICAgfSksXG4gICAgW3RyYWNrTmF2aWdhdGlvbkV2ZW50XVxuICApXG5cbiAgLyoqXG4gICAqIFRyYWNrcyBuYXZpZ2F0aW9uIGxpbmsgY2xpY2tzIHdpdGggZGV0YWlsZWQgY29udGV4dFxuICAgKiBMb2dzIHVzZXIgbmF2aWdhdGlvbiBwYXR0ZXJucyBmb3IgVVggb3B0aW1pemF0aW9uXG4gICAqIFxuICAgKiBAcGFyYW0gaHJlZiAtIERlc3RpbmF0aW9uIFVSTFxuICAgKiBAcGFyYW0gbGFiZWwgLSBMaW5rIGxhYmVsIG9yIHRleHRcbiAgICogQHBhcmFtIGZyb21Nb2JpbGUgLSBXaGV0aGVyIGNsaWNrIG9yaWdpbmF0ZWQgZnJvbSBtb2JpbGVcbiAgICogQHBhcmFtIGFkZGl0aW9uYWxEYXRhIC0gQWRkaXRpb25hbCBjbGljayBkYXRhXG4gICAqL1xuICBjb25zdCB0cmFja05hdmlnYXRpb25DbGljayA9IHVzZUNhbGxiYWNrKFxuICAgIHdpdGhFcnJvckhhbmRsaW5nKGFzeW5jIChcbiAgICAgIGhyZWY6IHN0cmluZyxcbiAgICAgIGxhYmVsOiBzdHJpbmcsXG4gICAgICBmcm9tTW9iaWxlOiBib29sZWFuID0gZmFsc2UsXG4gICAgICBhZGRpdGlvbmFsRGF0YTogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9XG4gICAgKSA9PiB7XG4gICAgICBjb25zdCBuYXZpZ2F0aW9uQ29udGV4dDogTmF2aWdhdGlvbkNvbnRleHQgPSB7XG4gICAgICAgIGZyb21QYWdlOiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHRvUGFnZTogaHJlZixcbiAgICAgICAgZnJvbU1vYmlsZSxcbiAgICAgICAgdXNlckFnZW50OiBuYXZpZ2F0b3IudXNlckFnZW50LFxuICAgICAgICB2aWV3cG9ydDoge1xuICAgICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCxcbiAgICAgICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodFxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGF3YWl0IHRyYWNrTmF2aWdhdGlvbkV2ZW50KCduYXZpZ2F0aW9uX2NsaWNrJywgbmF2aWdhdGlvbkNvbnRleHQsIHtcbiAgICAgICAgbGlua0xhYmVsOiBsYWJlbCxcbiAgICAgICAgbGlua0hyZWY6IGhyZWYsXG4gICAgICAgIC4uLmFkZGl0aW9uYWxEYXRhXG4gICAgICB9KVxuICAgIH0pLFxuICAgIFt0cmFja05hdmlnYXRpb25FdmVudF1cbiAgKVxuXG4gIC8qKlxuICAgKiBUcmFja3MgbW9iaWxlIG1lbnUgaW50ZXJhY3Rpb25zXG4gICAqIExvZ3MgbW9iaWxlIG5hdmlnYXRpb24gcGF0dGVybnMgZm9yIG1vYmlsZSBVWCBvcHRpbWl6YXRpb25cbiAgICogXG4gICAqIEBwYXJhbSBpc09wZW4gLSBXaGV0aGVyIG1lbnUgaXMgYmVpbmcgb3BlbmVkIG9yIGNsb3NlZFxuICAgKiBAcGFyYW0gYWRkaXRpb25hbERhdGEgLSBBZGRpdGlvbmFsIG1lbnUgaW50ZXJhY3Rpb24gZGF0YVxuICAgKi9cbiAgY29uc3QgdHJhY2tNb2JpbGVNZW51VG9nZ2xlID0gdXNlQ2FsbGJhY2soXG4gICAgd2l0aEVycm9ySGFuZGxpbmcoYXN5bmMgKFxuICAgICAgaXNPcGVuOiBib29sZWFuLFxuICAgICAgYWRkaXRpb25hbERhdGE6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fVxuICAgICkgPT4ge1xuICAgICAgY29uc3QgbmF2aWdhdGlvbkNvbnRleHQ6IE5hdmlnYXRpb25Db250ZXh0ID0ge1xuICAgICAgICBmcm9tUGFnZTogd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICB0b1BhZ2U6IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgZnJvbU1vYmlsZTogdHJ1ZSxcbiAgICAgICAgdXNlckFnZW50OiBuYXZpZ2F0b3IudXNlckFnZW50LFxuICAgICAgICB2aWV3cG9ydDoge1xuICAgICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCxcbiAgICAgICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodFxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGF3YWl0IHRyYWNrTmF2aWdhdGlvbkV2ZW50KCdtb2JpbGVfbWVudV90b2dnbGUnLCBuYXZpZ2F0aW9uQ29udGV4dCwge1xuICAgICAgICBtZW51U3RhdGU6IGlzT3BlbiA/ICdvcGVuZWQnIDogJ2Nsb3NlZCcsXG4gICAgICAgIC4uLmFkZGl0aW9uYWxEYXRhXG4gICAgICB9KVxuICAgIH0pLFxuICAgIFt0cmFja05hdmlnYXRpb25FdmVudF1cbiAgKVxuXG4gIC8qKlxuICAgKiBUcmFja3MgYm9va2luZyBjYWxsLXRvLWFjdGlvbiBjbGlja3NcbiAgICogTG9ncyBib29raW5nIGZ1bm5lbCBpbnRlcmFjdGlvbnMgZm9yIGNvbnZlcnNpb24gb3B0aW1pemF0aW9uXG4gICAqIFxuICAgKiBAcGFyYW0gc291cmNlIC0gU291cmNlIG9mIHRoZSBib29raW5nIENUQVxuICAgKiBAcGFyYW0gZnJvbU1vYmlsZSAtIFdoZXRoZXIgY2xpY2sgb3JpZ2luYXRlZCBmcm9tIG1vYmlsZVxuICAgKiBAcGFyYW0gYWRkaXRpb25hbERhdGEgLSBBZGRpdGlvbmFsIGJvb2tpbmcgZGF0YVxuICAgKi9cbiAgY29uc3QgdHJhY2tCb29raW5nQ1RBQ2xpY2sgPSB1c2VDYWxsYmFjayhcbiAgICB3aXRoRXJyb3JIYW5kbGluZyhhc3luYyAoXG4gICAgICBzb3VyY2U6IHN0cmluZyxcbiAgICAgIGZyb21Nb2JpbGU6IGJvb2xlYW4gPSBmYWxzZSxcbiAgICAgIGFkZGl0aW9uYWxEYXRhOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0ge31cbiAgICApID0+IHtcbiAgICAgIGNvbnN0IG5hdmlnYXRpb25Db250ZXh0OiBOYXZpZ2F0aW9uQ29udGV4dCA9IHtcbiAgICAgICAgZnJvbVBhZ2U6IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgdG9QYWdlOiAnL2Jvb2tpbmcnLFxuICAgICAgICBmcm9tTW9iaWxlLFxuICAgICAgICB1c2VyQWdlbnQ6IG5hdmlnYXRvci51c2VyQWdlbnQsXG4gICAgICAgIHZpZXdwb3J0OiB7XG4gICAgICAgICAgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLFxuICAgICAgICAgIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgYXdhaXQgdHJhY2tOYXZpZ2F0aW9uRXZlbnQoJ2Jvb2tpbmdfY3RhX2NsaWNrJywgbmF2aWdhdGlvbkNvbnRleHQsIHtcbiAgICAgICAgY3RhU291cmNlOiBzb3VyY2UsXG4gICAgICAgIC4uLmFkZGl0aW9uYWxEYXRhXG4gICAgICB9KVxuICAgIH0pLFxuICAgIFt0cmFja05hdmlnYXRpb25FdmVudF1cbiAgKVxuXG4gIC8qKlxuICAgKiBUcmFja3MgZXh0ZXJuYWwgbGluayBjbGlja3NcbiAgICogTG9ncyBleHRlcm5hbCBuYXZpZ2F0aW9uIGZvciBzZWN1cml0eSBhbmQgYW5hbHl0aWNzIHB1cnBvc2VzXG4gICAqIFxuICAgKiBAcGFyYW0gZXh0ZXJuYWxVcmwgLSBFeHRlcm5hbCBVUkwgYmVpbmcgdmlzaXRlZFxuICAgKiBAcGFyYW0gbGlua1RleHQgLSBUZXh0IG9mIHRoZSBleHRlcm5hbCBsaW5rXG4gICAqIEBwYXJhbSBhZGRpdGlvbmFsRGF0YSAtIEFkZGl0aW9uYWwgZXh0ZXJuYWwgbGluayBkYXRhXG4gICAqL1xuICBjb25zdCB0cmFja0V4dGVybmFsTGlua0NsaWNrID0gdXNlQ2FsbGJhY2soXG4gICAgd2l0aEVycm9ySGFuZGxpbmcoYXN5bmMgKFxuICAgICAgZXh0ZXJuYWxVcmw6IHN0cmluZyxcbiAgICAgIGxpbmtUZXh0OiBzdHJpbmcsXG4gICAgICBhZGRpdGlvbmFsRGF0YTogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9XG4gICAgKSA9PiB7XG4gICAgICBjb25zdCBuYXZpZ2F0aW9uQ29udGV4dDogTmF2aWdhdGlvbkNvbnRleHQgPSB7XG4gICAgICAgIGZyb21QYWdlOiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHRvUGFnZTogZXh0ZXJuYWxVcmwsXG4gICAgICAgIGZyb21Nb2JpbGU6IHdpbmRvdy5pbm5lcldpZHRoIDwgNzY4LFxuICAgICAgICB1c2VyQWdlbnQ6IG5hdmlnYXRvci51c2VyQWdlbnQsXG4gICAgICAgIHZpZXdwb3J0OiB7XG4gICAgICAgICAgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLFxuICAgICAgICAgIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgYXdhaXQgdHJhY2tOYXZpZ2F0aW9uRXZlbnQoJ2V4dGVybmFsX2xpbmtfY2xpY2snLCBuYXZpZ2F0aW9uQ29udGV4dCwge1xuICAgICAgICBleHRlcm5hbFVybCxcbiAgICAgICAgbGlua1RleHQsXG4gICAgICAgIC4uLmFkZGl0aW9uYWxEYXRhXG4gICAgICB9KVxuICAgIH0pLFxuICAgIFt0cmFja05hdmlnYXRpb25FdmVudF1cbiAgKVxuXG4gIHJldHVybiB7XG4gICAgdHJhY2tOYXZpZ2F0aW9uRXZlbnQsXG4gICAgdHJhY2tQYWdlVmlldyxcbiAgICB0cmFja05hdmlnYXRpb25DbGljayxcbiAgICB0cmFja01vYmlsZU1lbnVUb2dnbGUsXG4gICAgdHJhY2tCb29raW5nQ1RBQ2xpY2ssXG4gICAgdHJhY2tFeHRlcm5hbExpbmtDbGljayxcbiAgICBjb25maWc6IGZpbmFsQ29uZmlnXG4gIH1cbn0gIl0sIm5hbWVzIjpbInVzZUNhbGxiYWNrIiwiZ2V0TG9nZ2VyIiwid2l0aEVycm9ySGFuZGxpbmciLCJ1c2XOqE5hdmlnYXRpb25BbmFseXRpY3MiLCJjb25maWciLCJsb2dnZXIiLCJkZWZhdWx0Q29uZmlnIiwiZW5hYmxlRGV0YWlsZWRMb2dnaW5nIiwiZW5hYmxlUGVyZm9ybWFuY2VUcmFja2luZyIsImVuYWJsZVVzZXJCZWhhdmlvclRyYWNraW5nIiwibG9nTGV2ZWwiLCJmaW5hbENvbmZpZyIsInRyYWNrTmF2aWdhdGlvbkV2ZW50IiwiZXZlbnRUeXBlIiwiY29udGV4dCIsImFkZGl0aW9uYWxEYXRhIiwic3RhcnRUaW1lIiwicGVyZm9ybWFuY2UiLCJub3ciLCJuYXZpZ2F0aW9uQ29udGV4dCIsImZyb21QYWdlIiwid2luZG93IiwibG9jYXRpb24iLCJwYXRobmFtZSIsInRvUGFnZSIsImZyb21Nb2JpbGUiLCJpbm5lcldpZHRoIiwidXNlckFnZW50IiwibmF2aWdhdG9yIiwidmlld3BvcnQiLCJ3aWR0aCIsImhlaWdodCIsImlubmVySGVpZ2h0Iiwic2Vzc2lvbklkIiwidXNlcklkIiwiY29uc29sZSIsImxvZyIsIkRhdGUiLCJjb21wb25lbnQiLCJ0aW1lc3RhbXAiLCJ0b0lTT1N0cmluZyIsImluZm8iLCJ1c2VyQWN0aW9uIiwiZHVyYXRpb24iLCJ0cmFja1BhZ2VWaWV3IiwicGFnZVBhdGgiLCJwYWdlVGl0bGUiLCJkb2N1bWVudCIsInJlZmVycmVyIiwiVVJMIiwidHJhY2tOYXZpZ2F0aW9uQ2xpY2siLCJocmVmIiwibGFiZWwiLCJsaW5rTGFiZWwiLCJsaW5rSHJlZiIsInRyYWNrTW9iaWxlTWVudVRvZ2dsZSIsImlzT3BlbiIsIm1lbnVTdGF0ZSIsInRyYWNrQm9va2luZ0NUQUNsaWNrIiwic291cmNlIiwiY3RhU291cmNlIiwidHJhY2tFeHRlcm5hbExpbmtDbGljayIsImV4dGVybmFsVXJsIiwibGlua1RleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useΨNavigationAnalytics.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/constants.ts":
/*!**************************!*\
  !*** ./lib/constants.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_ENDPOINTS: function() { return /* binding */ API_ENDPOINTS; },\n/* harmony export */   BOOKING_CONSTRAINTS: function() { return /* binding */ BOOKING_CONSTRAINTS; },\n/* harmony export */   CONTACT_INFO: function() { return /* binding */ CONTACT_INFO; },\n/* harmony export */   CURRENCY_CONFIG: function() { return /* binding */ CURRENCY_CONFIG; },\n/* harmony export */   DATE_FORMATS: function() { return /* binding */ DATE_FORMATS; },\n/* harmony export */   ERROR_MESSAGES: function() { return /* binding */ ERROR_MESSAGES; },\n/* harmony export */   EVENT_TYPES: function() { return /* binding */ EVENT_TYPES; },\n/* harmony export */   GALLERY_IMAGES: function() { return /* binding */ GALLERY_IMAGES; },\n/* harmony export */   HALL_SERVICES: function() { return /* binding */ HALL_SERVICES; },\n/* harmony export */   HALL_STATISTICS: function() { return /* binding */ HALL_STATISTICS; },\n/* harmony export */   HTTP_STATUS_CODES: function() { return /* binding */ HTTP_STATUS_CODES; },\n/* harmony export */   NAVIGATION_ITEMS: function() { return /* binding */ NAVIGATION_ITEMS; },\n/* harmony export */   NAVIGATION_MENU_ITEMS: function() { return /* binding */ NAVIGATION_MENU_ITEMS; },\n/* harmony export */   PASSWORD_REQUIREMENTS: function() { return /* binding */ PASSWORD_REQUIREMENTS; },\n/* harmony export */   TESTIMONIALS: function() { return /* binding */ TESTIMONIALS; },\n/* harmony export */   TOAST_CONFIG: function() { return /* binding */ TOAST_CONFIG; },\n/* harmony export */   USER_ROLES: function() { return /* binding */ USER_ROLES; },\n/* harmony export */   VALIDATION_PATTERNS: function() { return /* binding */ VALIDATION_PATTERNS; }\n/* harmony export */ });\n/**\n * Application-wide constants following clean code principles\n * Organized by domain and purpose for maximum readability\n */ // ============================================================================\n// VALIDATION PATTERNS\n// ============================================================================\n/**\n * Regular expressions for common validation patterns\n * Used across forms and input validation throughout the application\n */ const VALIDATION_PATTERNS = {\n    email: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n    phone: /^\\+?[\\d\\s-()]+$/,\n    arabicText: /^[\\u0600-\\u06FF\\s]+$/,\n    englishText: /^[a-zA-Z\\s]+$/,\n    alphanumeric: /^[a-zA-Z0-9]+$/,\n    strongPassword: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n};\n/**\n * Password requirements for validation\n */ const PASSWORD_REQUIREMENTS = {\n    minLength: 8,\n    requireUppercase: true,\n    requireLowercase: true,\n    requireNumbers: true,\n    requireSpecialChars: true,\n    specialChars: \"@$!%*?&\"\n};\n// =============================================================================\n// CONTACT INFORMATION\n// =============================================================================\n/**\n * Contact information for Mavera Hall\n * Centralized contact details used across the application\n */ const CONTACT_INFO = [\n    {\n        type: \"phone\",\n        label: \"الهاتف\",\n        value: \"+966 50 123 4567\",\n        description: \"متاح 24/7 للاستفسارات العاجلة\"\n    },\n    {\n        type: \"email\",\n        label: \"البريد الإلكتروني\",\n        value: \"info@maverahall.com\",\n        description: \"للاستفسارات العامة والحجوزات\"\n    },\n    {\n        type: \"address\",\n        label: \"العنوان\",\n        value: \"شارع الأناقة 123، حي الفخامة، المدينة\",\n        description: \"موقع مميز في قلب المدينة\"\n    },\n    {\n        type: \"hours\",\n        label: \"ساعات العمل\",\n        value: \"السبت - الخميس: 9:00 ص - 11:00 م\",\n        description: \"الجمعة: 2:00 م - 11:00 م\"\n    }\n];\n// ============================================================================\n// USER INTERFACE CONSTANTS\n// ============================================================================\n/**\n * Navigation menu items with proper typing and organization\n * Centralized for consistency across navigation components\n */ const NAVIGATION_MENU_ITEMS = [\n    {\n        href: \"/\",\n        label: \"Home\",\n        isExternal: false\n    },\n    {\n        href: \"/gallery\",\n        label: \"Gallery\",\n        isExternal: false\n    },\n    {\n        href: \"/hall-details\",\n        label: \"Hall Details\",\n        isExternal: false\n    },\n    {\n        href: \"/faqs\",\n        label: \"FAQs\",\n        isExternal: false\n    },\n    {\n        href: \"/about\",\n        label: \"About\",\n        isExternal: false\n    },\n    {\n        href: \"/contact\",\n        label: \"Contact\",\n        isExternal: false\n    },\n    {\n        href: \"/booking\",\n        label: \"Book Now\",\n        isExternal: false\n    }\n];\n/**\n * Navigation menu items for the main navbar\n */ const NAVIGATION_ITEMS = [\n    {\n        href: \"/\",\n        label: \"الرئيسية\",\n        ariaLabel: \"الصفحة الرئيسية لقاعة مافيرا\"\n    },\n    {\n        href: \"/about\",\n        label: \"من نحن\",\n        ariaLabel: \"معلومات عن قاعة مافيرا\"\n    },\n    {\n        href: \"/services\",\n        label: \"خدماتنا\",\n        ariaLabel: \"خدمات قاعة مافيرا\"\n    },\n    {\n        href: \"/gallery\",\n        label: \"المعرض\",\n        ariaLabel: \"معرض صور قاعة مافيرا\"\n    },\n    {\n        href: \"/contact\",\n        label: \"اتصل بنا\",\n        ariaLabel: \"تواصل مع قاعة مافيرا\"\n    }\n];\n/**\n * Hall statistics for the about section\n */ const HALL_STATISTICS = [\n    {\n        value: \"500+\",\n        label: \"عملاء سعداء\",\n        description: \"Happy Clients\"\n    },\n    {\n        value: \"10+\",\n        label: \"سنوات خبرة\",\n        description: \"Years Experience\"\n    },\n    {\n        value: \"1000+\",\n        label: \"حفل ناجح\",\n        description: \"Successful Events\"\n    },\n    {\n        value: \"24/7\",\n        label: \"دعم العملاء\",\n        description: \"Customer Support\"\n    }\n];\n/**\n * Hall services for the services section\n */ const HALL_SERVICES = [\n    {\n        title: \"حفلات الزفاف\",\n        description: \"اجعل يوم زفافك مثالياً مع باقات الزفاف الشاملة ودعم التخطيط المتخصص.\",\n        icon: '<svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"/></svg>',\n        features: [\n            \"تخطيط شامل للحفل\",\n            \"تنسيق الزهور والديكور\",\n            \"خدمة طعام فاخرة\",\n            \"تصوير احترافي\",\n            \"موسيقى وإضاءة\"\n        ]\n    },\n    {\n        title: \"الفعاليات المؤسسية\",\n        description: \"بيئات مهنية للمؤتمرات والاجتماعات والاحتفالات المؤسسية مع وسائل راحة حديثة.\",\n        icon: '<svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\"/></svg>',\n        features: [\n            \"قاعات اجتماعات مجهزة\",\n            \"أنظمة عرض حديثة\",\n            \"خدمة ضيافة مهنية\",\n            \"دعم تقني متكامل\",\n            \"مواقف سيارات واسعة\"\n        ]\n    },\n    {\n        title: \"الحفلات الخاصة\",\n        description: \"تجمعات حميمة واحتفالات بالمناسبات المهمة في جو أنيق ومخصص.\",\n        icon: '<svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"/></svg>',\n        features: [\n            \"تخطيط مخصص للحدث\",\n            \"قوائم طعام متنوعة\",\n            \"ترفيه وأنشطة\",\n            \"خدمة شخصية\",\n            \"أجواء مريحة وأنيقة\"\n        ]\n    },\n    {\n        title: \"المناسبات الثقافية\",\n        description: \"استضافة الفعاليات الثقافية والتراثية بأسلوب يحترم التقاليد ويضيف لمسة عصرية.\",\n        icon: '<svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/></svg>',\n        features: [\n            \"ديكور تراثي أصيل\",\n            \"برامج ثقافية متنوعة\",\n            \"ضيافة تقليدية\",\n            \"مساحات مرنة\",\n            \"دعم للفعاليات التراثية\"\n        ]\n    },\n    {\n        title: \"احتفالات التخرج\",\n        description: \"احتفل بإنجازاتك الأكاديمية في بيئة تليق بهذه المناسبة المهمة.\",\n        icon: '<svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z\"/></svg>',\n        features: [\n            \"تنظيم حفلات التخرج\",\n            \"تصوير الذكريات\",\n            \"ضيافة للعائلات\",\n            \"مساحة للعروض\",\n            \"تنسيق مع الجامعات\"\n        ]\n    },\n    {\n        title: \"المعارض والمؤتمرات\",\n        description: \"مساحات مثالية لاستضافة المعارض والمؤتمرات المهنية بأعلى المعايير.\",\n        icon: '<svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\"/></svg>',\n        features: [\n            \"مساحات عرض واسعة\",\n            \"أنظمة صوتية متقدمة\",\n            \"إضاءة احترافية\",\n            \"دعم لوجستي\",\n            \"خدمات الضيافة\"\n        ]\n    }\n];\n/**\n * Client testimonials for Mavera Hall\n * Real customer feedback and reviews\n */ const TESTIMONIALS = [\n    {\n        id: \"1\",\n        clientName: \"سارة ومحمد الأحمد\",\n        eventType: \"حفل زفاف\",\n        eventDate: \"مارس 2024\",\n        rating: 5,\n        text: \"قاعة مافيرا فاقت كل توقعاتنا. المكان كان رائعاً والخدمة كانت احترافية للغاية. فريق العمل اهتم بكل التفاصيل وجعل يوم زفافنا لا يُنسى.\"\n    },\n    {\n        id: \"2\",\n        clientName: \"شركة التقنية المتقدمة\",\n        eventType: \"مؤتمر شركات\",\n        eventDate: \"فبراير 2024\",\n        rating: 5,\n        text: \"أناقة وفخامة قاعة مافيرا جعلت مؤتمرنا السنوي حدثاً مميزاً ومهنياً. الإضاءة والصوتيات كانت مثالية، والضيافة راقية جداً.\"\n    },\n    {\n        id: \"3\",\n        clientName: \"عائلة الخالدي\",\n        eventType: \"حفل تخرج\",\n        eventDate: \"يناير 2024\",\n        rating: 5,\n        text: \"احتفلنا بتخرج ابنتنا في قاعة مافيرا وكانت تجربة رائعة. المكان أنيق والطعام لذيذ، وكل الضيوف أعجبوا بالمكان والتنظيم.\"\n    },\n    {\n        id: \"4\",\n        clientName: \"أحمد وفاطمة العلي\",\n        eventType: \"حفل خطوبة\",\n        eventDate: \"ديسمبر 2023\",\n        rating: 5,\n        text: \"قاعة مافيرا كانت الخيار الأمثل لحفل خطوبتنا. الديكور الراقي والإضاءة الرومانسية خلقت أجواءً ساحرة لن ننساها أبداً.\"\n    },\n    {\n        id: \"5\",\n        clientName: \"نادي الأعمال الخيري\",\n        eventType: \"حفل خيري\",\n        eventDate: \"نوفمبر 2023\",\n        rating: 5,\n        text: \"نظمنا حفلنا الخيري السنوي في قاعة مافيرا وحقق نجاحاً باهراً. المكان يليق بأهمية المناسبة والخدمة كانت على أعلى مستوى.\"\n    },\n    {\n        id: \"6\",\n        clientName: \"عائلة المنصوري\",\n        eventType: \"عيد ميلاد\",\n        eventDate: \"أكتوبر 2023\",\n        rating: 5,\n        text: \"احتفلنا بعيد ميلاد والدنا الثمانين في قاعة مافيرا. كان حفلاً عائلياً دافئاً في مكان فخم، وكل التفاصيل كانت مدروسة بعناية.\"\n    }\n];\n/**\n * Toast notification configuration\n */ const TOAST_CONFIG = {\n    duration: 4000,\n    position: \"top-right\",\n    style: {\n        background: \"#363636\",\n        color: \"#fff\"\n    }\n};\n// ============================================================================\n// BUSINESS LOGIC CONSTANTS\n// ============================================================================\n/**\n * Hall booking business rules and constraints\n * Centralized for easy maintenance and consistency\n */ const BOOKING_CONSTRAINTS = {\n    minimumGuestCount: 50,\n    maximumGuestCount: 500,\n    minimumAdvanceBookingDays: 30,\n    maximumAdvanceBookingDays: 365,\n    cancellationDeadlineDays: 14,\n    depositPercentage: 0.3,\n    lateCancellationFeePercentage: 0.1\n};\n/**\n * Event types supported by the venue\n * Used for categorization and pricing calculations\n */ const EVENT_TYPES = [\n    \"wedding\",\n    \"engagement\",\n    \"birthday\",\n    \"corporate\",\n    \"graduation\",\n    \"anniversary\",\n    \"conference\",\n    \"other\"\n];\n/**\n * User roles with proper hierarchy and permissions\n * Defines access levels throughout the application\n */ const USER_ROLES = {\n    visitor: {\n        level: 0,\n        label: \"Visitor\"\n    },\n    client: {\n        level: 1,\n        label: \"Client\"\n    },\n    support: {\n        level: 2,\n        label: \"Support Staff\"\n    },\n    admin: {\n        level: 3,\n        label: \"Administrator\"\n    },\n    superadmin: {\n        level: 4,\n        label: \"Super Administrator\"\n    }\n};\n// ============================================================================\n// API AND EXTERNAL SERVICE CONSTANTS\n// ============================================================================\n/**\n * API endpoint configurations with proper organization\n * Centralized for easy maintenance and environment management\n */ const API_ENDPOINTS = {\n    auth: {\n        login: \"/api/auth/login\",\n        logout: \"/api/auth/logout\",\n        register: \"/api/auth/register\",\n        refreshToken: \"/api/auth/refresh\",\n        forgotPassword: \"/api/auth/forgot-password\",\n        resetPassword: \"/api/auth/reset-password\"\n    },\n    users: {\n        profile: \"/api/users/profile\",\n        updateProfile: \"/api/users/profile\",\n        changePassword: \"/api/users/change-password\"\n    },\n    bookings: {\n        create: \"/api/bookings\",\n        list: \"/api/bookings\",\n        details: (id)=>\"/api/bookings/\".concat(id),\n        update: (id)=>\"/api/bookings/\".concat(id),\n        cancel: (id)=>\"/api/bookings/\".concat(id, \"/cancel\")\n    },\n    gallery: {\n        images: \"/api/gallery/images\",\n        upload: \"/api/gallery/upload\",\n        delete: (id)=>\"/api/gallery/images/\".concat(id)\n    }\n};\n// ============================================================================\n// EXPORTS\n// ============================================================================\n// Gallery Images Data\nconst GALLERY_IMAGES = [\n    {\n        id: \"gallery-1\",\n        url: \"/images/gallery/wedding-1.jpg\",\n        thumbnailUrl: \"/images/gallery/thumbs/wedding-1.jpg\",\n        title: \"حفل زفاف أنيق\",\n        description: \"حفل زفاف راقي في قاعة مافيرا مع إضاءة رومانسية\",\n        category: \"weddings\",\n        tags: [\n            \"زفاف\",\n            \"رومانسي\",\n            \"أنيق\"\n        ],\n        altText: \"حفل زفاف أنيق في قاعة مافيرا\",\n        eventDate: new Date(\"2024-01-15\"),\n        isPublic: true,\n        isFeatured: true,\n        sortOrder: 1,\n        dimensions: {\n            width: 1920,\n            height: 1080\n        },\n        fileSize: 2048000,\n        mimeType: \"image/jpeg\",\n        createdAt: new Date(\"2024-01-01\"),\n        updatedAt: new Date(\"2024-01-01\")\n    },\n    {\n        id: \"gallery-2\",\n        url: \"/images/gallery/corporate-1.jpg\",\n        thumbnailUrl: \"/images/gallery/thumbs/corporate-1.jpg\",\n        title: \"مؤتمر الأعمال\",\n        description: \"مؤتمر شركات بتجهيزات احترافية ومتطورة\",\n        category: \"corporate_events\",\n        tags: [\n            \"مؤتمر\",\n            \"أعمال\",\n            \"احترافي\"\n        ],\n        altText: \"مؤتمر الأعمال في قاعة مافيرا\",\n        eventDate: new Date(\"2024-02-10\"),\n        isPublic: true,\n        isFeatured: false,\n        sortOrder: 2,\n        dimensions: {\n            width: 1920,\n            height: 1080\n        },\n        fileSize: 1856000,\n        mimeType: \"image/jpeg\",\n        createdAt: new Date(\"2024-01-02\"),\n        updatedAt: new Date(\"2024-01-02\")\n    },\n    {\n        id: \"gallery-3\",\n        url: \"/images/gallery/party-1.jpg\",\n        thumbnailUrl: \"/images/gallery/thumbs/party-1.jpg\",\n        title: \"حفلة تخرج\",\n        description: \"احتفال تخرج مميز مع ديكورات احتفالية\",\n        category: \"birthday_parties\",\n        tags: [\n            \"تخرج\",\n            \"احتفال\",\n            \"ديكورات\"\n        ],\n        altText: \"حفلة تخرج في قاعة مافيرا\",\n        eventDate: new Date(\"2024-03-05\"),\n        isPublic: true,\n        isFeatured: false,\n        sortOrder: 3,\n        dimensions: {\n            width: 1920,\n            height: 1080\n        },\n        fileSize: 1792000,\n        mimeType: \"image/jpeg\",\n        createdAt: new Date(\"2024-01-03\"),\n        updatedAt: new Date(\"2024-01-03\")\n    },\n    {\n        id: \"gallery-4\",\n        url: \"/images/gallery/venue-1.jpg\",\n        thumbnailUrl: \"/images/gallery/thumbs/venue-1.jpg\",\n        title: \"القاعة الرئيسية\",\n        description: \"إطلالة شاملة على القاعة الرئيسية وتصميمها الفاخر\",\n        category: \"venue_interior\",\n        tags: [\n            \"قاعة\",\n            \"تصميم\",\n            \"فاخر\"\n        ],\n        altText: \"القاعة الرئيسية في مافيرا\",\n        eventDate: undefined,\n        isPublic: true,\n        isFeatured: true,\n        sortOrder: 4,\n        dimensions: {\n            width: 1920,\n            height: 1080\n        },\n        fileSize: 2304000,\n        mimeType: \"image/jpeg\",\n        createdAt: new Date(\"2024-01-04\"),\n        updatedAt: new Date(\"2024-01-04\")\n    },\n    {\n        id: \"gallery-5\",\n        url: \"/images/gallery/wedding-2.jpg\",\n        thumbnailUrl: \"/images/gallery/thumbs/wedding-2.jpg\",\n        title: \"حفل زفاف ملكي\",\n        description: \"حفل زفاف بطابع ملكي مع ديكورات ذهبية فاخرة\",\n        category: \"weddings\",\n        tags: [\n            \"زفاف\",\n            \"ملكي\",\n            \"ذهبي\"\n        ],\n        altText: \"حفل زفاف ملكي في قاعة مافيرا\",\n        eventDate: new Date(\"2024-01-28\"),\n        isPublic: true,\n        isFeatured: true,\n        sortOrder: 5,\n        dimensions: {\n            width: 1920,\n            height: 1080\n        },\n        fileSize: 2176000,\n        mimeType: \"image/jpeg\",\n        createdAt: new Date(\"2024-01-05\"),\n        updatedAt: new Date(\"2024-01-05\")\n    },\n    {\n        id: \"gallery-6\",\n        url: \"/images/gallery/corporate-2.jpg\",\n        thumbnailUrl: \"/images/gallery/thumbs/corporate-2.jpg\",\n        title: \"ندوة تقنية\",\n        description: \"ندوة تقنية مع أحدث أجهزة العرض والصوت\",\n        category: \"corporate_events\",\n        tags: [\n            \"ندوة\",\n            \"تقنية\",\n            \"عرض\"\n        ],\n        altText: \"ندوة تقنية في قاعة مافيرا\",\n        eventDate: new Date(\"2024-02-20\"),\n        isPublic: true,\n        isFeatured: false,\n        sortOrder: 6,\n        dimensions: {\n            width: 1920,\n            height: 1080\n        },\n        fileSize: 1920000,\n        mimeType: \"image/jpeg\",\n        createdAt: new Date(\"2024-01-06\"),\n        updatedAt: new Date(\"2024-01-06\")\n    },\n    {\n        id: \"gallery-7\",\n        url: \"/images/gallery/party-2.jpg\",\n        thumbnailUrl: \"/images/gallery/thumbs/party-2.jpg\",\n        title: \"حفلة عيد ميلاد\",\n        description: \"احتفال عيد ميلاد مميز مع ديكورات ملونة\",\n        category: \"birthday_parties\",\n        tags: [\n            \"عيد ميلاد\",\n            \"احتفال\",\n            \"ملون\"\n        ],\n        altText: \"حفلة عيد ميلاد في قاعة مافيرا\",\n        eventDate: new Date(\"2024-03-12\"),\n        isPublic: true,\n        isFeatured: false,\n        sortOrder: 7,\n        dimensions: {\n            width: 1920,\n            height: 1080\n        },\n        fileSize: 1664000,\n        mimeType: \"image/jpeg\",\n        createdAt: new Date(\"2024-01-07\"),\n        updatedAt: new Date(\"2024-01-07\")\n    },\n    {\n        id: \"gallery-8\",\n        url: \"/images/gallery/venue-2.jpg\",\n        thumbnailUrl: \"/images/gallery/thumbs/venue-2.jpg\",\n        title: \"منطقة الاستقبال\",\n        description: \"منطقة الاستقبال الأنيقة مع تصميم عصري\",\n        category: \"venue_interior\",\n        tags: [\n            \"استقبال\",\n            \"أنيق\",\n            \"عصري\"\n        ],\n        altText: \"منطقة الاستقبال في قاعة مافيرا\",\n        eventDate: undefined,\n        isPublic: true,\n        isFeatured: false,\n        sortOrder: 8,\n        dimensions: {\n            width: 1920,\n            height: 1080\n        },\n        fileSize: 2240000,\n        mimeType: \"image/jpeg\",\n        createdAt: new Date(\"2024-01-08\"),\n        updatedAt: new Date(\"2024-01-08\")\n    },\n    {\n        id: \"gallery-9\",\n        url: \"/images/gallery/wedding-3.jpg\",\n        thumbnailUrl: \"/images/gallery/thumbs/wedding-3.jpg\",\n        title: \"حفل خطوبة رومانسي\",\n        description: \"حفل خطوبة رومانسي مع إضاءة دافئة وورود\",\n        category: \"weddings\",\n        tags: [\n            \"خطوبة\",\n            \"رومانسي\",\n            \"ورود\"\n        ],\n        altText: \"حفل خطوبة رومانسي في قاعة مافيرا\",\n        eventDate: new Date(\"2024-02-14\"),\n        isPublic: true,\n        isFeatured: false,\n        sortOrder: 9,\n        dimensions: {\n            width: 1920,\n            height: 1080\n        },\n        fileSize: 1792000,\n        mimeType: \"image/jpeg\",\n        createdAt: new Date(\"2024-01-09\"),\n        updatedAt: new Date(\"2024-01-09\")\n    }\n];\n// All constants are exported individually above with 'export const'\n// No need for a collective export block\n/**\n * HTTP status codes with descriptive names\n * Improves code readability and error handling\n */ const HTTP_STATUS_CODES = {\n    OK: 200,\n    CREATED: 201,\n    NO_CONTENT: 204,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    FORBIDDEN: 403,\n    NOT_FOUND: 404,\n    CONFLICT: 409,\n    UNPROCESSABLE_ENTITY: 422,\n    INTERNAL_SERVER_ERROR: 500,\n    SERVICE_UNAVAILABLE: 503\n};\n// ============================================================================\n// FORMATTING AND DISPLAY CONSTANTS\n// ============================================================================\n/**\n * Date and time formatting options\n * Ensures consistent date display across the application\n */ const DATE_FORMATS = {\n    shortDate: {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n    },\n    longDate: {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n    },\n    dateTime: {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    },\n    timeOnly: {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    }\n};\n/**\n * Currency formatting configuration\n * Centralized for consistent price display\n */ const CURRENCY_CONFIG = {\n    locale: \"en-US\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n};\n// ============================================================================\n// ERROR MESSAGES\n// ============================================================================\n/**\n * Standardized error messages for consistent user experience\n * Organized by category for easy maintenance\n */ const ERROR_MESSAGES = {\n    validation: {\n        required: \"This field is required\",\n        invalidEmail: \"Please enter a valid email address\",\n        invalidPhone: \"Please enter a valid phone number\",\n        passwordTooWeak: \"Password must be at least 8 characters with uppercase, lowercase, number, and special character\",\n        passwordMismatch: \"Passwords do not match\"\n    },\n    authentication: {\n        invalidCredentials: \"Invalid email or password\",\n        sessionExpired: \"Your session has expired. Please log in again\",\n        accessDenied: \"You do not have permission to access this resource\"\n    },\n    booking: {\n        dateUnavailable: \"The selected date is not available\",\n        guestCountExceeded: \"Guest count must be between \".concat(BOOKING_CONSTRAINTS.minimumGuestCount, \" and \").concat(BOOKING_CONSTRAINTS.maximumGuestCount),\n        advanceBookingRequired: \"Bookings must be made at least \".concat(BOOKING_CONSTRAINTS.minimumAdvanceBookingDays, \" days in advance\"),\n        cancellationDeadlinePassed: \"Cancellations must be made at least \".concat(BOOKING_CONSTRAINTS.cancellationDeadlineDays, \" days before the event\")\n    },\n    network: {\n        connectionError: \"Unable to connect to the server. Please check your internet connection\",\n        serverError: \"An unexpected error occurred. Please try again later\",\n        timeoutError: \"Request timed out. Please try again\"\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/constants.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/errors.ts":
/*!***********************!*\
  !*** ./lib/errors.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticationError: function() { return /* binding */ AuthenticationError; },\n/* harmony export */   AuthorizationError: function() { return /* binding */ AuthorizationError; },\n/* harmony export */   BaseApplicationError: function() { return /* binding */ BaseApplicationError; },\n/* harmony export */   BusinessRuleError: function() { return /* binding */ BusinessRuleError; },\n/* harmony export */   ConfigurationError: function() { return /* binding */ ConfigurationError; },\n/* harmony export */   ConflictError: function() { return /* binding */ ConflictError; },\n/* harmony export */   DatabaseError: function() { return /* binding */ DatabaseError; },\n/* harmony export */   ExternalServiceError: function() { return /* binding */ ExternalServiceError; },\n/* harmony export */   NotFoundError: function() { return /* binding */ NotFoundError; },\n/* harmony export */   RateLimitError: function() { return /* binding */ RateLimitError; },\n/* harmony export */   ValidationError: function() { return /* binding */ ValidationError; },\n/* harmony export */   getUserFriendlyMessage: function() { return /* binding */ getUserFriendlyMessage; },\n/* harmony export */   isOperationalError: function() { return /* binding */ isOperationalError; },\n/* harmony export */   toErrorResponse: function() { return /* binding */ toErrorResponse; },\n/* harmony export */   withContext: function() { return /* binding */ withContext; },\n/* harmony export */   withErrorHandling: function() { return /* binding */ withErrorHandling; },\n/* harmony export */   withRetry: function() { return /* binding */ withRetry; }\n/* harmony export */ });\n/**\n * Comprehensive error handling system following clean code principles\n * Provides descriptive error classes and graceful fallback mechanisms\n */ // ============================================================================\n// BASE ERROR CLASSES\n// ============================================================================\n/**\n * Base application error class with enhanced context information\n * Provides foundation for all custom error types\n */ class BaseApplicationError extends Error {\n    /**\n   * Converts error to JSON format for logging and API responses\n   * Provides structured error information\n   */ toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            code: this.code,\n            statusCode: this.statusCode,\n            userMessage: this.userMessage,\n            context: this.context,\n            timestamp: this.timestamp.toISOString(),\n            stack: this.stack\n        };\n    }\n    /**\n   * Creates user-friendly error message for display\n   * Hides technical details from end users\n   */ getUserFriendlyMessage() {\n        return this.userMessage || \"An unexpected error occurred. Please try again.\";\n    }\n    constructor(message, code, statusCode, userMessage, context = {}, isOperational = true){\n        super(message);\n        this.name = this.constructor.name;\n        this.code = code;\n        this.statusCode = statusCode;\n        this.userMessage = userMessage;\n        this.context = context;\n        this.isOperational = isOperational;\n        this.timestamp = new Date();\n        // Maintains proper stack trace for debugging\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\n// ============================================================================\n// VALIDATION ERROR CLASSES\n// ============================================================================\n/**\n * Validation error for form and input validation failures\n * Provides detailed field-level error information\n */ class ValidationError extends BaseApplicationError {\n    /**\n   * Creates validation error from field-specific errors\n   * Aggregates multiple field errors into single error\n   */ static fromFieldErrors(fieldErrors) {\n        const message = \"Validation failed for \".concat(fieldErrors.length, \" field(s)\");\n        return new ValidationError(message, fieldErrors);\n    }\n    /**\n   * Adds additional field error to existing validation error\n   * Enables building validation errors incrementally\n   */ addFieldError(field, message, code) {\n        this.fieldErrors.push({\n            field,\n            message,\n            code\n        });\n    }\n    /**\n   * Checks if specific field has validation error\n   * Useful for conditional error handling\n   */ hasFieldError(field) {\n        return this.fieldErrors.some((error)=>error.field === field);\n    }\n    /**\n   * Gets error message for specific field\n   * Returns first error message for the field\n   */ getFieldError(field) {\n        const fieldError = this.fieldErrors.find((error)=>error.field === field);\n        return fieldError === null || fieldError === void 0 ? void 0 : fieldError.message;\n    }\n    constructor(message, fieldErrors = [], context = {}){\n        super(message, \"VALIDATION_ERROR\", 400, \"Please check your input and try again.\", {\n            ...context,\n            fieldErrors\n        }, true);\n        this.fieldErrors = fieldErrors;\n    }\n}\n/**\n * Business rule validation error\n * Handles domain-specific validation failures\n */ class BusinessRuleError extends BaseApplicationError {\n    constructor(message, rule, violatedConstraints = [], context = {}){\n        super(message, \"BUSINESS_RULE_ERROR\", 422, \"This action violates business rules. Please review and try again.\", {\n            ...context,\n            rule,\n            violatedConstraints\n        }, true);\n        this.rule = rule;\n        this.violatedConstraints = violatedConstraints;\n    }\n}\n// ============================================================================\n// AUTHENTICATION AND AUTHORIZATION ERRORS\n// ============================================================================\n/**\n * Authentication error for login and credential failures\n * Handles user authentication issues\n */ class AuthenticationError extends BaseApplicationError {\n    /**\n   * Creates authentication error for invalid credentials\n   * Standard error for login failures\n   */ static invalidCredentials(attemptCount) {\n        return new AuthenticationError(\"Invalid email or password provided\", \"Invalid email or password. Please try again.\", {\n            attemptCount\n        });\n    }\n    /**\n   * Creates authentication error for account lockout\n   * Handles security lockout scenarios\n   */ static accountLocked(lockoutTime) {\n        return new AuthenticationError(\"Account temporarily locked due to multiple failed attempts\", \"Account locked. Please try again after \".concat(lockoutTime.toLocaleTimeString(), \".\"), {\n            lockoutTime\n        });\n    }\n    /**\n   * Creates authentication error for expired session\n   * Handles session timeout scenarios\n   */ static sessionExpired() {\n        return new AuthenticationError(\"User session has expired\", \"Your session has expired. Please log in again.\", {\n            reason: \"session_expired\"\n        });\n    }\n    constructor(message, userMessage = \"Invalid credentials. Please try again.\", context = {}){\n        super(message, \"AUTHENTICATION_ERROR\", 401, userMessage, context, true);\n        this.attemptCount = context.attemptCount;\n        this.lockoutTime = context.lockoutTime;\n    }\n}\n/**\n * Authorization error for permission and access control failures\n * Handles user permission issues\n */ class AuthorizationError extends BaseApplicationError {\n    /**\n   * Creates authorization error for insufficient permissions\n   * Standard error for access control failures\n   */ static insufficientPermissions(required, current) {\n        return new AuthorizationError(\"Insufficient permissions. Required: \".concat(required.join(\", \")), required, current);\n    }\n    /**\n   * Creates authorization error for resource access\n   * Handles resource-specific access control\n   */ static resourceAccessDenied(resourceType, resourceId) {\n        return new AuthorizationError(\"Access denied to \".concat(resourceType, \" with ID: \").concat(resourceId), [], [], {\n            resourceType,\n            resourceId\n        });\n    }\n    constructor(message, requiredPermissions = [], userPermissions = [], context = {}){\n        super(message, \"AUTHORIZATION_ERROR\", 403, \"You do not have permission to perform this action.\", {\n            ...context,\n            requiredPermissions,\n            userPermissions\n        }, true);\n        this.requiredPermissions = requiredPermissions;\n        this.userPermissions = userPermissions;\n    }\n}\n// ============================================================================\n// RESOURCE AND DATA ERRORS\n// ============================================================================\n/**\n * Resource not found error for missing entities\n * Handles cases where requested resources don't exist\n */ class NotFoundError extends BaseApplicationError {\n    /**\n   * Creates not found error for user entities\n   * Specialized error for user-related resources\n   */ static user(userId) {\n        return new NotFoundError(\"User\", userId);\n    }\n    /**\n   * Creates not found error for hall entities\n   * Specialized error for hall-related resources\n   */ static hall(hallId) {\n        return new NotFoundError(\"Hall\", hallId);\n    }\n    /**\n   * Creates not found error for booking entities\n   * Specialized error for booking-related resources\n   */ static booking(bookingId) {\n        return new NotFoundError(\"Booking\", bookingId);\n    }\n    constructor(resourceType, resourceId, context = {}){\n        const message = \"\".concat(resourceType, \" with ID '\").concat(resourceId, \"' not found\");\n        const userMessage = \"The requested \".concat(resourceType.toLowerCase(), \" could not be found.\");\n        super(message, \"RESOURCE_NOT_FOUND\", 404, userMessage, {\n            ...context,\n            resourceType,\n            resourceId\n        }, true);\n        this.resourceType = resourceType;\n        this.resourceId = resourceId;\n    }\n}\n/**\n * Conflict error for resource state conflicts\n * Handles cases where resource state prevents operation\n */ class ConflictError extends BaseApplicationError {\n    /**\n   * Creates conflict error for duplicate resources\n   * Handles unique constraint violations\n   */ static duplicateResource(resourceType, field, value) {\n        return new ConflictError(\"\".concat(resourceType, \" with \").concat(field, \" '\").concat(value, \"' already exists\"), \"duplicate\", resourceType, \"A \".concat(resourceType.toLowerCase(), \" with this \").concat(field, \" already exists.\"), {\n            field,\n            value\n        });\n    }\n    /**\n   * Creates conflict error for booking conflicts\n   * Handles scheduling conflicts for hall bookings\n   */ static bookingConflict(hallId, date, timeSlot) {\n        return new ConflictError(\"Hall \".concat(hallId, \" is already booked for \").concat(date.toDateString(), \" at \").concat(timeSlot), \"booking_conflict\", \"Hall\", \"This hall is already booked for the selected date and time.\", {\n            hallId,\n            date: date.toISOString(),\n            timeSlot\n        });\n    }\n    constructor(message, conflictType, conflictingResource, userMessage, context = {}){\n        super(message, \"RESOURCE_CONFLICT\", 409, userMessage, {\n            ...context,\n            conflictType,\n            conflictingResource\n        }, true);\n        this.conflictType = conflictType;\n        this.conflictingResource = conflictingResource;\n    }\n}\n// ============================================================================\n// EXTERNAL SERVICE ERRORS\n// ============================================================================\n/**\n * External service error for third-party API failures\n * Handles integration and external dependency issues\n */ class ExternalServiceError extends BaseApplicationError {\n    /**\n   * Creates external service error for payment processing\n   * Handles payment gateway failures\n   */ static paymentService(error) {\n        let retryable = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        return new ExternalServiceError(\"Payment processing failed: \".concat(error.message), \"Payment Gateway\", error, retryable, {\n            errorCode: error.code\n        });\n    }\n    /**\n   * Creates external service error for email service\n   * Handles email delivery failures\n   */ static emailService(error) {\n        let retryable = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        return new ExternalServiceError(\"Email delivery failed: \".concat(error.message), \"Email Service\", error, retryable);\n    }\n    /**\n   * Creates external service error for SMS service\n   * Handles SMS delivery failures\n   */ static smsService(error) {\n        let retryable = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        return new ExternalServiceError(\"SMS delivery failed: \".concat(error.message), \"SMS Service\", error, retryable);\n    }\n    constructor(message, serviceName, serviceResponse, retryable = true, context = {}){\n        super(message, \"EXTERNAL_SERVICE_ERROR\", 502, \"A service is temporarily unavailable. Please try again later.\", {\n            ...context,\n            serviceName,\n            serviceResponse,\n            retryable\n        }, true);\n        this.serviceName = serviceName;\n        this.serviceResponse = serviceResponse;\n        this.retryable = retryable;\n    }\n}\n/**\n * Rate limit error for API throttling\n * Handles rate limiting and quota exceeded scenarios\n */ class RateLimitError extends BaseApplicationError {\n    constructor(limit, resetTime, retryAfter, context = {}){\n        const message = \"Rate limit exceeded. Limit: \".concat(limit, \", Reset: \").concat(resetTime.toISOString());\n        const userMessage = \"Too many requests. Please try again in \".concat(Math.ceil(retryAfter / 1000), \" seconds.\");\n        super(message, \"RATE_LIMIT_EXCEEDED\", 429, userMessage, {\n            ...context,\n            limit,\n            resetTime: resetTime.toISOString(),\n            retryAfter\n        }, true);\n        this.limit = limit;\n        this.resetTime = resetTime;\n        this.retryAfter = retryAfter;\n    }\n}\n// ============================================================================\n// SYSTEM AND INFRASTRUCTURE ERRORS\n// ============================================================================\n/**\n * Database error for data persistence failures\n * Handles database connection and query issues\n */ class DatabaseError extends BaseApplicationError {\n    /**\n   * Creates database error for connection failures\n   * Handles database connectivity issues\n   */ static connectionFailed(error) {\n        return new DatabaseError(\"Database connection failed: \".concat(error.message), \"connect\", undefined, undefined, {\n            originalError: error\n        });\n    }\n    /**\n   * Creates database error for query timeouts\n   * Handles slow or hanging queries\n   */ static queryTimeout(query, timeout) {\n        return new DatabaseError(\"Query timeout after \".concat(timeout, \"ms\"), \"query\", undefined, query, {\n            timeout\n        });\n    }\n    constructor(message, operation, table, query, context = {}){\n        super(message, \"DATABASE_ERROR\", 500, \"A database error occurred. Please try again later.\", {\n            ...context,\n            operation,\n            table,\n            query\n        }, false);\n        this.operation = operation;\n        this.table = table;\n        this.query = query;\n    }\n}\n/**\n * Configuration error for application setup issues\n * Handles missing or invalid configuration\n */ class ConfigurationError extends BaseApplicationError {\n    /**\n   * Creates configuration error for missing values\n   * Handles required configuration that's not set\n   */ static missingRequired(key) {\n        return new ConfigurationError(\"Required configuration '\".concat(key, \"' is missing\"), key);\n    }\n    /**\n   * Creates configuration error for invalid values\n   * Handles configuration with wrong type or format\n   */ static invalidValue(key, value, expectedType) {\n        return new ConfigurationError(\"Configuration '\".concat(key, \"' has invalid value '\").concat(value, \"', expected \").concat(expectedType), key, expectedType, {\n            actualValue: value\n        });\n    }\n    constructor(message, configKey, expectedType, context = {}){\n        super(message, \"CONFIGURATION_ERROR\", 500, \"Application configuration error. Please contact support.\", {\n            ...context,\n            configKey,\n            expectedType\n        }, false);\n        this.configKey = configKey;\n        this.expectedType = expectedType;\n    }\n}\n// ============================================================================\n// ERROR UTILITY FUNCTIONS\n// ============================================================================\n/**\n * Determines if an error is operational (expected) or programming error\n * Helps in error handling and logging decisions\n */ function isOperationalError(error) {\n    if (error instanceof BaseApplicationError) {\n        return error.isOperational;\n    }\n    return false;\n}\n/**\n * Extracts user-friendly message from any error\n * Provides safe error message extraction\n */ function getUserFriendlyMessage(error) {\n    if (error instanceof BaseApplicationError) {\n        return error.getUserFriendlyMessage();\n    }\n    // Default fallback for unknown errors\n    return \"An unexpected error occurred. Please try again.\";\n}\n/**\n * Converts any error to standardized error response\n * Ensures consistent error format across the application\n */ function toErrorResponse(error) {\n    if (error instanceof BaseApplicationError) {\n        return error.toJSON();\n    }\n    // Handle unknown errors safely\n    return {\n        name: error.name || \"UnknownError\",\n        message: error.message || \"An unknown error occurred\",\n        code: \"UNKNOWN_ERROR\",\n        statusCode: 500,\n        userMessage: \"An unexpected error occurred. Please try again.\",\n        context: {},\n        timestamp: new Date().toISOString(),\n        stack: error.stack\n    };\n}\n/**\n * Creates error with enhanced context information\n * Adds request context to errors for better debugging\n */ function withContext(error, context) {\n    Object.assign(error.context, context);\n    return error;\n}\n/**\n * Wraps async functions with error handling\n * Provides consistent error handling for async operations\n */ function withErrorHandling(fn) {\n    return async function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        try {\n            return await fn(...args);\n        } catch (error) {\n            // Log error for debugging\n            console.error(\"Error in wrapped function:\", {\n                error: error instanceof Error ? error.message : error,\n                stack: error instanceof Error ? error.stack : undefined,\n                args: args.length > 0 ? args : undefined,\n                timestamp: new Date().toISOString()\n            });\n            // Re-throw the error to maintain error flow\n            throw error;\n        }\n    };\n}\n/**\n * Retries async operations with exponential backoff\n * Handles transient failures with intelligent retry logic\n */ async function withRetry(operation) {\n    let maxAttempts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3, baseDelay = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1000, shouldRetry = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : (error)=>{\n        return error instanceof ExternalServiceError && error.retryable;\n    };\n    let lastError;\n    for(let attempt = 1; attempt <= maxAttempts; attempt++){\n        try {\n            return await operation();\n        } catch (error) {\n            lastError = error;\n            // Don't retry on last attempt or if error is not retryable\n            if (attempt === maxAttempts || !shouldRetry(lastError)) {\n                throw lastError;\n            }\n            // Calculate delay with exponential backoff and jitter\n            const delay = baseDelay * Math.pow(2, attempt - 1) + Math.random() * 1000;\n            console.warn(\"Operation failed, retrying in \".concat(delay, \"ms (attempt \").concat(attempt, \"/\").concat(maxAttempts, \"):\"), {\n                error: lastError.message,\n                attempt,\n                maxAttempts,\n                delay\n            });\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n        }\n    }\n    throw lastError;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9lcnJvcnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7O0NBR0MsR0FFRCwrRUFBK0U7QUFDL0UscUJBQXFCO0FBQ3JCLCtFQUErRTtBQUUvRTs7O0NBR0MsR0FDTSxNQUFlQSw2QkFBNkJDO0lBOEJqRDs7O0dBR0MsR0FDREMsU0FBd0I7UUFDdEIsT0FBTztZQUNMQyxNQUFNLElBQUksQ0FBQ0EsSUFBSTtZQUNmQyxTQUFTLElBQUksQ0FBQ0EsT0FBTztZQUNyQkMsTUFBTSxJQUFJLENBQUNBLElBQUk7WUFDZkMsWUFBWSxJQUFJLENBQUNBLFVBQVU7WUFDM0JDLGFBQWEsSUFBSSxDQUFDQSxXQUFXO1lBQzdCQyxTQUFTLElBQUksQ0FBQ0EsT0FBTztZQUNyQkMsV0FBVyxJQUFJLENBQUNBLFNBQVMsQ0FBQ0MsV0FBVztZQUNyQ0MsT0FBTyxJQUFJLENBQUNBLEtBQUs7UUFDbkI7SUFDRjtJQUVBOzs7R0FHQyxHQUNEQyx5QkFBaUM7UUFDL0IsT0FBTyxJQUFJLENBQUNMLFdBQVcsSUFBSTtJQUM3QjtJQTdDQU0sWUFDRVQsT0FBZSxFQUNmQyxJQUFZLEVBQ1pDLFVBQWtCLEVBQ2xCQyxXQUFtQixFQUNuQkMsVUFBK0IsQ0FBQyxDQUFDLEVBQ2pDTSxnQkFBeUIsSUFBSSxDQUM3QjtRQUNBLEtBQUssQ0FBQ1Y7UUFFTixJQUFJLENBQUNELElBQUksR0FBRyxJQUFJLENBQUNVLFdBQVcsQ0FBQ1YsSUFBSTtRQUNqQyxJQUFJLENBQUNFLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLFVBQVUsR0FBR0E7UUFDbEIsSUFBSSxDQUFDQyxXQUFXLEdBQUdBO1FBQ25CLElBQUksQ0FBQ0MsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ00sYUFBYSxHQUFHQTtRQUNyQixJQUFJLENBQUNMLFNBQVMsR0FBRyxJQUFJTTtRQUVyQiw2Q0FBNkM7UUFDN0NkLE1BQU1lLGlCQUFpQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUNILFdBQVc7SUFDaEQ7QUEwQkY7QUFFQSwrRUFBK0U7QUFDL0UsMkJBQTJCO0FBQzNCLCtFQUErRTtBQUUvRTs7O0NBR0MsR0FDTSxNQUFNSSx3QkFBd0JqQjtJQW9CbkM7OztHQUdDLEdBQ0QsT0FBT2tCLGdCQUFnQkMsV0FBeUIsRUFBbUI7UUFDakUsTUFBTWYsVUFBVSx5QkFBNEMsT0FBbkJlLFlBQVlDLE1BQU0sRUFBQztRQUM1RCxPQUFPLElBQUlILGdCQUFnQmIsU0FBU2U7SUFDdEM7SUFFQTs7O0dBR0MsR0FDREUsY0FBY0MsS0FBYSxFQUFFbEIsT0FBZSxFQUFFQyxJQUFhLEVBQVE7UUFDakUsSUFBSSxDQUFDYyxXQUFXLENBQUNJLElBQUksQ0FBQztZQUFFRDtZQUFPbEI7WUFBU0M7UUFBSztJQUMvQztJQUVBOzs7R0FHQyxHQUNEbUIsY0FBY0YsS0FBYSxFQUFXO1FBQ3BDLE9BQU8sSUFBSSxDQUFDSCxXQUFXLENBQUNNLElBQUksQ0FBQ0MsQ0FBQUEsUUFBU0EsTUFBTUosS0FBSyxLQUFLQTtJQUN4RDtJQUVBOzs7R0FHQyxHQUNESyxjQUFjTCxLQUFhLEVBQXNCO1FBQy9DLE1BQU1NLGFBQWEsSUFBSSxDQUFDVCxXQUFXLENBQUNVLElBQUksQ0FBQ0gsQ0FBQUEsUUFBU0EsTUFBTUosS0FBSyxLQUFLQTtRQUNsRSxPQUFPTSx1QkFBQUEsaUNBQUFBLFdBQVl4QixPQUFPO0lBQzVCO0lBakRBUyxZQUNFVCxPQUFlLEVBQ2ZlLGNBQTRCLEVBQUUsRUFDOUJYLFVBQStCLENBQUMsQ0FBQyxDQUNqQztRQUNBLEtBQUssQ0FDSEosU0FDQSxvQkFDQSxLQUNBLDBDQUNBO1lBQUUsR0FBR0ksT0FBTztZQUFFVztRQUFZLEdBQzFCO1FBR0YsSUFBSSxDQUFDQSxXQUFXLEdBQUdBO0lBQ3JCO0FBbUNGO0FBRUE7OztDQUdDLEdBQ00sTUFBTVcsMEJBQTBCOUI7SUFJckNhLFlBQ0VULE9BQWUsRUFDZjJCLElBQVksRUFDWkMsc0JBQWdDLEVBQUUsRUFDbEN4QixVQUErQixDQUFDLENBQUMsQ0FDakM7UUFDQSxLQUFLLENBQ0hKLFNBQ0EsdUJBQ0EsS0FDQSxxRUFDQTtZQUFFLEdBQUdJLE9BQU87WUFBRXVCO1lBQU1DO1FBQW9CLEdBQ3hDO1FBR0YsSUFBSSxDQUFDRCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxtQkFBbUIsR0FBR0E7SUFDN0I7QUFDRjtBQUVBLCtFQUErRTtBQUMvRSwwQ0FBMEM7QUFDMUMsK0VBQStFO0FBRS9FOzs7Q0FHQyxHQUNNLE1BQU1DLDRCQUE0QmpDO0lBc0J2Qzs7O0dBR0MsR0FDRCxPQUFPa0MsbUJBQW1CQyxZQUFxQixFQUF1QjtRQUNwRSxPQUFPLElBQUlGLG9CQUNULHNDQUNBLGdEQUNBO1lBQUVFO1FBQWE7SUFFbkI7SUFFQTs7O0dBR0MsR0FDRCxPQUFPQyxjQUFjQyxXQUFpQixFQUF1QjtRQUMzRCxPQUFPLElBQUlKLG9CQUNULDhEQUNBLDBDQUEyRSxPQUFqQ0ksWUFBWUMsa0JBQWtCLElBQUcsTUFDM0U7WUFBRUQ7UUFBWTtJQUVsQjtJQUVBOzs7R0FHQyxHQUNELE9BQU9FLGlCQUFzQztRQUMzQyxPQUFPLElBQUlOLG9CQUNULDRCQUNBLGtEQUNBO1lBQUVPLFFBQVE7UUFBa0I7SUFFaEM7SUFwREEzQixZQUNFVCxPQUFlLEVBQ2ZHLGNBQXNCLHdDQUF3QyxFQUM5REMsVUFBK0IsQ0FBQyxDQUFDLENBQ2pDO1FBQ0EsS0FBSyxDQUNISixTQUNBLHdCQUNBLEtBQ0FHLGFBQ0FDLFNBQ0E7UUFHRixJQUFJLENBQUMyQixZQUFZLEdBQUczQixRQUFRMkIsWUFBWTtRQUN4QyxJQUFJLENBQUNFLFdBQVcsR0FBRzdCLFFBQVE2QixXQUFXO0lBQ3hDO0FBcUNGO0FBRUE7OztDQUdDLEdBQ00sTUFBTUksMkJBQTJCekM7SUF1QnRDOzs7R0FHQyxHQUNELE9BQU8wQyx3QkFDTEMsUUFBa0IsRUFDbEJDLE9BQWlCLEVBQ0c7UUFDcEIsT0FBTyxJQUFJSCxtQkFDVCx1Q0FBMkQsT0FBcEJFLFNBQVNFLElBQUksQ0FBQyxRQUNyREYsVUFDQUM7SUFFSjtJQUVBOzs7R0FHQyxHQUNELE9BQU9FLHFCQUFxQkMsWUFBb0IsRUFBRUMsVUFBa0IsRUFBc0I7UUFDeEYsT0FBTyxJQUFJUCxtQkFDVCxvQkFBNkNPLE9BQXpCRCxjQUFhLGNBQXVCLE9BQVhDLGFBQzdDLEVBQUUsRUFDRixFQUFFLEVBQ0Y7WUFBRUQ7WUFBY0M7UUFBVztJQUUvQjtJQTdDQW5DLFlBQ0VULE9BQWUsRUFDZjZDLHNCQUFnQyxFQUFFLEVBQ2xDQyxrQkFBNEIsRUFBRSxFQUM5QjFDLFVBQStCLENBQUMsQ0FBQyxDQUNqQztRQUNBLEtBQUssQ0FDSEosU0FDQSx1QkFDQSxLQUNBLHNEQUNBO1lBQUUsR0FBR0ksT0FBTztZQUFFeUM7WUFBcUJDO1FBQWdCLEdBQ25EO1FBR0YsSUFBSSxDQUFDRCxtQkFBbUIsR0FBR0E7UUFDM0IsSUFBSSxDQUFDQyxlQUFlLEdBQUdBO0lBQ3pCO0FBNkJGO0FBRUEsK0VBQStFO0FBQy9FLDJCQUEyQjtBQUMzQiwrRUFBK0U7QUFFL0U7OztDQUdDLEdBQ00sTUFBTUMsc0JBQXNCbkQ7SUF5QmpDOzs7R0FHQyxHQUNELE9BQU9vRCxLQUFLQyxNQUFjLEVBQWlCO1FBQ3pDLE9BQU8sSUFBSUYsY0FBYyxRQUFRRTtJQUNuQztJQUVBOzs7R0FHQyxHQUNELE9BQU9DLEtBQUtDLE1BQWMsRUFBaUI7UUFDekMsT0FBTyxJQUFJSixjQUFjLFFBQVFJO0lBQ25DO0lBRUE7OztHQUdDLEdBQ0QsT0FBT0MsUUFBUUMsU0FBaUIsRUFBaUI7UUFDL0MsT0FBTyxJQUFJTixjQUFjLFdBQVdNO0lBQ3RDO0lBM0NBNUMsWUFDRWtDLFlBQW9CLEVBQ3BCQyxVQUFrQixFQUNsQnhDLFVBQStCLENBQUMsQ0FBQyxDQUNqQztRQUNBLE1BQU1KLFVBQVUsR0FBNEI0QyxPQUF6QkQsY0FBYSxjQUF1QixPQUFYQyxZQUFXO1FBQ3ZELE1BQU16QyxjQUFjLGlCQUE0QyxPQUEzQndDLGFBQWFXLFdBQVcsSUFBRztRQUVoRSxLQUFLLENBQ0h0RCxTQUNBLHNCQUNBLEtBQ0FHLGFBQ0E7WUFBRSxHQUFHQyxPQUFPO1lBQUV1QztZQUFjQztRQUFXLEdBQ3ZDO1FBR0YsSUFBSSxDQUFDRCxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ0MsVUFBVSxHQUFHQTtJQUNwQjtBQXlCRjtBQUVBOzs7Q0FHQyxHQUNNLE1BQU1XLHNCQUFzQjNEO0lBd0JqQzs7O0dBR0MsR0FDRCxPQUFPNEQsa0JBQ0xiLFlBQW9CLEVBQ3BCekIsS0FBYSxFQUNidUMsS0FBYSxFQUNFO1FBQ2YsT0FBTyxJQUFJRixjQUNULEdBQXdCckMsT0FBckJ5QixjQUFhLFVBQWtCYyxPQUFWdkMsT0FBTSxNQUFVLE9BQU51QyxPQUFNLHFCQUN4QyxhQUNBZCxjQUNBLEtBQTZDekIsT0FBeEN5QixhQUFhVyxXQUFXLElBQUcsZUFBbUIsT0FBTnBDLE9BQU0scUJBQ25EO1lBQUVBO1lBQU91QztRQUFNO0lBRW5CO0lBRUE7OztHQUdDLEdBQ0QsT0FBT0MsZ0JBQ0xQLE1BQWMsRUFDZFEsSUFBVSxFQUNWQyxRQUFnQixFQUNEO1FBQ2YsT0FBTyxJQUFJTCxjQUNULFFBQXdDSSxPQUFoQ1IsUUFBTywyQkFBbURTLE9BQTFCRCxLQUFLRSxZQUFZLElBQUcsUUFBZSxPQUFURCxXQUNsRSxvQkFDQSxRQUNBLCtEQUNBO1lBQUVUO1lBQVFRLE1BQU1BLEtBQUtyRCxXQUFXO1lBQUlzRDtRQUFTO0lBRWpEO0lBdERBbkQsWUFDRVQsT0FBZSxFQUNmOEQsWUFBb0IsRUFDcEJDLG1CQUEyQixFQUMzQjVELFdBQW1CLEVBQ25CQyxVQUErQixDQUFDLENBQUMsQ0FDakM7UUFDQSxLQUFLLENBQ0hKLFNBQ0EscUJBQ0EsS0FDQUcsYUFDQTtZQUFFLEdBQUdDLE9BQU87WUFBRTBEO1lBQWNDO1FBQW9CLEdBQ2hEO1FBR0YsSUFBSSxDQUFDRCxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ0MsbUJBQW1CLEdBQUdBO0lBQzdCO0FBcUNGO0FBRUEsK0VBQStFO0FBQy9FLDBCQUEwQjtBQUMxQiwrRUFBK0U7QUFFL0U7OztDQUdDLEdBQ00sTUFBTUMsNkJBQTZCcEU7SUEwQnhDOzs7R0FHQyxHQUNELE9BQU9xRSxlQUNMM0MsS0FBVSxFQUVZO1lBRHRCNEMsWUFBQUEsaUVBQXFCO1FBRXJCLE9BQU8sSUFBSUYscUJBQ1QsOEJBQTRDLE9BQWQxQyxNQUFNdEIsT0FBTyxHQUMzQyxtQkFDQXNCLE9BQ0E0QyxXQUNBO1lBQUVDLFdBQVc3QyxNQUFNckIsSUFBSTtRQUFDO0lBRTVCO0lBRUE7OztHQUdDLEdBQ0QsT0FBT21FLGFBQ0w5QyxLQUFVLEVBRVk7WUFEdEI0QyxZQUFBQSxpRUFBcUI7UUFFckIsT0FBTyxJQUFJRixxQkFDVCwwQkFBd0MsT0FBZDFDLE1BQU10QixPQUFPLEdBQ3ZDLGlCQUNBc0IsT0FDQTRDO0lBRUo7SUFFQTs7O0dBR0MsR0FDRCxPQUFPRyxXQUNML0MsS0FBVSxFQUVZO1lBRHRCNEMsWUFBQUEsaUVBQXFCO1FBRXJCLE9BQU8sSUFBSUYscUJBQ1Qsd0JBQXNDLE9BQWQxQyxNQUFNdEIsT0FBTyxHQUNyQyxlQUNBc0IsT0FDQTRDO0lBRUo7SUFwRUF6RCxZQUNFVCxPQUFlLEVBQ2ZzRSxXQUFtQixFQUNuQkMsZUFBcUIsRUFDckJMLFlBQXFCLElBQUksRUFDekI5RCxVQUErQixDQUFDLENBQUMsQ0FDakM7UUFDQSxLQUFLLENBQ0hKLFNBQ0EsMEJBQ0EsS0FDQSxpRUFDQTtZQUFFLEdBQUdJLE9BQU87WUFBRWtFO1lBQWFDO1lBQWlCTDtRQUFVLEdBQ3REO1FBR0YsSUFBSSxDQUFDSSxXQUFXLEdBQUdBO1FBQ25CLElBQUksQ0FBQ0MsZUFBZSxHQUFHQTtRQUN2QixJQUFJLENBQUNMLFNBQVMsR0FBR0E7SUFDbkI7QUFrREY7QUFFQTs7O0NBR0MsR0FDTSxNQUFNTSx1QkFBdUI1RTtJQUtsQ2EsWUFDRWdFLEtBQWEsRUFDYkMsU0FBZSxFQUNmQyxVQUFrQixFQUNsQnZFLFVBQStCLENBQUMsQ0FBQyxDQUNqQztRQUNBLE1BQU1KLFVBQVUsK0JBQWdEMEUsT0FBakJELE9BQU0sYUFBbUMsT0FBeEJDLFVBQVVwRSxXQUFXO1FBQ3JGLE1BQU1ILGNBQWMsMENBQXVFLE9BQTdCeUUsS0FBS0MsSUFBSSxDQUFDRixhQUFhLE9BQU07UUFFM0YsS0FBSyxDQUNIM0UsU0FDQSx1QkFDQSxLQUNBRyxhQUNBO1lBQUUsR0FBR0MsT0FBTztZQUFFcUU7WUFBT0MsV0FBV0EsVUFBVXBFLFdBQVc7WUFBSXFFO1FBQVcsR0FDcEU7UUFHRixJQUFJLENBQUNGLEtBQUssR0FBR0E7UUFDYixJQUFJLENBQUNDLFNBQVMsR0FBR0E7UUFDakIsSUFBSSxDQUFDQyxVQUFVLEdBQUdBO0lBQ3BCO0FBQ0Y7QUFFQSwrRUFBK0U7QUFDL0UsbUNBQW1DO0FBQ25DLCtFQUErRTtBQUUvRTs7O0NBR0MsR0FDTSxNQUFNRyxzQkFBc0JsRjtJQTBCakM7OztHQUdDLEdBQ0QsT0FBT21GLGlCQUFpQnpELEtBQVUsRUFBaUI7UUFDakQsT0FBTyxJQUFJd0QsY0FDVCwrQkFBNkMsT0FBZHhELE1BQU10QixPQUFPLEdBQzVDLFdBQ0FnRixXQUNBQSxXQUNBO1lBQUVDLGVBQWUzRDtRQUFNO0lBRTNCO0lBRUE7OztHQUdDLEdBQ0QsT0FBTzRELGFBQWFDLEtBQWEsRUFBRUMsT0FBZSxFQUFpQjtRQUNqRSxPQUFPLElBQUlOLGNBQ1QsdUJBQStCLE9BQVJNLFNBQVEsT0FDL0IsU0FDQUosV0FDQUcsT0FDQTtZQUFFQztRQUFRO0lBRWQ7SUEvQ0EzRSxZQUNFVCxPQUFlLEVBQ2ZxRixTQUFpQixFQUNqQkMsS0FBYyxFQUNkSCxLQUFjLEVBQ2QvRSxVQUErQixDQUFDLENBQUMsQ0FDakM7UUFDQSxLQUFLLENBQ0hKLFNBQ0Esa0JBQ0EsS0FDQSxzREFDQTtZQUFFLEdBQUdJLE9BQU87WUFBRWlGO1lBQVdDO1lBQU9IO1FBQU0sR0FDdEM7UUFHRixJQUFJLENBQUNFLFNBQVMsR0FBR0E7UUFDakIsSUFBSSxDQUFDQyxLQUFLLEdBQUdBO1FBQ2IsSUFBSSxDQUFDSCxLQUFLLEdBQUdBO0lBQ2Y7QUE2QkY7QUFFQTs7O0NBR0MsR0FDTSxNQUFNSSwyQkFBMkIzRjtJQXVCdEM7OztHQUdDLEdBQ0QsT0FBTzRGLGdCQUFnQkMsR0FBVyxFQUFzQjtRQUN0RCxPQUFPLElBQUlGLG1CQUNULDJCQUErQixPQUFKRSxLQUFJLGlCQUMvQkE7SUFFSjtJQUVBOzs7R0FHQyxHQUNELE9BQU9DLGFBQ0xELEdBQVcsRUFDWGhDLEtBQVUsRUFDVmtDLFlBQW9CLEVBQ0E7UUFDcEIsT0FBTyxJQUFJSixtQkFDVCxrQkFBNkM5QixPQUEzQmdDLEtBQUkseUJBQTJDRSxPQUFwQmxDLE9BQU0sZ0JBQTJCLE9BQWJrQyxlQUNqRUYsS0FDQUUsY0FDQTtZQUFFQyxhQUFhbkM7UUFBTTtJQUV6QjtJQTdDQWhELFlBQ0VULE9BQWUsRUFDZjZGLFNBQWlCLEVBQ2pCRixZQUFxQixFQUNyQnZGLFVBQStCLENBQUMsQ0FBQyxDQUNqQztRQUNBLEtBQUssQ0FDSEosU0FDQSx1QkFDQSxLQUNBLDREQUNBO1lBQUUsR0FBR0ksT0FBTztZQUFFeUY7WUFBV0Y7UUFBYSxHQUN0QztRQUdGLElBQUksQ0FBQ0UsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNGLFlBQVksR0FBR0E7SUFDdEI7QUE2QkY7QUFnREEsK0VBQStFO0FBQy9FLDBCQUEwQjtBQUMxQiwrRUFBK0U7QUFFL0U7OztDQUdDLEdBQ00sU0FBU0csbUJBQW1CeEUsS0FBWTtJQUM3QyxJQUFJQSxpQkFBaUIxQixzQkFBc0I7UUFDekMsT0FBTzBCLE1BQU1aLGFBQWE7SUFDNUI7SUFDQSxPQUFPO0FBQ1Q7QUFFQTs7O0NBR0MsR0FDTSxTQUFTRix1QkFBdUJjLEtBQVk7SUFDakQsSUFBSUEsaUJBQWlCMUIsc0JBQXNCO1FBQ3pDLE9BQU8wQixNQUFNZCxzQkFBc0I7SUFDckM7SUFFQSxzQ0FBc0M7SUFDdEMsT0FBTztBQUNUO0FBRUE7OztDQUdDLEdBQ00sU0FBU3VGLGdCQUFnQnpFLEtBQVk7SUFDMUMsSUFBSUEsaUJBQWlCMUIsc0JBQXNCO1FBQ3pDLE9BQU8wQixNQUFNeEIsTUFBTTtJQUNyQjtJQUVBLCtCQUErQjtJQUMvQixPQUFPO1FBQ0xDLE1BQU11QixNQUFNdkIsSUFBSSxJQUFJO1FBQ3BCQyxTQUFTc0IsTUFBTXRCLE9BQU8sSUFBSTtRQUMxQkMsTUFBTTtRQUNOQyxZQUFZO1FBQ1pDLGFBQWE7UUFDYkMsU0FBUyxDQUFDO1FBQ1ZDLFdBQVcsSUFBSU0sT0FBT0wsV0FBVztRQUNqQ0MsT0FBT2UsTUFBTWYsS0FBSztJQUNwQjtBQUNGO0FBRUE7OztDQUdDLEdBQ00sU0FBU3lGLFlBQ2QxRSxLQUFRLEVBQ1JsQixPQUFxQjtJQUVyQjZGLE9BQU9DLE1BQU0sQ0FBQzVFLE1BQU1sQixPQUFPLEVBQUVBO0lBQzdCLE9BQU9rQjtBQUNUO0FBRUE7OztDQUdDLEdBQ00sU0FBUzZFLGtCQUNkQyxFQUE4QjtJQUU5QixPQUFPO3lDQUFVQztZQUFBQTs7UUFDZixJQUFJO1lBQ0YsT0FBTyxNQUFNRCxNQUFNQztRQUNyQixFQUFFLE9BQU8vRSxPQUFPO1lBQ2QsMEJBQTBCO1lBQzFCZ0YsUUFBUWhGLEtBQUssQ0FBQyw4QkFBOEI7Z0JBQzFDQSxPQUFPQSxpQkFBaUJ6QixRQUFReUIsTUFBTXRCLE9BQU8sR0FBR3NCO2dCQUNoRGYsT0FBT2UsaUJBQWlCekIsUUFBUXlCLE1BQU1mLEtBQUssR0FBR3lFO2dCQUM5Q3FCLE1BQU1BLEtBQUtyRixNQUFNLEdBQUcsSUFBSXFGLE9BQU9yQjtnQkFDL0IzRSxXQUFXLElBQUlNLE9BQU9MLFdBQVc7WUFDbkM7WUFFQSw0Q0FBNEM7WUFDNUMsTUFBTWdCO1FBQ1I7SUFDRjtBQUNGO0FBRUE7OztDQUdDLEdBQ00sZUFBZWlGLFVBQ3BCbEIsU0FBMkI7UUFDM0JtQixjQUFBQSxpRUFBc0IsR0FDdEJDLFlBQUFBLGlFQUFvQixNQUNwQkMsY0FBQUEsaUVBQXlDLENBQUNwRjtRQUN4QyxPQUFPQSxpQkFBaUIwQyx3QkFBd0IxQyxNQUFNNEMsU0FBUztJQUNqRTtJQUVBLElBQUl5QztJQUVKLElBQUssSUFBSUMsVUFBVSxHQUFHQSxXQUFXSixhQUFhSSxVQUFXO1FBQ3ZELElBQUk7WUFDRixPQUFPLE1BQU12QjtRQUNmLEVBQUUsT0FBTy9ELE9BQU87WUFDZHFGLFlBQVlyRjtZQUVaLDJEQUEyRDtZQUMzRCxJQUFJc0YsWUFBWUosZUFBZSxDQUFDRSxZQUFZQyxZQUFZO2dCQUN0RCxNQUFNQTtZQUNSO1lBRUEsc0RBQXNEO1lBQ3RELE1BQU1FLFFBQVFKLFlBQVk3QixLQUFLa0MsR0FBRyxDQUFDLEdBQUdGLFVBQVUsS0FBS2hDLEtBQUttQyxNQUFNLEtBQUs7WUFFckVULFFBQVFVLElBQUksQ0FBQyxpQ0FBcURKLE9BQXBCQyxPQUFNLGdCQUF5QkwsT0FBWEksU0FBUSxLQUFlLE9BQVpKLGFBQVksT0FBSztnQkFDNUZsRixPQUFPcUYsVUFBVTNHLE9BQU87Z0JBQ3hCNEc7Z0JBQ0FKO2dCQUNBSztZQUNGO1lBRUEsTUFBTSxJQUFJSSxRQUFRQyxDQUFBQSxVQUFXQyxXQUFXRCxTQUFTTDtRQUNuRDtJQUNGO0lBRUEsTUFBTUY7QUFDUiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvZXJyb3JzLnRzPzM2ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb21wcmVoZW5zaXZlIGVycm9yIGhhbmRsaW5nIHN5c3RlbSBmb2xsb3dpbmcgY2xlYW4gY29kZSBwcmluY2lwbGVzXG4gKiBQcm92aWRlcyBkZXNjcmlwdGl2ZSBlcnJvciBjbGFzc2VzIGFuZCBncmFjZWZ1bCBmYWxsYmFjayBtZWNoYW5pc21zXG4gKi9cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQkFTRSBFUlJPUiBDTEFTU0VTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKlxuICogQmFzZSBhcHBsaWNhdGlvbiBlcnJvciBjbGFzcyB3aXRoIGVuaGFuY2VkIGNvbnRleHQgaW5mb3JtYXRpb25cbiAqIFByb3ZpZGVzIGZvdW5kYXRpb24gZm9yIGFsbCBjdXN0b20gZXJyb3IgdHlwZXNcbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEJhc2VBcHBsaWNhdGlvbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBwdWJsaWMgcmVhZG9ubHkgY29kZTogc3RyaW5nO1xuICBwdWJsaWMgcmVhZG9ubHkgc3RhdHVzQ29kZTogbnVtYmVyO1xuICBwdWJsaWMgcmVhZG9ubHkgaXNPcGVyYXRpb25hbDogYm9vbGVhbjtcbiAgcHVibGljIHJlYWRvbmx5IGNvbnRleHQ6IFJlY29yZDxzdHJpbmcsIGFueT47XG4gIHB1YmxpYyByZWFkb25seSB0aW1lc3RhbXA6IERhdGU7XG4gIHB1YmxpYyByZWFkb25seSB1c2VyTWVzc2FnZTogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIG1lc3NhZ2U6IHN0cmluZyxcbiAgICBjb2RlOiBzdHJpbmcsXG4gICAgc3RhdHVzQ29kZTogbnVtYmVyLFxuICAgIHVzZXJNZXNzYWdlOiBzdHJpbmcsXG4gICAgY29udGV4dDogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9LFxuICAgIGlzT3BlcmF0aW9uYWw6IGJvb2xlYW4gPSB0cnVlXG4gICkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIFxuICAgIHRoaXMubmFtZSA9IHRoaXMuY29uc3RydWN0b3IubmFtZTtcbiAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gICAgdGhpcy51c2VyTWVzc2FnZSA9IHVzZXJNZXNzYWdlO1xuICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XG4gICAgdGhpcy5pc09wZXJhdGlvbmFsID0gaXNPcGVyYXRpb25hbDtcbiAgICB0aGlzLnRpbWVzdGFtcCA9IG5ldyBEYXRlKCk7XG5cbiAgICAvLyBNYWludGFpbnMgcHJvcGVyIHN0YWNrIHRyYWNlIGZvciBkZWJ1Z2dpbmdcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb252ZXJ0cyBlcnJvciB0byBKU09OIGZvcm1hdCBmb3IgbG9nZ2luZyBhbmQgQVBJIHJlc3BvbnNlc1xuICAgKiBQcm92aWRlcyBzdHJ1Y3R1cmVkIGVycm9yIGluZm9ybWF0aW9uXG4gICAqL1xuICB0b0pTT04oKTogRXJyb3JSZXNwb25zZSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgIGNvZGU6IHRoaXMuY29kZSxcbiAgICAgIHN0YXR1c0NvZGU6IHRoaXMuc3RhdHVzQ29kZSxcbiAgICAgIHVzZXJNZXNzYWdlOiB0aGlzLnVzZXJNZXNzYWdlLFxuICAgICAgY29udGV4dDogdGhpcy5jb250ZXh0LFxuICAgICAgdGltZXN0YW1wOiB0aGlzLnRpbWVzdGFtcC50b0lTT1N0cmluZygpLFxuICAgICAgc3RhY2s6IHRoaXMuc3RhY2tcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgdXNlci1mcmllbmRseSBlcnJvciBtZXNzYWdlIGZvciBkaXNwbGF5XG4gICAqIEhpZGVzIHRlY2huaWNhbCBkZXRhaWxzIGZyb20gZW5kIHVzZXJzXG4gICAqL1xuICBnZXRVc2VyRnJpZW5kbHlNZXNzYWdlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMudXNlck1lc3NhZ2UgfHwgJ0FuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQuIFBsZWFzZSB0cnkgYWdhaW4uJztcbiAgfVxufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBWQUxJREFUSU9OIEVSUk9SIENMQVNTRVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiBWYWxpZGF0aW9uIGVycm9yIGZvciBmb3JtIGFuZCBpbnB1dCB2YWxpZGF0aW9uIGZhaWx1cmVzXG4gKiBQcm92aWRlcyBkZXRhaWxlZCBmaWVsZC1sZXZlbCBlcnJvciBpbmZvcm1hdGlvblxuICovXG5leHBvcnQgY2xhc3MgVmFsaWRhdGlvbkVycm9yIGV4dGVuZHMgQmFzZUFwcGxpY2F0aW9uRXJyb3Ige1xuICBwdWJsaWMgcmVhZG9ubHkgZmllbGRFcnJvcnM6IEZpZWxkRXJyb3JbXTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4gICAgZmllbGRFcnJvcnM6IEZpZWxkRXJyb3JbXSA9IFtdLFxuICAgIGNvbnRleHQ6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fVxuICApIHtcbiAgICBzdXBlcihcbiAgICAgIG1lc3NhZ2UsXG4gICAgICAnVkFMSURBVElPTl9FUlJPUicsXG4gICAgICA0MDAsXG4gICAgICAnUGxlYXNlIGNoZWNrIHlvdXIgaW5wdXQgYW5kIHRyeSBhZ2Fpbi4nLFxuICAgICAgeyAuLi5jb250ZXh0LCBmaWVsZEVycm9ycyB9LFxuICAgICAgdHJ1ZVxuICAgICk7XG4gICAgXG4gICAgdGhpcy5maWVsZEVycm9ycyA9IGZpZWxkRXJyb3JzO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgdmFsaWRhdGlvbiBlcnJvciBmcm9tIGZpZWxkLXNwZWNpZmljIGVycm9yc1xuICAgKiBBZ2dyZWdhdGVzIG11bHRpcGxlIGZpZWxkIGVycm9ycyBpbnRvIHNpbmdsZSBlcnJvclxuICAgKi9cbiAgc3RhdGljIGZyb21GaWVsZEVycm9ycyhmaWVsZEVycm9yczogRmllbGRFcnJvcltdKTogVmFsaWRhdGlvbkVycm9yIHtcbiAgICBjb25zdCBtZXNzYWdlID0gYFZhbGlkYXRpb24gZmFpbGVkIGZvciAke2ZpZWxkRXJyb3JzLmxlbmd0aH0gZmllbGQocylgO1xuICAgIHJldHVybiBuZXcgVmFsaWRhdGlvbkVycm9yKG1lc3NhZ2UsIGZpZWxkRXJyb3JzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRzIGFkZGl0aW9uYWwgZmllbGQgZXJyb3IgdG8gZXhpc3RpbmcgdmFsaWRhdGlvbiBlcnJvclxuICAgKiBFbmFibGVzIGJ1aWxkaW5nIHZhbGlkYXRpb24gZXJyb3JzIGluY3JlbWVudGFsbHlcbiAgICovXG4gIGFkZEZpZWxkRXJyb3IoZmllbGQ6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nLCBjb2RlPzogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5maWVsZEVycm9ycy5wdXNoKHsgZmllbGQsIG1lc3NhZ2UsIGNvZGUgfSk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tzIGlmIHNwZWNpZmljIGZpZWxkIGhhcyB2YWxpZGF0aW9uIGVycm9yXG4gICAqIFVzZWZ1bCBmb3IgY29uZGl0aW9uYWwgZXJyb3IgaGFuZGxpbmdcbiAgICovXG4gIGhhc0ZpZWxkRXJyb3IoZmllbGQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmZpZWxkRXJyb3JzLnNvbWUoZXJyb3IgPT4gZXJyb3IuZmllbGQgPT09IGZpZWxkKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIGVycm9yIG1lc3NhZ2UgZm9yIHNwZWNpZmljIGZpZWxkXG4gICAqIFJldHVybnMgZmlyc3QgZXJyb3IgbWVzc2FnZSBmb3IgdGhlIGZpZWxkXG4gICAqL1xuICBnZXRGaWVsZEVycm9yKGZpZWxkOiBzdHJpbmcpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICAgIGNvbnN0IGZpZWxkRXJyb3IgPSB0aGlzLmZpZWxkRXJyb3JzLmZpbmQoZXJyb3IgPT4gZXJyb3IuZmllbGQgPT09IGZpZWxkKTtcbiAgICByZXR1cm4gZmllbGRFcnJvcj8ubWVzc2FnZTtcbiAgfVxufVxuXG4vKipcbiAqIEJ1c2luZXNzIHJ1bGUgdmFsaWRhdGlvbiBlcnJvclxuICogSGFuZGxlcyBkb21haW4tc3BlY2lmaWMgdmFsaWRhdGlvbiBmYWlsdXJlc1xuICovXG5leHBvcnQgY2xhc3MgQnVzaW5lc3NSdWxlRXJyb3IgZXh0ZW5kcyBCYXNlQXBwbGljYXRpb25FcnJvciB7XG4gIHB1YmxpYyByZWFkb25seSBydWxlOiBzdHJpbmc7XG4gIHB1YmxpYyByZWFkb25seSB2aW9sYXRlZENvbnN0cmFpbnRzOiBzdHJpbmdbXTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4gICAgcnVsZTogc3RyaW5nLFxuICAgIHZpb2xhdGVkQ29uc3RyYWludHM6IHN0cmluZ1tdID0gW10sXG4gICAgY29udGV4dDogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9XG4gICkge1xuICAgIHN1cGVyKFxuICAgICAgbWVzc2FnZSxcbiAgICAgICdCVVNJTkVTU19SVUxFX0VSUk9SJyxcbiAgICAgIDQyMixcbiAgICAgICdUaGlzIGFjdGlvbiB2aW9sYXRlcyBidXNpbmVzcyBydWxlcy4gUGxlYXNlIHJldmlldyBhbmQgdHJ5IGFnYWluLicsXG4gICAgICB7IC4uLmNvbnRleHQsIHJ1bGUsIHZpb2xhdGVkQ29uc3RyYWludHMgfSxcbiAgICAgIHRydWVcbiAgICApO1xuICAgIFxuICAgIHRoaXMucnVsZSA9IHJ1bGU7XG4gICAgdGhpcy52aW9sYXRlZENvbnN0cmFpbnRzID0gdmlvbGF0ZWRDb25zdHJhaW50cztcbiAgfVxufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBBVVRIRU5USUNBVElPTiBBTkQgQVVUSE9SSVpBVElPTiBFUlJPUlNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiBBdXRoZW50aWNhdGlvbiBlcnJvciBmb3IgbG9naW4gYW5kIGNyZWRlbnRpYWwgZmFpbHVyZXNcbiAqIEhhbmRsZXMgdXNlciBhdXRoZW50aWNhdGlvbiBpc3N1ZXNcbiAqL1xuZXhwb3J0IGNsYXNzIEF1dGhlbnRpY2F0aW9uRXJyb3IgZXh0ZW5kcyBCYXNlQXBwbGljYXRpb25FcnJvciB7XG4gIHB1YmxpYyByZWFkb25seSBhdHRlbXB0Q291bnQ/OiBudW1iZXI7XG4gIHB1YmxpYyByZWFkb25seSBsb2Nrb3V0VGltZT86IERhdGU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIHVzZXJNZXNzYWdlOiBzdHJpbmcgPSAnSW52YWxpZCBjcmVkZW50aWFscy4gUGxlYXNlIHRyeSBhZ2Fpbi4nLFxuICAgIGNvbnRleHQ6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fVxuICApIHtcbiAgICBzdXBlcihcbiAgICAgIG1lc3NhZ2UsXG4gICAgICAnQVVUSEVOVElDQVRJT05fRVJST1InLFxuICAgICAgNDAxLFxuICAgICAgdXNlck1lc3NhZ2UsXG4gICAgICBjb250ZXh0LFxuICAgICAgdHJ1ZVxuICAgICk7XG4gICAgXG4gICAgdGhpcy5hdHRlbXB0Q291bnQgPSBjb250ZXh0LmF0dGVtcHRDb3VudDtcbiAgICB0aGlzLmxvY2tvdXRUaW1lID0gY29udGV4dC5sb2Nrb3V0VGltZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGF1dGhlbnRpY2F0aW9uIGVycm9yIGZvciBpbnZhbGlkIGNyZWRlbnRpYWxzXG4gICAqIFN0YW5kYXJkIGVycm9yIGZvciBsb2dpbiBmYWlsdXJlc1xuICAgKi9cbiAgc3RhdGljIGludmFsaWRDcmVkZW50aWFscyhhdHRlbXB0Q291bnQ/OiBudW1iZXIpOiBBdXRoZW50aWNhdGlvbkVycm9yIHtcbiAgICByZXR1cm4gbmV3IEF1dGhlbnRpY2F0aW9uRXJyb3IoXG4gICAgICAnSW52YWxpZCBlbWFpbCBvciBwYXNzd29yZCBwcm92aWRlZCcsXG4gICAgICAnSW52YWxpZCBlbWFpbCBvciBwYXNzd29yZC4gUGxlYXNlIHRyeSBhZ2Fpbi4nLFxuICAgICAgeyBhdHRlbXB0Q291bnQgfVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhdXRoZW50aWNhdGlvbiBlcnJvciBmb3IgYWNjb3VudCBsb2Nrb3V0XG4gICAqIEhhbmRsZXMgc2VjdXJpdHkgbG9ja291dCBzY2VuYXJpb3NcbiAgICovXG4gIHN0YXRpYyBhY2NvdW50TG9ja2VkKGxvY2tvdXRUaW1lOiBEYXRlKTogQXV0aGVudGljYXRpb25FcnJvciB7XG4gICAgcmV0dXJuIG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKFxuICAgICAgJ0FjY291bnQgdGVtcG9yYXJpbHkgbG9ja2VkIGR1ZSB0byBtdWx0aXBsZSBmYWlsZWQgYXR0ZW1wdHMnLFxuICAgICAgYEFjY291bnQgbG9ja2VkLiBQbGVhc2UgdHJ5IGFnYWluIGFmdGVyICR7bG9ja291dFRpbWUudG9Mb2NhbGVUaW1lU3RyaW5nKCl9LmAsXG4gICAgICB7IGxvY2tvdXRUaW1lIH1cbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYXV0aGVudGljYXRpb24gZXJyb3IgZm9yIGV4cGlyZWQgc2Vzc2lvblxuICAgKiBIYW5kbGVzIHNlc3Npb24gdGltZW91dCBzY2VuYXJpb3NcbiAgICovXG4gIHN0YXRpYyBzZXNzaW9uRXhwaXJlZCgpOiBBdXRoZW50aWNhdGlvbkVycm9yIHtcbiAgICByZXR1cm4gbmV3IEF1dGhlbnRpY2F0aW9uRXJyb3IoXG4gICAgICAnVXNlciBzZXNzaW9uIGhhcyBleHBpcmVkJyxcbiAgICAgICdZb3VyIHNlc3Npb24gaGFzIGV4cGlyZWQuIFBsZWFzZSBsb2cgaW4gYWdhaW4uJyxcbiAgICAgIHsgcmVhc29uOiAnc2Vzc2lvbl9leHBpcmVkJyB9XG4gICAgKTtcbiAgfVxufVxuXG4vKipcbiAqIEF1dGhvcml6YXRpb24gZXJyb3IgZm9yIHBlcm1pc3Npb24gYW5kIGFjY2VzcyBjb250cm9sIGZhaWx1cmVzXG4gKiBIYW5kbGVzIHVzZXIgcGVybWlzc2lvbiBpc3N1ZXNcbiAqL1xuZXhwb3J0IGNsYXNzIEF1dGhvcml6YXRpb25FcnJvciBleHRlbmRzIEJhc2VBcHBsaWNhdGlvbkVycm9yIHtcbiAgcHVibGljIHJlYWRvbmx5IHJlcXVpcmVkUGVybWlzc2lvbnM6IHN0cmluZ1tdO1xuICBwdWJsaWMgcmVhZG9ubHkgdXNlclBlcm1pc3Npb25zOiBzdHJpbmdbXTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4gICAgcmVxdWlyZWRQZXJtaXNzaW9uczogc3RyaW5nW10gPSBbXSxcbiAgICB1c2VyUGVybWlzc2lvbnM6IHN0cmluZ1tdID0gW10sXG4gICAgY29udGV4dDogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9XG4gICkge1xuICAgIHN1cGVyKFxuICAgICAgbWVzc2FnZSxcbiAgICAgICdBVVRIT1JJWkFUSU9OX0VSUk9SJyxcbiAgICAgIDQwMyxcbiAgICAgICdZb3UgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBwZXJmb3JtIHRoaXMgYWN0aW9uLicsXG4gICAgICB7IC4uLmNvbnRleHQsIHJlcXVpcmVkUGVybWlzc2lvbnMsIHVzZXJQZXJtaXNzaW9ucyB9LFxuICAgICAgdHJ1ZVxuICAgICk7XG4gICAgXG4gICAgdGhpcy5yZXF1aXJlZFBlcm1pc3Npb25zID0gcmVxdWlyZWRQZXJtaXNzaW9ucztcbiAgICB0aGlzLnVzZXJQZXJtaXNzaW9ucyA9IHVzZXJQZXJtaXNzaW9ucztcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGF1dGhvcml6YXRpb24gZXJyb3IgZm9yIGluc3VmZmljaWVudCBwZXJtaXNzaW9uc1xuICAgKiBTdGFuZGFyZCBlcnJvciBmb3IgYWNjZXNzIGNvbnRyb2wgZmFpbHVyZXNcbiAgICovXG4gIHN0YXRpYyBpbnN1ZmZpY2llbnRQZXJtaXNzaW9ucyhcbiAgICByZXF1aXJlZDogc3RyaW5nW10sXG4gICAgY3VycmVudDogc3RyaW5nW11cbiAgKTogQXV0aG9yaXphdGlvbkVycm9yIHtcbiAgICByZXR1cm4gbmV3IEF1dGhvcml6YXRpb25FcnJvcihcbiAgICAgIGBJbnN1ZmZpY2llbnQgcGVybWlzc2lvbnMuIFJlcXVpcmVkOiAke3JlcXVpcmVkLmpvaW4oJywgJyl9YCxcbiAgICAgIHJlcXVpcmVkLFxuICAgICAgY3VycmVudFxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhdXRob3JpemF0aW9uIGVycm9yIGZvciByZXNvdXJjZSBhY2Nlc3NcbiAgICogSGFuZGxlcyByZXNvdXJjZS1zcGVjaWZpYyBhY2Nlc3MgY29udHJvbFxuICAgKi9cbiAgc3RhdGljIHJlc291cmNlQWNjZXNzRGVuaWVkKHJlc291cmNlVHlwZTogc3RyaW5nLCByZXNvdXJjZUlkOiBzdHJpbmcpOiBBdXRob3JpemF0aW9uRXJyb3Ige1xuICAgIHJldHVybiBuZXcgQXV0aG9yaXphdGlvbkVycm9yKFxuICAgICAgYEFjY2VzcyBkZW5pZWQgdG8gJHtyZXNvdXJjZVR5cGV9IHdpdGggSUQ6ICR7cmVzb3VyY2VJZH1gLFxuICAgICAgW10sXG4gICAgICBbXSxcbiAgICAgIHsgcmVzb3VyY2VUeXBlLCByZXNvdXJjZUlkIH1cbiAgICApO1xuICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFJFU09VUkNFIEFORCBEQVRBIEVSUk9SU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKipcbiAqIFJlc291cmNlIG5vdCBmb3VuZCBlcnJvciBmb3IgbWlzc2luZyBlbnRpdGllc1xuICogSGFuZGxlcyBjYXNlcyB3aGVyZSByZXF1ZXN0ZWQgcmVzb3VyY2VzIGRvbid0IGV4aXN0XG4gKi9cbmV4cG9ydCBjbGFzcyBOb3RGb3VuZEVycm9yIGV4dGVuZHMgQmFzZUFwcGxpY2F0aW9uRXJyb3Ige1xuICBwdWJsaWMgcmVhZG9ubHkgcmVzb3VyY2VUeXBlOiBzdHJpbmc7XG4gIHB1YmxpYyByZWFkb25seSByZXNvdXJjZUlkOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcmVzb3VyY2VUeXBlOiBzdHJpbmcsXG4gICAgcmVzb3VyY2VJZDogc3RyaW5nLFxuICAgIGNvbnRleHQ6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fVxuICApIHtcbiAgICBjb25zdCBtZXNzYWdlID0gYCR7cmVzb3VyY2VUeXBlfSB3aXRoIElEICcke3Jlc291cmNlSWR9JyBub3QgZm91bmRgO1xuICAgIGNvbnN0IHVzZXJNZXNzYWdlID0gYFRoZSByZXF1ZXN0ZWQgJHtyZXNvdXJjZVR5cGUudG9Mb3dlckNhc2UoKX0gY291bGQgbm90IGJlIGZvdW5kLmA7XG4gICAgXG4gICAgc3VwZXIoXG4gICAgICBtZXNzYWdlLFxuICAgICAgJ1JFU09VUkNFX05PVF9GT1VORCcsXG4gICAgICA0MDQsXG4gICAgICB1c2VyTWVzc2FnZSxcbiAgICAgIHsgLi4uY29udGV4dCwgcmVzb3VyY2VUeXBlLCByZXNvdXJjZUlkIH0sXG4gICAgICB0cnVlXG4gICAgKTtcbiAgICBcbiAgICB0aGlzLnJlc291cmNlVHlwZSA9IHJlc291cmNlVHlwZTtcbiAgICB0aGlzLnJlc291cmNlSWQgPSByZXNvdXJjZUlkO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgbm90IGZvdW5kIGVycm9yIGZvciB1c2VyIGVudGl0aWVzXG4gICAqIFNwZWNpYWxpemVkIGVycm9yIGZvciB1c2VyLXJlbGF0ZWQgcmVzb3VyY2VzXG4gICAqL1xuICBzdGF0aWMgdXNlcih1c2VySWQ6IHN0cmluZyk6IE5vdEZvdW5kRXJyb3Ige1xuICAgIHJldHVybiBuZXcgTm90Rm91bmRFcnJvcignVXNlcicsIHVzZXJJZCk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBub3QgZm91bmQgZXJyb3IgZm9yIGhhbGwgZW50aXRpZXNcbiAgICogU3BlY2lhbGl6ZWQgZXJyb3IgZm9yIGhhbGwtcmVsYXRlZCByZXNvdXJjZXNcbiAgICovXG4gIHN0YXRpYyBoYWxsKGhhbGxJZDogc3RyaW5nKTogTm90Rm91bmRFcnJvciB7XG4gICAgcmV0dXJuIG5ldyBOb3RGb3VuZEVycm9yKCdIYWxsJywgaGFsbElkKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIG5vdCBmb3VuZCBlcnJvciBmb3IgYm9va2luZyBlbnRpdGllc1xuICAgKiBTcGVjaWFsaXplZCBlcnJvciBmb3IgYm9va2luZy1yZWxhdGVkIHJlc291cmNlc1xuICAgKi9cbiAgc3RhdGljIGJvb2tpbmcoYm9va2luZ0lkOiBzdHJpbmcpOiBOb3RGb3VuZEVycm9yIHtcbiAgICByZXR1cm4gbmV3IE5vdEZvdW5kRXJyb3IoJ0Jvb2tpbmcnLCBib29raW5nSWQpO1xuICB9XG59XG5cbi8qKlxuICogQ29uZmxpY3QgZXJyb3IgZm9yIHJlc291cmNlIHN0YXRlIGNvbmZsaWN0c1xuICogSGFuZGxlcyBjYXNlcyB3aGVyZSByZXNvdXJjZSBzdGF0ZSBwcmV2ZW50cyBvcGVyYXRpb25cbiAqL1xuZXhwb3J0IGNsYXNzIENvbmZsaWN0RXJyb3IgZXh0ZW5kcyBCYXNlQXBwbGljYXRpb25FcnJvciB7XG4gIHB1YmxpYyByZWFkb25seSBjb25mbGljdFR5cGU6IHN0cmluZztcbiAgcHVibGljIHJlYWRvbmx5IGNvbmZsaWN0aW5nUmVzb3VyY2U6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4gICAgY29uZmxpY3RUeXBlOiBzdHJpbmcsXG4gICAgY29uZmxpY3RpbmdSZXNvdXJjZTogc3RyaW5nLFxuICAgIHVzZXJNZXNzYWdlOiBzdHJpbmcsXG4gICAgY29udGV4dDogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9XG4gICkge1xuICAgIHN1cGVyKFxuICAgICAgbWVzc2FnZSxcbiAgICAgICdSRVNPVVJDRV9DT05GTElDVCcsXG4gICAgICA0MDksXG4gICAgICB1c2VyTWVzc2FnZSxcbiAgICAgIHsgLi4uY29udGV4dCwgY29uZmxpY3RUeXBlLCBjb25mbGljdGluZ1Jlc291cmNlIH0sXG4gICAgICB0cnVlXG4gICAgKTtcbiAgICBcbiAgICB0aGlzLmNvbmZsaWN0VHlwZSA9IGNvbmZsaWN0VHlwZTtcbiAgICB0aGlzLmNvbmZsaWN0aW5nUmVzb3VyY2UgPSBjb25mbGljdGluZ1Jlc291cmNlO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgY29uZmxpY3QgZXJyb3IgZm9yIGR1cGxpY2F0ZSByZXNvdXJjZXNcbiAgICogSGFuZGxlcyB1bmlxdWUgY29uc3RyYWludCB2aW9sYXRpb25zXG4gICAqL1xuICBzdGF0aWMgZHVwbGljYXRlUmVzb3VyY2UoXG4gICAgcmVzb3VyY2VUeXBlOiBzdHJpbmcsXG4gICAgZmllbGQ6IHN0cmluZyxcbiAgICB2YWx1ZTogc3RyaW5nXG4gICk6IENvbmZsaWN0RXJyb3Ige1xuICAgIHJldHVybiBuZXcgQ29uZmxpY3RFcnJvcihcbiAgICAgIGAke3Jlc291cmNlVHlwZX0gd2l0aCAke2ZpZWxkfSAnJHt2YWx1ZX0nIGFscmVhZHkgZXhpc3RzYCxcbiAgICAgICdkdXBsaWNhdGUnLFxuICAgICAgcmVzb3VyY2VUeXBlLFxuICAgICAgYEEgJHtyZXNvdXJjZVR5cGUudG9Mb3dlckNhc2UoKX0gd2l0aCB0aGlzICR7ZmllbGR9IGFscmVhZHkgZXhpc3RzLmAsXG4gICAgICB7IGZpZWxkLCB2YWx1ZSB9XG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGNvbmZsaWN0IGVycm9yIGZvciBib29raW5nIGNvbmZsaWN0c1xuICAgKiBIYW5kbGVzIHNjaGVkdWxpbmcgY29uZmxpY3RzIGZvciBoYWxsIGJvb2tpbmdzXG4gICAqL1xuICBzdGF0aWMgYm9va2luZ0NvbmZsaWN0KFxuICAgIGhhbGxJZDogc3RyaW5nLFxuICAgIGRhdGU6IERhdGUsXG4gICAgdGltZVNsb3Q6IHN0cmluZ1xuICApOiBDb25mbGljdEVycm9yIHtcbiAgICByZXR1cm4gbmV3IENvbmZsaWN0RXJyb3IoXG4gICAgICBgSGFsbCAke2hhbGxJZH0gaXMgYWxyZWFkeSBib29rZWQgZm9yICR7ZGF0ZS50b0RhdGVTdHJpbmcoKX0gYXQgJHt0aW1lU2xvdH1gLFxuICAgICAgJ2Jvb2tpbmdfY29uZmxpY3QnLFxuICAgICAgJ0hhbGwnLFxuICAgICAgJ1RoaXMgaGFsbCBpcyBhbHJlYWR5IGJvb2tlZCBmb3IgdGhlIHNlbGVjdGVkIGRhdGUgYW5kIHRpbWUuJyxcbiAgICAgIHsgaGFsbElkLCBkYXRlOiBkYXRlLnRvSVNPU3RyaW5nKCksIHRpbWVTbG90IH1cbiAgICApO1xuICB9XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEVYVEVSTkFMIFNFUlZJQ0UgRVJST1JTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKlxuICogRXh0ZXJuYWwgc2VydmljZSBlcnJvciBmb3IgdGhpcmQtcGFydHkgQVBJIGZhaWx1cmVzXG4gKiBIYW5kbGVzIGludGVncmF0aW9uIGFuZCBleHRlcm5hbCBkZXBlbmRlbmN5IGlzc3Vlc1xuICovXG5leHBvcnQgY2xhc3MgRXh0ZXJuYWxTZXJ2aWNlRXJyb3IgZXh0ZW5kcyBCYXNlQXBwbGljYXRpb25FcnJvciB7XG4gIHB1YmxpYyByZWFkb25seSBzZXJ2aWNlTmFtZTogc3RyaW5nO1xuICBwdWJsaWMgcmVhZG9ubHkgc2VydmljZVJlc3BvbnNlPzogYW55O1xuICBwdWJsaWMgcmVhZG9ubHkgcmV0cnlhYmxlOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIG1lc3NhZ2U6IHN0cmluZyxcbiAgICBzZXJ2aWNlTmFtZTogc3RyaW5nLFxuICAgIHNlcnZpY2VSZXNwb25zZT86IGFueSxcbiAgICByZXRyeWFibGU6IGJvb2xlYW4gPSB0cnVlLFxuICAgIGNvbnRleHQ6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fVxuICApIHtcbiAgICBzdXBlcihcbiAgICAgIG1lc3NhZ2UsXG4gICAgICAnRVhURVJOQUxfU0VSVklDRV9FUlJPUicsXG4gICAgICA1MDIsXG4gICAgICAnQSBzZXJ2aWNlIGlzIHRlbXBvcmFyaWx5IHVuYXZhaWxhYmxlLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLicsXG4gICAgICB7IC4uLmNvbnRleHQsIHNlcnZpY2VOYW1lLCBzZXJ2aWNlUmVzcG9uc2UsIHJldHJ5YWJsZSB9LFxuICAgICAgdHJ1ZVxuICAgICk7XG4gICAgXG4gICAgdGhpcy5zZXJ2aWNlTmFtZSA9IHNlcnZpY2VOYW1lO1xuICAgIHRoaXMuc2VydmljZVJlc3BvbnNlID0gc2VydmljZVJlc3BvbnNlO1xuICAgIHRoaXMucmV0cnlhYmxlID0gcmV0cnlhYmxlO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgZXh0ZXJuYWwgc2VydmljZSBlcnJvciBmb3IgcGF5bWVudCBwcm9jZXNzaW5nXG4gICAqIEhhbmRsZXMgcGF5bWVudCBnYXRld2F5IGZhaWx1cmVzXG4gICAqL1xuICBzdGF0aWMgcGF5bWVudFNlcnZpY2UoXG4gICAgZXJyb3I6IGFueSxcbiAgICByZXRyeWFibGU6IGJvb2xlYW4gPSB0cnVlXG4gICk6IEV4dGVybmFsU2VydmljZUVycm9yIHtcbiAgICByZXR1cm4gbmV3IEV4dGVybmFsU2VydmljZUVycm9yKFxuICAgICAgYFBheW1lbnQgcHJvY2Vzc2luZyBmYWlsZWQ6ICR7ZXJyb3IubWVzc2FnZX1gLFxuICAgICAgJ1BheW1lbnQgR2F0ZXdheScsXG4gICAgICBlcnJvcixcbiAgICAgIHJldHJ5YWJsZSxcbiAgICAgIHsgZXJyb3JDb2RlOiBlcnJvci5jb2RlIH1cbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgZXh0ZXJuYWwgc2VydmljZSBlcnJvciBmb3IgZW1haWwgc2VydmljZVxuICAgKiBIYW5kbGVzIGVtYWlsIGRlbGl2ZXJ5IGZhaWx1cmVzXG4gICAqL1xuICBzdGF0aWMgZW1haWxTZXJ2aWNlKFxuICAgIGVycm9yOiBhbnksXG4gICAgcmV0cnlhYmxlOiBib29sZWFuID0gdHJ1ZVxuICApOiBFeHRlcm5hbFNlcnZpY2VFcnJvciB7XG4gICAgcmV0dXJuIG5ldyBFeHRlcm5hbFNlcnZpY2VFcnJvcihcbiAgICAgIGBFbWFpbCBkZWxpdmVyeSBmYWlsZWQ6ICR7ZXJyb3IubWVzc2FnZX1gLFxuICAgICAgJ0VtYWlsIFNlcnZpY2UnLFxuICAgICAgZXJyb3IsXG4gICAgICByZXRyeWFibGVcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgZXh0ZXJuYWwgc2VydmljZSBlcnJvciBmb3IgU01TIHNlcnZpY2VcbiAgICogSGFuZGxlcyBTTVMgZGVsaXZlcnkgZmFpbHVyZXNcbiAgICovXG4gIHN0YXRpYyBzbXNTZXJ2aWNlKFxuICAgIGVycm9yOiBhbnksXG4gICAgcmV0cnlhYmxlOiBib29sZWFuID0gdHJ1ZVxuICApOiBFeHRlcm5hbFNlcnZpY2VFcnJvciB7XG4gICAgcmV0dXJuIG5ldyBFeHRlcm5hbFNlcnZpY2VFcnJvcihcbiAgICAgIGBTTVMgZGVsaXZlcnkgZmFpbGVkOiAke2Vycm9yLm1lc3NhZ2V9YCxcbiAgICAgICdTTVMgU2VydmljZScsXG4gICAgICBlcnJvcixcbiAgICAgIHJldHJ5YWJsZVxuICAgICk7XG4gIH1cbn1cblxuLyoqXG4gKiBSYXRlIGxpbWl0IGVycm9yIGZvciBBUEkgdGhyb3R0bGluZ1xuICogSGFuZGxlcyByYXRlIGxpbWl0aW5nIGFuZCBxdW90YSBleGNlZWRlZCBzY2VuYXJpb3NcbiAqL1xuZXhwb3J0IGNsYXNzIFJhdGVMaW1pdEVycm9yIGV4dGVuZHMgQmFzZUFwcGxpY2F0aW9uRXJyb3Ige1xuICBwdWJsaWMgcmVhZG9ubHkgbGltaXQ6IG51bWJlcjtcbiAgcHVibGljIHJlYWRvbmx5IHJlc2V0VGltZTogRGF0ZTtcbiAgcHVibGljIHJlYWRvbmx5IHJldHJ5QWZ0ZXI6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBsaW1pdDogbnVtYmVyLFxuICAgIHJlc2V0VGltZTogRGF0ZSxcbiAgICByZXRyeUFmdGVyOiBudW1iZXIsXG4gICAgY29udGV4dDogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9XG4gICkge1xuICAgIGNvbnN0IG1lc3NhZ2UgPSBgUmF0ZSBsaW1pdCBleGNlZWRlZC4gTGltaXQ6ICR7bGltaXR9LCBSZXNldDogJHtyZXNldFRpbWUudG9JU09TdHJpbmcoKX1gO1xuICAgIGNvbnN0IHVzZXJNZXNzYWdlID0gYFRvbyBtYW55IHJlcXVlc3RzLiBQbGVhc2UgdHJ5IGFnYWluIGluICR7TWF0aC5jZWlsKHJldHJ5QWZ0ZXIgLyAxMDAwKX0gc2Vjb25kcy5gO1xuICAgIFxuICAgIHN1cGVyKFxuICAgICAgbWVzc2FnZSxcbiAgICAgICdSQVRFX0xJTUlUX0VYQ0VFREVEJyxcbiAgICAgIDQyOSxcbiAgICAgIHVzZXJNZXNzYWdlLFxuICAgICAgeyAuLi5jb250ZXh0LCBsaW1pdCwgcmVzZXRUaW1lOiByZXNldFRpbWUudG9JU09TdHJpbmcoKSwgcmV0cnlBZnRlciB9LFxuICAgICAgdHJ1ZVxuICAgICk7XG4gICAgXG4gICAgdGhpcy5saW1pdCA9IGxpbWl0O1xuICAgIHRoaXMucmVzZXRUaW1lID0gcmVzZXRUaW1lO1xuICAgIHRoaXMucmV0cnlBZnRlciA9IHJldHJ5QWZ0ZXI7XG4gIH1cbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gU1lTVEVNIEFORCBJTkZSQVNUUlVDVFVSRSBFUlJPUlNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLyoqXG4gKiBEYXRhYmFzZSBlcnJvciBmb3IgZGF0YSBwZXJzaXN0ZW5jZSBmYWlsdXJlc1xuICogSGFuZGxlcyBkYXRhYmFzZSBjb25uZWN0aW9uIGFuZCBxdWVyeSBpc3N1ZXNcbiAqL1xuZXhwb3J0IGNsYXNzIERhdGFiYXNlRXJyb3IgZXh0ZW5kcyBCYXNlQXBwbGljYXRpb25FcnJvciB7XG4gIHB1YmxpYyByZWFkb25seSBvcGVyYXRpb246IHN0cmluZztcbiAgcHVibGljIHJlYWRvbmx5IHRhYmxlPzogc3RyaW5nO1xuICBwdWJsaWMgcmVhZG9ubHkgcXVlcnk/OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIG9wZXJhdGlvbjogc3RyaW5nLFxuICAgIHRhYmxlPzogc3RyaW5nLFxuICAgIHF1ZXJ5Pzogc3RyaW5nLFxuICAgIGNvbnRleHQ6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fVxuICApIHtcbiAgICBzdXBlcihcbiAgICAgIG1lc3NhZ2UsXG4gICAgICAnREFUQUJBU0VfRVJST1InLFxuICAgICAgNTAwLFxuICAgICAgJ0EgZGF0YWJhc2UgZXJyb3Igb2NjdXJyZWQuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIuJyxcbiAgICAgIHsgLi4uY29udGV4dCwgb3BlcmF0aW9uLCB0YWJsZSwgcXVlcnkgfSxcbiAgICAgIGZhbHNlXG4gICAgKTtcbiAgICBcbiAgICB0aGlzLm9wZXJhdGlvbiA9IG9wZXJhdGlvbjtcbiAgICB0aGlzLnRhYmxlID0gdGFibGU7XG4gICAgdGhpcy5xdWVyeSA9IHF1ZXJ5O1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgZGF0YWJhc2UgZXJyb3IgZm9yIGNvbm5lY3Rpb24gZmFpbHVyZXNcbiAgICogSGFuZGxlcyBkYXRhYmFzZSBjb25uZWN0aXZpdHkgaXNzdWVzXG4gICAqL1xuICBzdGF0aWMgY29ubmVjdGlvbkZhaWxlZChlcnJvcjogYW55KTogRGF0YWJhc2VFcnJvciB7XG4gICAgcmV0dXJuIG5ldyBEYXRhYmFzZUVycm9yKFxuICAgICAgYERhdGFiYXNlIGNvbm5lY3Rpb24gZmFpbGVkOiAke2Vycm9yLm1lc3NhZ2V9YCxcbiAgICAgICdjb25uZWN0JyxcbiAgICAgIHVuZGVmaW5lZCxcbiAgICAgIHVuZGVmaW5lZCxcbiAgICAgIHsgb3JpZ2luYWxFcnJvcjogZXJyb3IgfVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBkYXRhYmFzZSBlcnJvciBmb3IgcXVlcnkgdGltZW91dHNcbiAgICogSGFuZGxlcyBzbG93IG9yIGhhbmdpbmcgcXVlcmllc1xuICAgKi9cbiAgc3RhdGljIHF1ZXJ5VGltZW91dChxdWVyeTogc3RyaW5nLCB0aW1lb3V0OiBudW1iZXIpOiBEYXRhYmFzZUVycm9yIHtcbiAgICByZXR1cm4gbmV3IERhdGFiYXNlRXJyb3IoXG4gICAgICBgUXVlcnkgdGltZW91dCBhZnRlciAke3RpbWVvdXR9bXNgLFxuICAgICAgJ3F1ZXJ5JyxcbiAgICAgIHVuZGVmaW5lZCxcbiAgICAgIHF1ZXJ5LFxuICAgICAgeyB0aW1lb3V0IH1cbiAgICApO1xuICB9XG59XG5cbi8qKlxuICogQ29uZmlndXJhdGlvbiBlcnJvciBmb3IgYXBwbGljYXRpb24gc2V0dXAgaXNzdWVzXG4gKiBIYW5kbGVzIG1pc3Npbmcgb3IgaW52YWxpZCBjb25maWd1cmF0aW9uXG4gKi9cbmV4cG9ydCBjbGFzcyBDb25maWd1cmF0aW9uRXJyb3IgZXh0ZW5kcyBCYXNlQXBwbGljYXRpb25FcnJvciB7XG4gIHB1YmxpYyByZWFkb25seSBjb25maWdLZXk6IHN0cmluZztcbiAgcHVibGljIHJlYWRvbmx5IGV4cGVjdGVkVHlwZT86IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4gICAgY29uZmlnS2V5OiBzdHJpbmcsXG4gICAgZXhwZWN0ZWRUeXBlPzogc3RyaW5nLFxuICAgIGNvbnRleHQ6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fVxuICApIHtcbiAgICBzdXBlcihcbiAgICAgIG1lc3NhZ2UsXG4gICAgICAnQ09ORklHVVJBVElPTl9FUlJPUicsXG4gICAgICA1MDAsXG4gICAgICAnQXBwbGljYXRpb24gY29uZmlndXJhdGlvbiBlcnJvci4gUGxlYXNlIGNvbnRhY3Qgc3VwcG9ydC4nLFxuICAgICAgeyAuLi5jb250ZXh0LCBjb25maWdLZXksIGV4cGVjdGVkVHlwZSB9LFxuICAgICAgZmFsc2VcbiAgICApO1xuICAgIFxuICAgIHRoaXMuY29uZmlnS2V5ID0gY29uZmlnS2V5O1xuICAgIHRoaXMuZXhwZWN0ZWRUeXBlID0gZXhwZWN0ZWRUeXBlO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgY29uZmlndXJhdGlvbiBlcnJvciBmb3IgbWlzc2luZyB2YWx1ZXNcbiAgICogSGFuZGxlcyByZXF1aXJlZCBjb25maWd1cmF0aW9uIHRoYXQncyBub3Qgc2V0XG4gICAqL1xuICBzdGF0aWMgbWlzc2luZ1JlcXVpcmVkKGtleTogc3RyaW5nKTogQ29uZmlndXJhdGlvbkVycm9yIHtcbiAgICByZXR1cm4gbmV3IENvbmZpZ3VyYXRpb25FcnJvcihcbiAgICAgIGBSZXF1aXJlZCBjb25maWd1cmF0aW9uICcke2tleX0nIGlzIG1pc3NpbmdgLFxuICAgICAga2V5XG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGNvbmZpZ3VyYXRpb24gZXJyb3IgZm9yIGludmFsaWQgdmFsdWVzXG4gICAqIEhhbmRsZXMgY29uZmlndXJhdGlvbiB3aXRoIHdyb25nIHR5cGUgb3IgZm9ybWF0XG4gICAqL1xuICBzdGF0aWMgaW52YWxpZFZhbHVlKFxuICAgIGtleTogc3RyaW5nLFxuICAgIHZhbHVlOiBhbnksXG4gICAgZXhwZWN0ZWRUeXBlOiBzdHJpbmdcbiAgKTogQ29uZmlndXJhdGlvbkVycm9yIHtcbiAgICByZXR1cm4gbmV3IENvbmZpZ3VyYXRpb25FcnJvcihcbiAgICAgIGBDb25maWd1cmF0aW9uICcke2tleX0nIGhhcyBpbnZhbGlkIHZhbHVlICcke3ZhbHVlfScsIGV4cGVjdGVkICR7ZXhwZWN0ZWRUeXBlfWAsXG4gICAgICBrZXksXG4gICAgICBleHBlY3RlZFR5cGUsXG4gICAgICB7IGFjdHVhbFZhbHVlOiB2YWx1ZSB9XG4gICAgKTtcbiAgfVxufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTVVBQT1JUSU5HIElOVEVSRkFDRVMgQU5EIFRZUEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKlxuICogRmllbGQtc3BlY2lmaWMgZXJyb3IgaW5mb3JtYXRpb25cbiAqIFVzZWQgaW4gdmFsaWRhdGlvbiBlcnJvcnMgZm9yIGRldGFpbGVkIGZlZWRiYWNrXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRmllbGRFcnJvciB7XG4gIGZpZWxkOiBzdHJpbmc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgY29kZT86IHN0cmluZztcbn1cblxuLyoqXG4gKiBTdHJ1Y3R1cmVkIGVycm9yIHJlc3BvbnNlIGZvcm1hdFxuICogU3RhbmRhcmRpemVkIGVycm9yIGluZm9ybWF0aW9uIGZvciBBUElzXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRXJyb3JSZXNwb25zZSB7XG4gIG5hbWU6IHN0cmluZztcbiAgbWVzc2FnZTogc3RyaW5nO1xuICBjb2RlOiBzdHJpbmc7XG4gIHN0YXR1c0NvZGU6IG51bWJlcjtcbiAgdXNlck1lc3NhZ2U6IHN0cmluZztcbiAgY29udGV4dDogUmVjb3JkPHN0cmluZywgYW55PjtcbiAgdGltZXN0YW1wOiBzdHJpbmc7XG4gIHN0YWNrPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIEVycm9yIGNvbnRleHQgZm9yIGVuaGFuY2VkIGRlYnVnZ2luZ1xuICogQWRkaXRpb25hbCBpbmZvcm1hdGlvbiBmb3IgZXJyb3IgaW52ZXN0aWdhdGlvblxuICovXG5leHBvcnQgaW50ZXJmYWNlIEVycm9yQ29udGV4dCB7XG4gIHVzZXJJZD86IHN0cmluZztcbiAgcmVxdWVzdElkPzogc3RyaW5nO1xuICB1c2VyQWdlbnQ/OiBzdHJpbmc7XG4gIGlwQWRkcmVzcz86IHN0cmluZztcbiAgdXJsPzogc3RyaW5nO1xuICBtZXRob2Q/OiBzdHJpbmc7XG4gIGhlYWRlcnM/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+O1xuICBib2R5PzogYW55O1xuICBxdWVyeT86IFJlY29yZDxzdHJpbmcsIGFueT47XG4gIHBhcmFtcz86IFJlY29yZDxzdHJpbmcsIGFueT47XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEVSUk9SIFVUSUxJVFkgRlVOQ1RJT05TXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiBhbiBlcnJvciBpcyBvcGVyYXRpb25hbCAoZXhwZWN0ZWQpIG9yIHByb2dyYW1taW5nIGVycm9yXG4gKiBIZWxwcyBpbiBlcnJvciBoYW5kbGluZyBhbmQgbG9nZ2luZyBkZWNpc2lvbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzT3BlcmF0aW9uYWxFcnJvcihlcnJvcjogRXJyb3IpOiBib29sZWFuIHtcbiAgaWYgKGVycm9yIGluc3RhbmNlb2YgQmFzZUFwcGxpY2F0aW9uRXJyb3IpIHtcbiAgICByZXR1cm4gZXJyb3IuaXNPcGVyYXRpb25hbDtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogRXh0cmFjdHMgdXNlci1mcmllbmRseSBtZXNzYWdlIGZyb20gYW55IGVycm9yXG4gKiBQcm92aWRlcyBzYWZlIGVycm9yIG1lc3NhZ2UgZXh0cmFjdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VXNlckZyaWVuZGx5TWVzc2FnZShlcnJvcjogRXJyb3IpOiBzdHJpbmcge1xuICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBCYXNlQXBwbGljYXRpb25FcnJvcikge1xuICAgIHJldHVybiBlcnJvci5nZXRVc2VyRnJpZW5kbHlNZXNzYWdlKCk7XG4gIH1cbiAgXG4gIC8vIERlZmF1bHQgZmFsbGJhY2sgZm9yIHVua25vd24gZXJyb3JzXG4gIHJldHVybiAnQW4gdW5leHBlY3RlZCBlcnJvciBvY2N1cnJlZC4gUGxlYXNlIHRyeSBhZ2Fpbi4nO1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGFueSBlcnJvciB0byBzdGFuZGFyZGl6ZWQgZXJyb3IgcmVzcG9uc2VcbiAqIEVuc3VyZXMgY29uc2lzdGVudCBlcnJvciBmb3JtYXQgYWNyb3NzIHRoZSBhcHBsaWNhdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9FcnJvclJlc3BvbnNlKGVycm9yOiBFcnJvcik6IEVycm9yUmVzcG9uc2Uge1xuICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBCYXNlQXBwbGljYXRpb25FcnJvcikge1xuICAgIHJldHVybiBlcnJvci50b0pTT04oKTtcbiAgfVxuICBcbiAgLy8gSGFuZGxlIHVua25vd24gZXJyb3JzIHNhZmVseVxuICByZXR1cm4ge1xuICAgIG5hbWU6IGVycm9yLm5hbWUgfHwgJ1Vua25vd25FcnJvcicsXG4gICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB8fCAnQW4gdW5rbm93biBlcnJvciBvY2N1cnJlZCcsXG4gICAgY29kZTogJ1VOS05PV05fRVJST1InLFxuICAgIHN0YXR1c0NvZGU6IDUwMCxcbiAgICB1c2VyTWVzc2FnZTogJ0FuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQuIFBsZWFzZSB0cnkgYWdhaW4uJyxcbiAgICBjb250ZXh0OiB7fSxcbiAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICBzdGFjazogZXJyb3Iuc3RhY2tcbiAgfTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGVycm9yIHdpdGggZW5oYW5jZWQgY29udGV4dCBpbmZvcm1hdGlvblxuICogQWRkcyByZXF1ZXN0IGNvbnRleHQgdG8gZXJyb3JzIGZvciBiZXR0ZXIgZGVidWdnaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3aXRoQ29udGV4dDxUIGV4dGVuZHMgQmFzZUFwcGxpY2F0aW9uRXJyb3I+KFxuICBlcnJvcjogVCxcbiAgY29udGV4dDogRXJyb3JDb250ZXh0XG4pOiBUIHtcbiAgT2JqZWN0LmFzc2lnbihlcnJvci5jb250ZXh0LCBjb250ZXh0KTtcbiAgcmV0dXJuIGVycm9yO1xufVxuXG4vKipcbiAqIFdyYXBzIGFzeW5jIGZ1bmN0aW9ucyB3aXRoIGVycm9yIGhhbmRsaW5nXG4gKiBQcm92aWRlcyBjb25zaXN0ZW50IGVycm9yIGhhbmRsaW5nIGZvciBhc3luYyBvcGVyYXRpb25zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3aXRoRXJyb3JIYW5kbGluZzxUIGV4dGVuZHMgYW55W10sIFI+KFxuICBmbjogKC4uLmFyZ3M6IFQpID0+IFByb21pc2U8Uj5cbik6ICguLi5hcmdzOiBUKSA9PiBQcm9taXNlPFI+IHtcbiAgcmV0dXJuIGFzeW5jICguLi5hcmdzOiBUKTogUHJvbWlzZTxSPiA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBhd2FpdCBmbiguLi5hcmdzKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8gTG9nIGVycm9yIGZvciBkZWJ1Z2dpbmdcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIHdyYXBwZWQgZnVuY3Rpb246Jywge1xuICAgICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBlcnJvcixcbiAgICAgICAgc3RhY2s6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5zdGFjayA6IHVuZGVmaW5lZCxcbiAgICAgICAgYXJnczogYXJncy5sZW5ndGggPiAwID8gYXJncyA6IHVuZGVmaW5lZCxcbiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICAvLyBSZS10aHJvdyB0aGUgZXJyb3IgdG8gbWFpbnRhaW4gZXJyb3IgZmxvd1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9O1xufVxuXG4vKipcbiAqIFJldHJpZXMgYXN5bmMgb3BlcmF0aW9ucyB3aXRoIGV4cG9uZW50aWFsIGJhY2tvZmZcbiAqIEhhbmRsZXMgdHJhbnNpZW50IGZhaWx1cmVzIHdpdGggaW50ZWxsaWdlbnQgcmV0cnkgbG9naWNcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHdpdGhSZXRyeTxUPihcbiAgb3BlcmF0aW9uOiAoKSA9PiBQcm9taXNlPFQ+LFxuICBtYXhBdHRlbXB0czogbnVtYmVyID0gMyxcbiAgYmFzZURlbGF5OiBudW1iZXIgPSAxMDAwLFxuICBzaG91bGRSZXRyeTogKGVycm9yOiBFcnJvcikgPT4gYm9vbGVhbiA9IChlcnJvcikgPT4ge1xuICAgIHJldHVybiBlcnJvciBpbnN0YW5jZW9mIEV4dGVybmFsU2VydmljZUVycm9yICYmIGVycm9yLnJldHJ5YWJsZTtcbiAgfVxuKTogUHJvbWlzZTxUPiB7XG4gIGxldCBsYXN0RXJyb3I6IEVycm9yO1xuICBcbiAgZm9yIChsZXQgYXR0ZW1wdCA9IDE7IGF0dGVtcHQgPD0gbWF4QXR0ZW1wdHM7IGF0dGVtcHQrKykge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gYXdhaXQgb3BlcmF0aW9uKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGxhc3RFcnJvciA9IGVycm9yIGFzIEVycm9yO1xuICAgICAgXG4gICAgICAvLyBEb24ndCByZXRyeSBvbiBsYXN0IGF0dGVtcHQgb3IgaWYgZXJyb3IgaXMgbm90IHJldHJ5YWJsZVxuICAgICAgaWYgKGF0dGVtcHQgPT09IG1heEF0dGVtcHRzIHx8ICFzaG91bGRSZXRyeShsYXN0RXJyb3IpKSB7XG4gICAgICAgIHRocm93IGxhc3RFcnJvcjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQ2FsY3VsYXRlIGRlbGF5IHdpdGggZXhwb25lbnRpYWwgYmFja29mZiBhbmQgaml0dGVyXG4gICAgICBjb25zdCBkZWxheSA9IGJhc2VEZWxheSAqIE1hdGgucG93KDIsIGF0dGVtcHQgLSAxKSArIE1hdGgucmFuZG9tKCkgKiAxMDAwO1xuICAgICAgXG4gICAgICBjb25zb2xlLndhcm4oYE9wZXJhdGlvbiBmYWlsZWQsIHJldHJ5aW5nIGluICR7ZGVsYXl9bXMgKGF0dGVtcHQgJHthdHRlbXB0fS8ke21heEF0dGVtcHRzfSk6YCwge1xuICAgICAgICBlcnJvcjogbGFzdEVycm9yLm1lc3NhZ2UsXG4gICAgICAgIGF0dGVtcHQsXG4gICAgICAgIG1heEF0dGVtcHRzLFxuICAgICAgICBkZWxheVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCBkZWxheSkpO1xuICAgIH1cbiAgfVxuICBcbiAgdGhyb3cgbGFzdEVycm9yITtcbn0iXSwibmFtZXMiOlsiQmFzZUFwcGxpY2F0aW9uRXJyb3IiLCJFcnJvciIsInRvSlNPTiIsIm5hbWUiLCJtZXNzYWdlIiwiY29kZSIsInN0YXR1c0NvZGUiLCJ1c2VyTWVzc2FnZSIsImNvbnRleHQiLCJ0aW1lc3RhbXAiLCJ0b0lTT1N0cmluZyIsInN0YWNrIiwiZ2V0VXNlckZyaWVuZGx5TWVzc2FnZSIsImNvbnN0cnVjdG9yIiwiaXNPcGVyYXRpb25hbCIsIkRhdGUiLCJjYXB0dXJlU3RhY2tUcmFjZSIsIlZhbGlkYXRpb25FcnJvciIsImZyb21GaWVsZEVycm9ycyIsImZpZWxkRXJyb3JzIiwibGVuZ3RoIiwiYWRkRmllbGRFcnJvciIsImZpZWxkIiwicHVzaCIsImhhc0ZpZWxkRXJyb3IiLCJzb21lIiwiZXJyb3IiLCJnZXRGaWVsZEVycm9yIiwiZmllbGRFcnJvciIsImZpbmQiLCJCdXNpbmVzc1J1bGVFcnJvciIsInJ1bGUiLCJ2aW9sYXRlZENvbnN0cmFpbnRzIiwiQXV0aGVudGljYXRpb25FcnJvciIsImludmFsaWRDcmVkZW50aWFscyIsImF0dGVtcHRDb3VudCIsImFjY291bnRMb2NrZWQiLCJsb2Nrb3V0VGltZSIsInRvTG9jYWxlVGltZVN0cmluZyIsInNlc3Npb25FeHBpcmVkIiwicmVhc29uIiwiQXV0aG9yaXphdGlvbkVycm9yIiwiaW5zdWZmaWNpZW50UGVybWlzc2lvbnMiLCJyZXF1aXJlZCIsImN1cnJlbnQiLCJqb2luIiwicmVzb3VyY2VBY2Nlc3NEZW5pZWQiLCJyZXNvdXJjZVR5cGUiLCJyZXNvdXJjZUlkIiwicmVxdWlyZWRQZXJtaXNzaW9ucyIsInVzZXJQZXJtaXNzaW9ucyIsIk5vdEZvdW5kRXJyb3IiLCJ1c2VyIiwidXNlcklkIiwiaGFsbCIsImhhbGxJZCIsImJvb2tpbmciLCJib29raW5nSWQiLCJ0b0xvd2VyQ2FzZSIsIkNvbmZsaWN0RXJyb3IiLCJkdXBsaWNhdGVSZXNvdXJjZSIsInZhbHVlIiwiYm9va2luZ0NvbmZsaWN0IiwiZGF0ZSIsInRpbWVTbG90IiwidG9EYXRlU3RyaW5nIiwiY29uZmxpY3RUeXBlIiwiY29uZmxpY3RpbmdSZXNvdXJjZSIsIkV4dGVybmFsU2VydmljZUVycm9yIiwicGF5bWVudFNlcnZpY2UiLCJyZXRyeWFibGUiLCJlcnJvckNvZGUiLCJlbWFpbFNlcnZpY2UiLCJzbXNTZXJ2aWNlIiwic2VydmljZU5hbWUiLCJzZXJ2aWNlUmVzcG9uc2UiLCJSYXRlTGltaXRFcnJvciIsImxpbWl0IiwicmVzZXRUaW1lIiwicmV0cnlBZnRlciIsIk1hdGgiLCJjZWlsIiwiRGF0YWJhc2VFcnJvciIsImNvbm5lY3Rpb25GYWlsZWQiLCJ1bmRlZmluZWQiLCJvcmlnaW5hbEVycm9yIiwicXVlcnlUaW1lb3V0IiwicXVlcnkiLCJ0aW1lb3V0Iiwib3BlcmF0aW9uIiwidGFibGUiLCJDb25maWd1cmF0aW9uRXJyb3IiLCJtaXNzaW5nUmVxdWlyZWQiLCJrZXkiLCJpbnZhbGlkVmFsdWUiLCJleHBlY3RlZFR5cGUiLCJhY3R1YWxWYWx1ZSIsImNvbmZpZ0tleSIsImlzT3BlcmF0aW9uYWxFcnJvciIsInRvRXJyb3JSZXNwb25zZSIsIndpdGhDb250ZXh0IiwiT2JqZWN0IiwiYXNzaWduIiwid2l0aEVycm9ySGFuZGxpbmciLCJmbiIsImFyZ3MiLCJjb25zb2xlIiwid2l0aFJldHJ5IiwibWF4QXR0ZW1wdHMiLCJiYXNlRGVsYXkiLCJzaG91bGRSZXRyeSIsImxhc3RFcnJvciIsImF0dGVtcHQiLCJkZWxheSIsInBvdyIsInJhbmRvbSIsIndhcm4iLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/errors.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/logger.ts":
/*!***********************!*\
  !*** ./lib/logger.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CategoryLogger: function() { return /* binding */ CategoryLogger; },\n/* harmony export */   Logger: function() { return /* binding */ Logger; },\n/* harmony export */   createCategoryLogger: function() { return /* binding */ createCategoryLogger; },\n/* harmony export */   createLogger: function() { return /* binding */ createLogger; },\n/* harmony export */   createRequestLogger: function() { return /* binding */ createRequestLogger; },\n/* harmony export */   getLogger: function() { return /* binding */ getLogger; },\n/* harmony export */   logMethod: function() { return /* binding */ logMethod; }\n/* harmony export */ });\n/**\n * Comprehensive logging system following clean code principles\n * Provides structured logging with different levels and contexts\n */ // ============================================================================\n// LOGGING TYPES AND INTERFACES\n// ============================================================================\n/**\n * Log level hierarchy for message importance\n * Enables filtering and routing of log messages\n */ // ============================================================================\n// LOGGER CLASS IMPLEMENTATION\n// ============================================================================\n/**\n * Main logger class with comprehensive logging capabilities\n * Provides structured logging with multiple output targets\n */ class Logger {\n    /**\n   * Gets singleton logger instance\n   * Ensures consistent logging throughout the application\n   */ static getInstance(config) {\n        if (!Logger.instance) {\n            Logger.instance = new Logger(config);\n        }\n        return Logger.instance;\n    }\n    /**\n   * Updates logger configuration\n   * Allows runtime configuration changes\n   */ updateConfig(config) {\n        this.config = {\n            ...this.config,\n            ...config\n        };\n    }\n    // ============================================================================\n    // CORE LOGGING METHODS\n    // ============================================================================\n    /**\n   * Logs debug messages for development and troubleshooting\n   * Detailed information for debugging purposes\n   */ debug(message) {\n        let context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, category = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"general\";\n        this.log(\"debug\", category, message, context);\n    }\n    /**\n   * Logs informational messages for general application flow\n   * Normal application events and milestones\n   */ info(message) {\n        let context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, category = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"general\";\n        this.log(\"info\", category, message, context);\n    }\n    /**\n   * Logs warning messages for potential issues\n   * Situations that need attention but don't stop execution\n   */ warn(message) {\n        let context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, category = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"general\";\n        this.log(\"warn\", category, message, context);\n    }\n    /**\n   * Logs error messages for handled exceptions\n   * Errors that are caught and handled gracefully\n   */ error(message, error) {\n        let context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, category = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : \"general\";\n        const errorContext = error ? {\n            ...context,\n            error: {\n                name: error.name,\n                message: error.message,\n                stack: this.config.enableStackTrace ? error.stack : undefined,\n                code: error.code\n            }\n        } : context;\n        this.log(\"error\", category, message, errorContext);\n    }\n    /**\n   * Logs fatal messages for critical system failures\n   * Severe errors that may cause application shutdown\n   */ fatal(message, error) {\n        let context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, category = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : \"system\";\n        const errorContext = error ? {\n            ...context,\n            error: {\n                name: error.name,\n                message: error.message,\n                stack: this.config.enableStackTrace ? error.stack : undefined,\n                code: error.code\n            }\n        } : context;\n        this.log(\"fatal\", category, message, errorContext);\n    }\n    // ============================================================================\n    // SPECIALIZED LOGGING METHODS\n    // ============================================================================\n    /**\n   * Logs authentication events with security context\n   * Tracks login attempts, failures, and security events\n   */ auth(event, userId) {\n        let context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, success = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;\n        const level = success ? \"info\" : \"warn\";\n        const message = \"Authentication \".concat(event, \": \").concat(success ? \"Success\" : \"Failed\");\n        this.log(level, \"auth\", message, {\n            ...context,\n            userId,\n            event,\n            success,\n            timestamp: new Date().toISOString()\n        });\n    }\n    /**\n   * Logs booking-related events with business context\n   * Tracks booking lifecycle and business operations\n   */ booking(event, bookingId, userId) {\n        let context = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n        this.log(\"info\", \"booking\", \"Booking \".concat(event), {\n            ...context,\n            bookingId,\n            userId,\n            event,\n            timestamp: new Date().toISOString()\n        });\n    }\n    /**\n   * Logs payment events with financial context\n   * Tracks payment processing and financial transactions\n   */ payment(event, amount, currency, paymentId) {\n        let context = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};\n        this.log(\"info\", \"payment\", \"Payment \".concat(event), {\n            ...context,\n            event,\n            amount,\n            currency,\n            paymentId,\n            timestamp: new Date().toISOString()\n        });\n    }\n    /**\n   * Logs API requests and responses with performance metrics\n   * Tracks API usage and performance characteristics\n   */ api(method, endpoint, statusCode, duration) {\n        let context = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};\n        const level = statusCode >= 400 ? \"error\" : \"info\";\n        const message = \"API \".concat(method, \" \").concat(endpoint, \" - \").concat(statusCode, \" (\").concat(duration, \"ms)\");\n        this.log(level, \"api\", message, {\n            ...context,\n            method,\n            endpoint,\n            statusCode,\n            duration,\n            timestamp: new Date().toISOString()\n        });\n    }\n    /**\n   * Logs database operations with query context\n   * Tracks database performance and operations\n   */ database(operation, table, duration, rowsAffected) {\n        let context = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};\n        const message = \"Database \".concat(operation, \" on \").concat(table, \" (\").concat(duration, \"ms)\");\n        this.log(\"info\", \"database\", message, {\n            ...context,\n            operation,\n            table,\n            duration,\n            rowsAffected,\n            timestamp: new Date().toISOString()\n        });\n    }\n    /**\n   * Logs user actions for audit trail\n   * Tracks user behavior and system usage\n   */ userAction(action, userId, resourceType, resourceId) {\n        let context = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};\n        this.log(\"info\", \"user_action\", \"User action: \".concat(action), {\n            ...context,\n            action,\n            userId,\n            resourceType,\n            resourceId,\n            timestamp: new Date().toISOString()\n        });\n    }\n    /**\n   * Logs security events for monitoring and alerting\n   * Tracks security-related events and potential threats\n   */ security(event, severity) {\n        let context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        const level = severity === \"critical\" ? \"fatal\" : severity === \"high\" ? \"error\" : severity === \"medium\" ? \"warn\" : \"info\";\n        this.log(level, \"security\", \"Security event: \".concat(event), {\n            ...context,\n            event,\n            severity,\n            timestamp: new Date().toISOString()\n        });\n    }\n    // ============================================================================\n    // PERFORMANCE MONITORING\n    // ============================================================================\n    /**\n   * Starts performance measurement for an operation\n   * Begins tracking execution time and resource usage\n   */ startPerformanceTimer(operationId) {\n        if (!this.config.enablePerformanceLogging) return;\n        const metrics = {\n            startTime: performance.now(),\n            memoryBefore: this.getMemoryUsage()\n        };\n        this.performanceMap.set(operationId, metrics);\n    }\n    /**\n   * Ends performance measurement and logs results\n   * Completes timing and logs performance metrics\n   */ endPerformanceTimer(operationId, operation) {\n        let context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        if (!this.config.enablePerformanceLogging) return;\n        const metrics = this.performanceMap.get(operationId);\n        if (!metrics) {\n            this.warn(\"Performance timer not found for operation: \".concat(operationId));\n            return;\n        }\n        metrics.endTime = performance.now();\n        metrics.duration = metrics.endTime - metrics.startTime;\n        metrics.memoryAfter = this.getMemoryUsage();\n        metrics.memoryDelta = metrics.memoryAfter - (metrics.memoryBefore || 0);\n        this.log(\"info\", \"performance\", \"Performance: \".concat(operation), {\n            ...context,\n            operationId,\n            operation,\n            duration: Math.round(metrics.duration * 100) / 100,\n            memoryDelta: metrics.memoryDelta,\n            timestamp: new Date().toISOString()\n        });\n        this.performanceMap.delete(operationId);\n    }\n    /**\n   * Wraps a function with performance monitoring\n   * Automatically measures function execution time\n   */ withPerformanceMonitoring(operation, fn) {\n        var _this = this;\n        return function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            const operationId = \"\".concat(operation, \"-\").concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n            _this.startPerformanceTimer(operationId);\n            try {\n                const result = fn(...args);\n                if (result instanceof Promise) {\n                    return result.finally(()=>{\n                        _this.endPerformanceTimer(operationId, operation);\n                    });\n                } else {\n                    _this.endPerformanceTimer(operationId, operation);\n                    return result;\n                }\n            } catch (error) {\n                _this.endPerformanceTimer(operationId, operation, {\n                    error: true\n                });\n                throw error;\n            }\n        };\n    }\n    // ============================================================================\n    // CORE LOGGING IMPLEMENTATION\n    // ============================================================================\n    /**\n   * Core logging method that handles all log entries\n   * Processes and routes log messages to appropriate outputs\n   */ log(level, category, message) {\n        let context = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n        // Check if log level meets minimum threshold\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        // Sanitize sensitive data from context\n        const sanitizedContext = this.sanitizeContext(context);\n        // Create structured log entry\n        const logEntry = {\n            timestamp: new Date().toISOString(),\n            level,\n            category,\n            message,\n            context: sanitizedContext,\n            sessionId: this.getSessionId(),\n            userId: this.getUserId(sanitizedContext),\n            requestId: this.getRequestId(sanitizedContext),\n            correlationId: this.getCorrelationId(sanitizedContext),\n            source: this.getSourceInfo(),\n            performance: this.getPerformanceInfo(),\n            error: sanitizedContext.error\n        };\n        // Output to configured targets\n        this.outputLog(logEntry);\n        // Buffer for batch processing if needed\n        this.bufferLog(logEntry);\n    }\n    /**\n   * Determines if a log entry should be processed based on level\n   * Implements log level filtering\n   */ shouldLog(level) {\n        const levels = {\n            debug: 0,\n            info: 1,\n            warn: 2,\n            error: 3,\n            fatal: 4\n        };\n        return levels[level] >= levels[this.config.level];\n    }\n    /**\n   * Removes sensitive information from log context\n   * Protects sensitive data from being logged\n   */ sanitizeContext(context) {\n        var _this = this;\n        const sanitized = {\n            ...context\n        };\n        const sanitizeObject = function(obj) {\n            let path = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n            if (obj === null || typeof obj !== \"object\") {\n                return obj;\n            }\n            if (Array.isArray(obj)) {\n                return obj.map((item, index)=>sanitizeObject(item, \"\".concat(path, \"[\").concat(index, \"]\")));\n            }\n            const result = {};\n            for (const [key, value] of Object.entries(obj)){\n                const currentPath = path ? \"\".concat(path, \".\").concat(key) : key;\n                if (_this.config.sensitiveFields.some((field)=>key.toLowerCase().includes(field.toLowerCase()) || currentPath.toLowerCase().includes(field.toLowerCase()))) {\n                    result[key] = \"[REDACTED]\";\n                } else {\n                    result[key] = sanitizeObject(value, currentPath);\n                }\n            }\n            return result;\n        };\n        return sanitizeObject(sanitized);\n    }\n    /**\n   * Outputs log entry to configured targets\n   * Routes logs to console, file, or remote endpoints\n   */ outputLog(logEntry) {\n        if (this.config.enableConsole) {\n            this.outputToConsole(logEntry);\n        }\n        if (this.config.enableFile) {\n            this.outputToFile(logEntry);\n        }\n        if (this.config.enableRemote) {\n            this.outputToRemote(logEntry);\n        }\n    }\n    /**\n   * Outputs log entry to console with appropriate formatting\n   * Provides colored console output for development\n   */ outputToConsole(logEntry) {\n        const colors = {\n            debug: \"\\x1b[36m\",\n            info: \"\\x1b[32m\",\n            warn: \"\\x1b[33m\",\n            error: \"\\x1b[31m\",\n            fatal: \"\\x1b[35m\" // Magenta\n        };\n        const reset = \"\\x1b[0m\";\n        const color = colors[logEntry.level] || \"\";\n        if (this.config.format === \"json\") {\n            console.log(\"\".concat(color).concat(JSON.stringify(logEntry, null, 2)).concat(reset));\n        } else {\n            const timestamp = logEntry.timestamp;\n            const level = logEntry.level.toUpperCase().padEnd(5);\n            const category = logEntry.category.toUpperCase().padEnd(12);\n            const message = logEntry.message;\n            const context = Object.keys(logEntry.context).length > 0 ? \" | \".concat(JSON.stringify(logEntry.context)) : \"\";\n            console.log(\"\".concat(color, \"[\").concat(timestamp, \"] \").concat(level, \" \").concat(category, \" \").concat(message).concat(context).concat(reset));\n        }\n    }\n    /**\n   * Outputs log entry to file (placeholder for file logging)\n   * Would implement file rotation and management\n   */ outputToFile(logEntry) {\n        // File logging implementation would go here\n        // This would include file rotation, compression, etc.\n        console.log(\"File logging not implemented in browser environment\");\n    }\n    /**\n   * Outputs log entry to remote endpoint (placeholder for remote logging)\n   * Would implement remote log aggregation\n   */ outputToRemote(logEntry) {\n        // Remote logging implementation would go here\n        // This would batch and send logs to external services\n        console.log(\"Remote logging not implemented\");\n    }\n    /**\n   * Buffers log entry for batch processing\n   * Enables efficient log processing and analysis\n   */ bufferLog(logEntry) {\n        this.logBuffer.push(logEntry);\n        // Keep buffer size manageable\n        if (this.logBuffer.length > 1000) {\n            this.logBuffer = this.logBuffer.slice(-500); // Keep last 500 entries\n        }\n    }\n    // ============================================================================\n    // UTILITY METHODS\n    // ============================================================================\n    /**\n   * Gets current session ID from context or generates one\n   * Provides session tracking across log entries\n   */ getSessionId() {\n        // In a real application, this would get the session ID from context\n        return  true ? sessionStorage.getItem(\"sessionId\") || undefined : 0;\n    }\n    /**\n   * Extracts user ID from log context\n   * Provides user tracking in log entries\n   */ getUserId(context) {\n        var _context_user;\n        return context.userId || ((_context_user = context.user) === null || _context_user === void 0 ? void 0 : _context_user.id);\n    }\n    /**\n   * Extracts request ID from log context\n   * Provides request tracking across log entries\n   */ getRequestId(context) {\n        return context.requestId;\n    }\n    /**\n   * Extracts correlation ID from log context\n   * Provides distributed tracing capabilities\n   */ getCorrelationId(context) {\n        return context.correlationId;\n    }\n    /**\n   * Gets source code information for debugging\n   * Provides file and line information when available\n   */ getSourceInfo() {\n        // In a real implementation, this could use stack trace analysis\n        // to determine the calling file and line number\n        return {};\n    }\n    /**\n   * Gets current performance information\n   * Provides system performance context\n   */ getPerformanceInfo() {\n        if (!this.config.enablePerformanceLogging) {\n            return undefined;\n        }\n        return {\n            memoryUsage: this.getMemoryUsage()\n        };\n    }\n    /**\n   * Gets current memory usage information\n   * Provides memory consumption metrics\n   */ getMemoryUsage() {\n        if (typeof performance !== \"undefined\" && performance.memory) {\n            return performance.memory.usedJSHeapSize;\n        }\n        return 0;\n    }\n    /**\n   * Gets buffered log entries for analysis\n   * Provides access to recent log history\n   */ getLogBuffer() {\n        return [\n            ...this.logBuffer\n        ];\n    }\n    /**\n   * Clears the log buffer\n   * Resets log history for memory management\n   */ clearLogBuffer() {\n        this.logBuffer = [];\n    }\n    /**\n   * Gets current logger configuration\n   * Provides access to current settings\n   */ getConfig() {\n        return {\n            ...this.config\n        };\n    }\n    constructor(config = {}){\n        this.logBuffer = [];\n        this.performanceMap = new Map();\n        this.config = {\n            level: \"info\",\n            enableConsole: true,\n            enableFile: false,\n            enableRemote: false,\n            format: \"json\",\n            maxFileSize: 10 * 1024 * 1024,\n            maxFiles: 5,\n            sensitiveFields: [\n                \"password\",\n                \"token\",\n                \"apiKey\",\n                \"secret\",\n                \"creditCard\"\n            ],\n            enablePerformanceLogging: true,\n            enableStackTrace: true,\n            ...config\n        };\n    }\n}\n// ============================================================================\n// LOGGER FACTORY AND UTILITIES\n// ============================================================================\n/**\n * Creates a logger instance with default configuration\n * Provides convenient logger creation\n */ function createLogger(config) {\n    return new Logger(config);\n}\n/**\n * Gets the default logger instance\n * Provides global logger access\n */ function getLogger() {\n    return Logger.getInstance();\n}\n/**\n * Creates a category-specific logger\n * Provides domain-specific logging with preset category\n */ function createCategoryLogger(category, config) {\n    return new CategoryLogger(category, config);\n}\n/**\n * Category-specific logger wrapper\n * Simplifies logging for specific domains\n */ class CategoryLogger {\n    debug(message) {\n        let context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        this.logger.debug(message, context, this.category);\n    }\n    info(message) {\n        let context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        this.logger.info(message, context, this.category);\n    }\n    warn(message) {\n        let context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        this.logger.warn(message, context, this.category);\n    }\n    error(message, error) {\n        let context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        this.logger.error(message, error, context, this.category);\n    }\n    fatal(message, error) {\n        let context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        this.logger.fatal(message, error, context, this.category);\n    }\n    constructor(category, config){\n        this.logger = new Logger(config);\n        this.category = category;\n    }\n}\n// ============================================================================\n// LOGGING DECORATORS AND UTILITIES\n// ============================================================================\n/**\n * Decorator for automatic method logging\n * Provides transparent logging for class methods\n */ function logMethod() {\n    let category = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"general\", level = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"info\";\n    return function(target, propertyName, descriptor) {\n        const method = descriptor.value;\n        const logger = getLogger();\n        descriptor.value = function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            const className = target.constructor.name;\n            const methodName = propertyName;\n            const operationId = \"\".concat(className, \".\").concat(methodName, \"-\").concat(Date.now());\n            logger.startPerformanceTimer(operationId);\n            if (level === \"debug\") {\n                logger.debug(\"Entering \".concat(className, \".\").concat(methodName), {\n                    className,\n                    methodName,\n                    args: args.length\n                }, category);\n            } else if (level === \"info\") {\n                logger.info(\"Entering \".concat(className, \".\").concat(methodName), {\n                    className,\n                    methodName,\n                    args: args.length\n                }, category);\n            }\n            try {\n                const result = method.apply(this, args);\n                if (result instanceof Promise) {\n                    return result.then((value)=>{\n                        logger.endPerformanceTimer(operationId, \"\".concat(className, \".\").concat(methodName));\n                        if (level === \"debug\") {\n                            logger.debug(\"Exiting \".concat(className, \".\").concat(methodName, \" (success)\"), {\n                                className,\n                                methodName,\n                                success: true\n                            }, category);\n                        } else if (level === \"info\") {\n                            logger.info(\"Exiting \".concat(className, \".\").concat(methodName, \" (success)\"), {\n                                className,\n                                methodName,\n                                success: true\n                            }, category);\n                        }\n                        return value;\n                    }).catch((error)=>{\n                        logger.endPerformanceTimer(operationId, \"\".concat(className, \".\").concat(methodName), {\n                            error: true\n                        });\n                        logger.error(\"Error in \".concat(className, \".\").concat(methodName), error, {\n                            className,\n                            methodName\n                        }, category);\n                        throw error;\n                    });\n                } else {\n                    logger.endPerformanceTimer(operationId, \"\".concat(className, \".\").concat(methodName));\n                    if (level === \"debug\") {\n                        logger.debug(\"Exiting \".concat(className, \".\").concat(methodName, \" (success)\"), {\n                            className,\n                            methodName,\n                            success: true\n                        }, category);\n                    } else if (level === \"info\") {\n                        logger.info(\"Exiting \".concat(className, \".\").concat(methodName, \" (success)\"), {\n                            className,\n                            methodName,\n                            success: true\n                        }, category);\n                    }\n                    return result;\n                }\n            } catch (error) {\n                logger.endPerformanceTimer(operationId, \"\".concat(className, \".\").concat(methodName), {\n                    error: true\n                });\n                logger.error(\"Error in \".concat(className, \".\").concat(methodName), error, {\n                    className,\n                    methodName\n                }, category);\n                throw error;\n            }\n        };\n        return descriptor;\n    };\n}\n/**\n * Creates a request-scoped logger with correlation ID\n * Provides request tracking across the application\n */ function createRequestLogger(requestId, correlationId, userId) {\n    const logger = getLogger();\n    // Override the log method to include request context\n    const originalLog = logger.log.bind(logger);\n    logger.log = function(level, category, message) {\n        let context = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n        const enhancedContext = {\n            ...context,\n            requestId,\n            correlationId,\n            userId\n        };\n        return originalLog(level, category, message, enhancedContext);\n    };\n    return logger;\n}\n// Export default logger instance\n/* harmony default export */ __webpack_exports__[\"default\"] = (getLogger());\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/logger.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./utils/styling/tw.ts":
/*!*****************************!*\
  !*** ./utils/styling/tw.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alertClasses: function() { return /* binding */ alertClasses; },\n/* harmony export */   badgeClasses: function() { return /* binding */ badgeClasses; },\n/* harmony export */   buttonClasses: function() { return /* binding */ buttonClasses; },\n/* harmony export */   cardClasses: function() { return /* binding */ cardClasses; },\n/* harmony export */   containerClasses: function() { return /* binding */ containerClasses; },\n/* harmony export */   createClassComposer: function() { return /* binding */ createClassComposer; },\n/* harmony export */   createResponsiveComposer: function() { return /* binding */ createResponsiveComposer; },\n/* harmony export */   createStateComposer: function() { return /* binding */ createStateComposer; },\n/* harmony export */   flexClasses: function() { return /* binding */ flexClasses; },\n/* harmony export */   gridClasses: function() { return /* binding */ gridClasses; },\n/* harmony export */   headingClasses: function() { return /* binding */ headingClasses; },\n/* harmony export */   inputClasses: function() { return /* binding */ inputClasses; },\n/* harmony export */   navLinkClasses: function() { return /* binding */ navLinkClasses; },\n/* harmony export */   sectionClasses: function() { return /* binding */ sectionClasses; },\n/* harmony export */   textClasses: function() { return /* binding */ textClasses; },\n/* harmony export */   tw: function() { return /* binding */ tw; }\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n/**\n * Tailwind CSS class composition utility\n * Provides type-safe class merging and composition to avoid repetition\n * Following Rabwa's clean code standards with clear abstraction\n */ \n\n/**\n * Composes Tailwind CSS classes with intelligent merging\n * Handles conflicts and provides type-safe class composition\n * \n * @param inputs - Class values to compose (strings, objects, arrays, etc.)\n * @returns Merged and optimized class string\n */ function tw() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n/**\n * Creates a conditional class composer\n * Allows conditional class application with clean syntax\n * \n * @param baseClasses - Base classes that are always applied\n * @returns Function that accepts conditional classes\n */ function createClassComposer(baseClasses) {\n    return function() {\n        let conditionalClasses = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        const classes = [\n            baseClasses\n        ];\n        Object.entries(conditionalClasses).forEach((param)=>{\n            let [className, condition] = param;\n            if (condition) {\n                classes.push(className);\n            }\n        });\n        return tw(...classes);\n    };\n}\n/**\n * Creates a responsive class composer\n * Provides responsive class variants for different breakpoints\n * \n * @param baseClasses - Base classes for mobile\n * @param responsiveVariants - Classes for different breakpoints\n * @returns Function that generates responsive classes\n */ function createResponsiveComposer(baseClasses) {\n    let responsiveVariants = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    return ()=>{\n        const classes = [\n            baseClasses\n        ];\n        if (responsiveVariants.sm) classes.push(\"sm:\".concat(responsiveVariants.sm));\n        if (responsiveVariants.md) classes.push(\"md:\".concat(responsiveVariants.md));\n        if (responsiveVariants.lg) classes.push(\"lg:\".concat(responsiveVariants.lg));\n        if (responsiveVariants.xl) classes.push(\"xl:\".concat(responsiveVariants.xl));\n        if (responsiveVariants[\"2xl\"]) classes.push(\"2xl:\".concat(responsiveVariants[\"2xl\"]));\n        return tw(...classes);\n    };\n}\n/**\n * Creates a state-based class composer\n * Provides classes for different component states\n * \n * @param baseClasses - Base classes\n * @param stateClasses - Classes for different states\n * @returns Function that accepts current state\n */ function createStateComposer(baseClasses) {\n    let stateClasses = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    return function() {\n        let currentState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        const classes = [\n            baseClasses\n        ];\n        if (currentState.isHovered && stateClasses.hover) classes.push(stateClasses.hover);\n        if (currentState.isFocused && stateClasses.focus) classes.push(stateClasses.focus);\n        if (currentState.isActive && stateClasses.active) classes.push(stateClasses.active);\n        if (currentState.isDisabled && stateClasses.disabled) classes.push(stateClasses.disabled);\n        if (currentState.isLoading && stateClasses.loading) classes.push(stateClasses.loading);\n        if (currentState.hasError && stateClasses.error) classes.push(stateClasses.error);\n        if (currentState.isSuccess && stateClasses.success) classes.push(stateClasses.success);\n        if (currentState.hasWarning && stateClasses.warning) classes.push(stateClasses.warning);\n        if (currentState.hasInfo && stateClasses.info) classes.push(stateClasses.info);\n        return tw(...classes);\n    };\n}\n// ============================================================================\n// PREDEFINED CLASS COMPOSERS\n// ============================================================================\n/**\n * Button class composer with comprehensive state handling\n * Provides consistent button styling across the application\n */ const buttonClasses = createStateComposer(\"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background\", {\n    hover: \"hover:bg-accent hover:text-accent-foreground\",\n    focus: \"focus:ring-2 focus:ring-primary-500\",\n    active: \"active:scale-95\",\n    disabled: \"opacity-50 cursor-not-allowed\",\n    loading: \"animate-pulse\"\n});\n/**\n * Input class composer with validation states\n * Provides consistent input styling with error handling\n */ const inputClasses = createStateComposer(\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", {\n    focus: \"focus:ring-2 focus:ring-primary-500 focus:border-primary-500\",\n    error: \"border-red-500 focus:ring-red-500\",\n    success: \"border-green-500 focus:ring-green-500\"\n});\n/**\n * Card class composer with responsive design\n * Provides consistent card styling with responsive behavior\n */ const cardClasses = createResponsiveComposer(\"rounded-lg border bg-card text-card-foreground shadow-sm\", {\n    sm: \"p-4\",\n    md: \"p-6\",\n    lg: \"p-8\"\n});\n/**\n * Navigation link class composer\n * Provides consistent navigation styling with active states\n */ const navLinkClasses = createStateComposer(\"text-sm font-medium transition-colors hover:text-primary\", {\n    hover: \"hover:text-primary-600\",\n    active: \"text-primary-600 font-semibold\",\n    focus: \"focus:text-primary-600 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2\"\n});\n/**\n * Container class composer with responsive max-widths\n * Provides consistent container sizing across breakpoints\n */ const containerClasses = createResponsiveComposer(\"w-full px-4 mx-auto\", {\n    sm: \"max-w-sm\",\n    md: \"max-w-md\",\n    lg: \"max-w-lg\",\n    xl: \"max-w-xl\",\n    \"2xl\": \"max-w-2xl\"\n});\n/**\n * Section class composer with consistent spacing\n * Provides consistent section styling with responsive padding\n */ const sectionClasses = createResponsiveComposer(\"py-12\", {\n    sm: \"py-16\",\n    md: \"py-20\",\n    lg: \"py-24\",\n    xl: \"py-28\"\n});\n/**\n * Heading class composer with responsive typography\n * Provides consistent heading styles with responsive sizing\n */ const headingClasses = createResponsiveComposer(\"font-bold text-gray-900\", {\n    sm: \"text-2xl\",\n    md: \"text-3xl\",\n    lg: \"text-4xl\",\n    xl: \"text-5xl\"\n});\n/**\n * Text class composer with responsive sizing\n * Provides consistent text styling with responsive behavior\n */ const textClasses = createResponsiveComposer(\"text-gray-600 leading-relaxed\", {\n    sm: \"text-sm\",\n    md: \"text-base\",\n    lg: \"text-lg\",\n    xl: \"text-xl\"\n});\n/**\n * Grid class composer with responsive columns\n * Provides consistent grid layouts with responsive behavior\n */ const gridClasses = createResponsiveComposer(\"grid gap-4\", {\n    sm: \"grid-cols-1\",\n    md: \"grid-cols-2\",\n    lg: \"grid-cols-3\",\n    xl: \"grid-cols-4\"\n});\n/**\n * Flex class composer with responsive behavior\n * Provides consistent flex layouts with responsive adjustments\n */ const flexClasses = createResponsiveComposer(\"flex flex-col\", {\n    sm: \"flex-row\",\n    md: \"items-center\",\n    lg: \"justify-between\"\n});\n/**\n * Badge class composer with variant support\n * Provides consistent badge styling with different variants\n */ const badgeClasses = createStateComposer(\"inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium\", {\n    hover: \"hover:bg-opacity-80\",\n    focus: \"focus:outline-none focus:ring-2 focus:ring-offset-2\"\n});\n/**\n * Alert class composer with type variants\n * Provides consistent alert styling with different message types\n */ const alertClasses = createStateComposer(\"relative w-full rounded-lg border p-4\", {\n    error: \"border-red-200 bg-red-50 text-red-800\",\n    success: \"border-green-200 bg-green-50 text-green-800\",\n    warning: \"border-yellow-200 bg-yellow-50 text-yellow-800\",\n    info: \"border-blue-200 bg-blue-50 text-blue-800\"\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/styling/tw.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV = jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/MjdhYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs":
/*!*****************************************!*\
  !*** ./node_modules/clsx/dist/clsx.mjs ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clsx: function() { return /* binding */ clsx; }\n/* harmony export */ });\nfunction r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}/* harmony default export */ __webpack_exports__[\"default\"] = (clsx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbHN4L2Rpc3QvY2xzeC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWMsYUFBYSwrQ0FBK0MsZ0RBQWdELGVBQWUsUUFBUSxJQUFJLDBDQUEwQyx5Q0FBeUMsU0FBZ0IsZ0JBQWdCLHdDQUF3QyxJQUFJLG1EQUFtRCxTQUFTLCtEQUFlLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Nsc3gvZGlzdC9jbHN4Lm1qcz9mYzY4Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHIoZSl7dmFyIHQsZixuPVwiXCI7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGV8fFwibnVtYmVyXCI9PXR5cGVvZiBlKW4rPWU7ZWxzZSBpZihcIm9iamVjdFwiPT10eXBlb2YgZSlpZihBcnJheS5pc0FycmF5KGUpKXt2YXIgbz1lLmxlbmd0aDtmb3IodD0wO3Q8bzt0KyspZVt0XSYmKGY9cihlW3RdKSkmJihuJiYobis9XCIgXCIpLG4rPWYpfWVsc2UgZm9yKGYgaW4gZSllW2ZdJiYobiYmKG4rPVwiIFwiKSxuKz1mKTtyZXR1cm4gbn1leHBvcnQgZnVuY3Rpb24gY2xzeCgpe2Zvcih2YXIgZSx0LGY9MCxuPVwiXCIsbz1hcmd1bWVudHMubGVuZ3RoO2Y8bztmKyspKGU9YXJndW1lbnRzW2ZdKSYmKHQ9cihlKSkmJihuJiYobis9XCIgXCIpLG4rPXQpO3JldHVybiBufWV4cG9ydCBkZWZhdWx0IGNsc3g7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/tailwind-merge/dist/bundle-mjs.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTailwindMerge: function() { return /* binding */ createTailwindMerge; },\n/* harmony export */   extendTailwindMerge: function() { return /* binding */ extendTailwindMerge; },\n/* harmony export */   fromTheme: function() { return /* binding */ fromTheme; },\n/* harmony export */   getDefaultConfig: function() { return /* binding */ getDefaultConfig; },\n/* harmony export */   mergeConfigs: function() { return /* binding */ mergeConfigs; },\n/* harmony export */   twJoin: function() { return /* binding */ twJoin; },\n/* harmony export */   twMerge: function() { return /* binding */ twMerge; },\n/* harmony export */   validators: function() { return /* binding */ validators; }\n/* harmony export */ });\nconst CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\n * Exported for testing only\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    prefix\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\nconst getPrefixedClassGroupEntries = (classGroupEntries, prefix) => {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\n    const prefixedClassGroup = classGroup.map(classDefinition => {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n};\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst createParseClassName = config => {\n  const {\n    separator,\n    experimentalParseClassName\n  } = config;\n  const isSeparatorSingleCharacter = separator.length === 1;\n  const firstSeparatorCharacter = separator[0];\n  const separatorLength = separator.length;\n  // parseClassName inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  const parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (experimentalParseClassName) {\n    return className => experimentalParseClassName({\n      className,\n      parseClassName\n    });\n  }\n  return parseClassName;\n};\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nconst sortModifiers = modifiers => {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  const sortedModifiers = [];\n  let unsortedModifiers = [];\n  modifiers.forEach(modifier => {\n    const isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push(...unsortedModifiers.sort());\n  return sortedModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isLength = value => isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, 'length', isLengthOnly);\nconst isNumber = value => Boolean(value) && !Number.isNaN(Number(value));\nconst isArbitraryNumber = value => getIsArbitraryValue(value, 'number', isNumber);\nconst isInteger = value => Boolean(value) && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\nconst isArbitrarySize = value => getIsArbitraryValue(value, sizeLabels, isNever);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, 'position', isNever);\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\nconst isArbitraryImage = value => getIsArbitraryValue(value, imageLabels, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, '', isShadow);\nconst isAny = () => true;\nconst getIsArbitraryValue = (value, label, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isInteger,\n  isLength,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  const colors = fromTheme('colors');\n  const spacing = fromTheme('spacing');\n  const blur = fromTheme('blur');\n  const brightness = fromTheme('brightness');\n  const borderColor = fromTheme('borderColor');\n  const borderRadius = fromTheme('borderRadius');\n  const borderSpacing = fromTheme('borderSpacing');\n  const borderWidth = fromTheme('borderWidth');\n  const contrast = fromTheme('contrast');\n  const grayscale = fromTheme('grayscale');\n  const hueRotate = fromTheme('hueRotate');\n  const invert = fromTheme('invert');\n  const gap = fromTheme('gap');\n  const gradientColorStops = fromTheme('gradientColorStops');\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  const inset = fromTheme('inset');\n  const margin = fromTheme('margin');\n  const opacity = fromTheme('opacity');\n  const padding = fromTheme('padding');\n  const saturate = fromTheme('saturate');\n  const scale = fromTheme('scale');\n  const sepia = fromTheme('sepia');\n  const skew = fromTheme('skew');\n  const space = fromTheme('space');\n  const translate = fromTheme('translate');\n  const getOverscroll = () => ['auto', 'contain', 'none'];\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\n  return {\n    cacheSize: 500,\n    separator: ':',\n    theme: {\n      colors: [isAny],\n      spacing: [isLength, isArbitraryLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumberAndArbitrary(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmptyAndArbitrary(),\n      contrast: getNumberAndArbitrary(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumberAndArbitrary(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumberAndArbitrary(),\n      scale: getNumberAndArbitrary(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: [...getPositions(), isArbitraryValue]\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: [inset]\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: [inset]\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: ['auto', isInteger, isArbitraryValue]\n      }],\n      // Flexbox and Grid\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: ['normal', ...getAlign()]\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...getAlign(), 'baseline']\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': [...getAlign(), 'baseline']\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: [padding]\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: [padding]\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: [margin]\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: [margin]\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/size\n       */\n      size: [{\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\n       * Placeholder Opacity\n       * @see https://tailwindcss.com/docs/placeholder-opacity\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\n       * Text Opacity\n       * @see https://tailwindcss.com/docs/text-opacity\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...getLineStyles(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength, isArbitraryValue]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Opacity\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/background-opacity\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: [...getPositions(), isArbitraryPosition]\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\n       * Border Opacity\n       * @see https://tailwindcss.com/docs/border-opacity\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...getLineStyles(), 'hidden']\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Divide Opacity\n       * @see https://tailwindcss.com/docs/divide-opacity\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/divide-style\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-s': [{\n        'border-s': [borderColor]\n      }],\n      /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-e': [{\n        'border-e': [borderColor]\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: ['', ...getLineStyles()]\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: [isLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w': [{\n        ring: getLengthWithEmptyAndArbitrary()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/ring-color\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\n       * Ring Opacity\n       * @see https://tailwindcss.com/docs/ring-opacity\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://tailwindcss.com/docs/ring-offset-width\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://tailwindcss.com/docs/ring-offset-color\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow-color\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...getBlendModes(), 'plus-lighter', 'plus-darker']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\n       * Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\n       * Backdrop Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n      /**\n       * Tranisition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\n       * Screen Readers\n       * @see https://tailwindcss.com/docs/screen-readers\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n};\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  separator,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'separator', separator);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  for (const configKey in override) {\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\n  }\n  for (const key in extend) {\n    mergeConfigProperties(baseConfig[key], extend[key]);\n  }\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      const mergeValue = mergeObject[key];\n      if (mergeValue !== undefined) {\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\n      }\n    }\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\n\n//# sourceMappingURL=bundle-mjs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fnasher%2FDocuments%2FWork%2FRABWA%2F%D8%B9%D9%82%D9%88%D8%AF%2F%D9%82%D8%A7%D8%B9%D8%A9%20%D9%85%D8%A7%D9%81%D9%8A%D9%80%D9%80%D9%80%D9%80%D8%B1%D8%A7%2Fwebsite%2Ftest%201%2Fapp%2Fservices%2Fpage.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);